{
	"info": {
		"_postman_id": "15381251-3014f588-8c03-471f-b583-b0e5474a4393",
		"name": "General MIS API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Legal Entity",
			"item": [
				{
					"name": "Legal Entity",
					"item": [
						{
							"name": "dummy_create_legal_entity",
							"id": "15381251-72b63685-1d23-435f-a80f-34db08ad833f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"edrpou\": \"35300330\",\r\n    \"type\": \"PHARMACY\",\r\n    \"residence_address\": {\r\n        \"apartment\": \"23\",\r\n        \"area\": \"АВТОНОМНА РЕСПУБЛІКА КРИМ\",\r\n        \"building\": \"15\",\r\n        \"country\": \"UA\",\r\n        \"region\": \"ЄВПАТОРІЯ\",\r\n        \"settlement\": \"ЗАОЗЕРНЕ\",\r\n        \"settlement_id\": \"6067b193-6e79-435c-a13b-e6b53e65cbdd\",\r\n        \"settlement_type\": \"SETTLEMENT\",\r\n        \"street\": \"II Лісопарківський\",\r\n        \"street_type\": \"STREET\",\r\n        \"type\": \"RESIDENCE\",\r\n        \"zip\": \"02090\"\r\n    },\r\n    \"phones\": [\r\n        {\r\n            \"number\": \"+380634390602\",\r\n            \"type\": \"MOBILE\"\r\n        }\r\n    ],\r\n    \"email\": \"test35300330.pharma@i.ua\",\r\n    \"website\": \"www.msp.com.ua\",\r\n    \"receiver_funds_code\": \"12345\",\r\n    \"beneficiary\": \"Богданенко Африкан Свиридович\",\r\n    \"owner\": {\r\n        \"first_name\": \"Олександр-Михайло\",\r\n        \"last_name\": \"Кравченко/Іванов\",\r\n        \"second_name\": \"Петрович\",\r\n        \"tax_id\": \"2934511101\",\r\n        \"no_tax_id\": true,\r\n        \"birth_date\": \"1988-11-25\",\r\n        \"gender\": \"MALE\",\r\n        \"email\": \"test35300330.pharma@i.ua\",\r\n        \"documents\": [\r\n            {\r\n                \"issued_at\": \"2017-02-28\",\r\n                \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\r\n                \"number\": \"НВ311165\",\r\n                \"type\": \"PASSPORT\"\r\n            }\r\n        ],\r\n        \"phones\": [\r\n            {\r\n                \"number\": \"+380634390602\",\r\n                \"type\": \"MOBILE\"\r\n            }\r\n        ],\r\n        \"position\": \"P1\"\r\n    },\r\n    \"accreditation\": {\r\n        \"category\": \"SECOND\",\r\n        \"issued_date\": \"2017-02-28\",\r\n        \"expiry_date\": \"2017-02-28\",\r\n        \"order_no\": \"fd123443\",\r\n        \"order_date\": \"2017-02-28\"\r\n    },\r\n    \"license\": {\r\n        \"active_from_date\": \"2017-02-28\",\r\n        \"expiry_date\": \"2032-12-31\",\r\n        \"issued_by\": \"Кваліфікацйна комісія\",\r\n        \"issued_date\": \"2017-02-28\",\r\n        \"license_number\": \"КО1234432\",\r\n        \"order_no\": \"ВА432345\",\r\n        \"type\": \"PHARMACY\",\r\n        \"what_licensed\": \"Аптека\"\r\n    },\r\n    \"archive\": [\r\n        {\r\n            \"date\": \"2022-02-28\",\r\n            \"place\": \"вул. Грушевського 15\"\r\n        }\r\n    ],\r\n    \"security\": {\r\n        \"redirect_uri\": \"https://test89.com\"\r\n    },\r\n    \"public_offer\": {\r\n        \"consent_text\": \"Consent text\",\r\n        \"consent\": true\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Create/Update LE",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6a3b83e-e14e-46e1-bf64-3f46a1a9baa4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"let jsonData;\r",
											"\r",
											"try {\r",
											"    jsonData = pm.response.json();\r",
											"} catch (e) {\r",
											"    console.error(\"Invalid JSON response\", e);\r",
											"    jsonData = {};\r",
											"}\r",
											"\r",
											"const defaultVal = \"<<undefined>>\";\r",
											"\r",
											"function setEnvIfDefined(key, newValue) {\r",
											"    if (newValue !== undefined) {\r",
											"        pm.environment.set(key, newValue);\r",
											"    }\r",
											"    // Якщо undefined — не змінюємо існуюче значення\r",
											"}\r",
											"\r",
											"// Отримуємо значення з відповіді\r",
											"const legal_entity_id = jsonData?.data?.id;\r",
											"const owner_email = jsonData?.data?.email;\r",
											"const client_secret = jsonData?.urgent?.security?.client_secret;\r",
											"const redirect_uri = jsonData?.urgent?.security?.redirect_uri;\r",
											"\r",
											"// Записуємо лише якщо є нові значення\r",
											"setEnvIfDefined(\"legal_entity_id\", legal_entity_id);\r",
											"setEnvIfDefined(\"owner_email\", owner_email);\r",
											"setEnvIfDefined(\"client_secret\", client_secret);\r",
											"setEnvIfDefined(\"redirect_uri\", redirect_uri);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// const logRequestBody = {\r",
											"//   responseBody: JSON.stringify({\r",
											"//     data: {\r",
											"//       id: jsonData.data.id || \"unknown-id\",\r",
											"//       name: jsonData.data.edr?.name || \"unknown-name\",\r",
											"//       edrpou: jsonData.data.edrpou || \"unknown-edrpou\",\r",
											"//       type: jsonData.data.type || \"unknown-type\",\r",
											"//       email: jsonData.data.email || \"unknown-email\",\r",
											"//     },\r",
											"//     urgent: {\r",
											"//       security: {\r",
											"//         client_secret: jsonData.urgent?.security?.client_secret || \"unknown-client-secret\",\r",
											"//         redirect_uri: jsonData.urgent?.security?.redirect_uri || \"unknown-redirect-uri\",\r",
											"//       },\r",
											"//     },\r",
											"//   }),\r",
											"// };\r",
											"\r",
											"// pm.sendRequest({\r",
											"//   url: \"http://localhost:3000/log-legal-entity-update\",\r",
											"//   method: \"POST\",\r",
											"//   header: {\r",
											"//     \"Content-Type\": \"application/json\",\r",
											"//   },\r",
											"//   body: {\r",
											"//     mode: \"raw\",\r",
											"//     raw: JSON.stringify(logRequestBody),\r",
											"//   },\r",
											"// }, function (err, res) {\r",
											"//   if (err) {\r",
											"//     console.error(\"Log request error:\", err);\r",
											"//   } else {\r",
											"//     console.log(\"Log request response:\", res.status, res.text());\r",
											"//     pm.test(\"Log request status is 200\", () => {\r",
											"//       pm.expect(res).to.have.property(\"code\", 200);\r",
											"//     });\r",
											"//   }\r",
											"// });\r",
											"\r",
											"const legalEntity = jsonData.data || {};\r",
											"const security = jsonData.urgent?.security || {};\r",
											"\r",
											"const entityName = legalEntity.edr?.name || \"Невідомо\";\r",
											"const entityId = legalEntity.id || \"Невідомо\";\r",
											"const edrpou = legalEntity.edrpou || \"Невідомо\";\r",
											"const entityType = legalEntity.type || \"Невідомо\";\r",
											"const email = legalEntity.email || \"Невідомо\";\r",
											"const clientSecret = security.client_secret || \"Невідомо\";\r",
											"const redirectUri = security.redirect_uri || \"Невідомо\";\r",
											"\r",
											"const chatMessage = {\r",
											"    text: `✅ Оновлено заклад:\r",
											"- Назва: *${entityName}*\r",
											"- ID: ${entityId}\r",
											"- ЄДРПОУ: ${edrpou}\r",
											"- Тип: ${entityType}\r",
											"- Email: ${email}\r",
											"- Client Secret: \\`${clientSecret}\\`\r",
											"- Redirect URI: ${redirectUri}`\r",
											"};\r",
											"\r",
											"// pm.sendRequest({\r",
											"//     url: \"https://chat.googleapis.com/v1/spaces/AAAAjG6doU8/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=PrGWNSIzNClVT__Sy4_sQYZPsHlQDPIvc5UNNKZTj3s\",\r",
											"//     method: \"POST\",\r",
											"//     header: {\r",
											"//         \"Content-Type\": \"application/json\",\r",
											"//     },\r",
											"//     body: {\r",
											"//         mode: \"raw\",\r",
											"//         raw: JSON.stringify(chatMessage),\r",
											"//     },\r",
											"// }, function (err, res) {\r",
											"//     if (err) {\r",
											"//         console.error(\"Помилка відправки в чат:\", err);\r",
											"//     } else {\r",
											"//         console.log(\"Відповідь від Google Chat:\", res.status, res.text());\r",
											"//         pm.test(\"Google Chat webhook повертає 200\", () => {\r",
											"//             pm.expect(res).to.have.property(\"code\", 200);\r",
											"//         });\r",
											"//     }\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0db18855-182b-4abd-bdf4-94072436764a",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-ff3f3ee0-2003-4785-b21b-cf0c2f3ce0b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signed_legal_entity_request\": \"\",\n  \"signed_content_encoding\":\"base64\"\n}\n"
								},
								"url": {
									"raw": "{{host}}/api/v2/legal_entities",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v2",
										"legal_entities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Legal Entity by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6e1ce89-1f84-4bc5-9cf3-662dd891798a",
										"exec": [
											"const data = pm.response.json().data;",
											"",
											"const ownerRaw = pm.environment.get('owner_data');",
											"const owner = ownerRaw ? JSON.parse(ownerRaw) : {};",
											"const party = owner.party || {};",
											"const documents = party.documents || [];",
											"",
											"const noTaxId = party.no_tax_id === true;",
											"const taxId = noTaxId",
											"    ? (documents.length > 0 ? documents[0].number : data.edrpou)",
											"    : (party.tax_id || data.edrpou);",
											"console.log(taxId)",
											"",
											"",
											"const finalJson = {",
											"    edrpou: data.edrpou,",
											"    type: data.type,",
											"    residence_address: { ...data.residence_address },",
											"    phones: data.phones,",
											"    email: data.email,",
											"    website: data.website,",
											"    receiver_funds_code: data.receiver_funds_code,",
											"    beneficiary: data.beneficiary,",
											"    owner: {",
											"        first_name: party.first_name || \"\",",
											"        last_name: party.last_name || \"\",",
											"        second_name: party.second_name || \"\",",
											"        tax_id: taxId,",
											"        no_tax_id: noTaxId,",
											"        birth_date: party.birth_date || \"\",",
											"        gender: party.gender || \"MALE\",",
											"        email: party.email || data.email,",
											"        documents: documents,",
											"        phones: party.phones || data.phones,",
											"        position: owner.position || \"P1\"",
											"    },",
											"    accreditation: {",
											"        category: data.accreditation?.category || \"\",",
											"        issued_date: data.accreditation?.issued_date || \"\",",
											"        expiry_date: data.accreditation?.expiry_date || \"\",",
											"        order_no: data.accreditation?.order_no || \"\",",
											"        order_date: data.accreditation?.order_date || \"\"",
											"    },",
											"    license: {",
											"        active_from_date: data.license?.active_from_date || \"\",",
											"        expiry_date: data.license?.expiry_date || \"\",",
											"        issued_by: data.license?.issued_by || \"\",",
											"        issued_date: data.license?.issued_date || \"\",",
											"        license_number: data.license?.license_number || \"\",",
											"        order_no: data.license?.order_no || \"\",",
											"        type: data.license?.type || \"\",",
											"        what_licensed: data.license?.what_licensed || \"\"",
											"    },",
											"    archive: data.archive || [],",
											"    security: {",
											"        redirect_uri: data.security?.redirect_uri || \"https://test89.com\"",
											"    },",
											"    public_offer: {",
											"        consent_text: data.public_offer?.consent_text || \"Consent text\",",
											"        consent: data.public_offer?.consent ?? true",
											"    }",
											"};",
											"",
											"pm.visualizer.set(`",
											"    <style>",
											"        pre {",
											"            background-color: #f6f8fa;",
											"            padding: 16px;",
											"            border-radius: 5px;",
											"            font-family: monospace;",
											"            white-space: pre-wrap;",
											"        }",
											"        button {",
											"            margin-bottom: 10px;",
											"            padding: 5px 10px;",
											"            border-radius: 4px;",
											"            border-color: #fff;",
											"            cursor: pointer;",
											"        }",
											"        button:hover{",
											"            border-color: #000;",
											"        }",
											"    </style>",
											"    <h3>Згенерований JSON</h3>",
											"    <button onclick=\"copyToClipboard()\">Скопіювати JSON</button>",
											"    <pre id=\"jsonOutput\">{{json}}</pre>",
											"    <script>",
											"        function copyToClipboard() {",
											"            const text = document.getElementById('jsonOutput').innerText;",
											"            const textArea = document.createElement('textarea');",
											"            textArea.value = text;",
											"            document.body.appendChild(textArea);",
											"            textArea.select();",
											"            try {",
											"                document.execCommand('copy');",
											"                alert('JSON скопійовано!');",
											"            } catch (err) {",
											"                alert('Помилка копіювання: ' + err);",
											"            }",
											"            document.body.removeChild(textArea);",
											"        }",
											"    </script>",
											"`, {",
											"    json: JSON.stringify(finalJson, null, 2)",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a9eb57ec-5b1e-4372-b57c-59483c045955",
										"exec": [
											"// Отримати власника через додатковий запит\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/employees?page=1&page_size=1000`,\r",
											"    method: 'GET',\r",
											"    header: {\r",
											"        'api-key': `${pm.environment.get('mis_client_secret')}`,\r",
											"        'Content-Type': 'application/json',\r",
											"        'Authorization': `Bearer ${pm.environment.get('access_token')}`,\r",
											"        'X-Custom-PSK': `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, response) {\r",
											"    if (err) {\r",
											"        console.error('Request error:', err);\r",
											"        return;\r",
											"    }\r",
											"\r",
											"    const employees = response.json().data;\r",
											"    const ownerEmployee = employees.find(emp => emp.employee_type === 'OWNER' && emp.is_active);\r",
											"\r",
											"    if (!ownerEmployee) {\r",
											"        console.warn('Owner not found');\r",
											"        return;\r",
											"    }\r",
											"\r",
											"    const ownerId = ownerEmployee.id;\r",
											"    console.log(ownerId)\r",
											"\r",
											"    // Зберегти ID власника в середовище\r",
											"    pm.environment.set('owner_id', ownerId);\r",
											"\r",
											"    // Тепер виконуємо другий запит з отриманим ownerId\r",
											"    pm.sendRequest({\r",
											"        url: `${pm.globals.get('host')}/api/employees/${ownerId}`,\r",
											"        method: 'GET',\r",
											"        header: {\r",
											"            'api-key': `${pm.environment.get('mis_client_secret')}`,\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': `Bearer ${pm.environment.get('access_token')}`,\r",
											"            'X-Custom-PSK': `${pm.globals.get('x-custom-psk')}`\r",
											"        }\r",
											"    }, function (err2, response2) {\r",
											"        if (err2) {\r",
											"            console.error('Request 2 error:', err2);\r",
											"            return;\r",
											"        }\r",
											"\r",
											"        const ownerData = response2.json().data;\r",
											"        console.log(ownerData)\r",
											"\r",
											"        // Зберігаємо потрібні поля для подальшого використання у Test Script\r",
											"        pm.environment.set('owner_data', JSON.stringify(ownerData));\r",
											"    });\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-26b43836-d9f1-46a9-b7aa-6e90bd231157",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/v2/legal_entities/{{user_legal_entity}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v2",
										"legal_entities",
										"{{user_legal_entity}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Legal Entities V2",
							"id": "15381251-50c5145a-d7ff-4153-a080-2752ce7a4b18",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custum-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/v2/legal_entities",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v2",
										"legal_entities"
									],
									"query": [
										{
											"key": "edrpou",
											"value": "341086",
											"disabled": true
										},
										{
											"key": "legal_entity_id",
											"value": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
											"disabled": true
										},
										{
											"key": "settlement_id",
											"value": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
											"disabled": true
										},
										{
											"key": "type",
											"value": "MSP",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ACTIVE",
											"disabled": true
										},
										{
											"key": "nhs_verified",
											"value": "false",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get legators Legal Entities",
							"id": "15381251-b86ec226-ce4b-48f2-9abd-f8a21bde8211",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/legal_entities/id/related?page=2&page_size=50",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"legal_entities",
										"id",
										"related"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-79bc941c-3072-4988-a39b-37de793f5fdd"
				},
				{
					"name": "Divisions",
					"item": [
						{
							"name": "Create division",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae622839-4f9c-4968-a65f-7f143c531c02",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"if (jsonData && jsonData.data) {",
											"    tests[\"Correct division status\"] = jsonData.data.status === 'ACTIVE';",
											"    var division_id = jsonData.data.id;",
											"    postman.setEnvironmentVariable(\"division_id\", division_id);",
											"} else {",
											"    tests[\"Correct division status\"] = false;",
											"    postman.setEnvironmentVariable(\"division_id\", \"<<undefined>>\");",
											"}",
											"",
											"tests[\"working_hours\"] = jsonData.data.working_hours;"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "61b77bfe-feee-4db8-bc33-bf2ec8d607a2",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-c5ba02ee-e71b-41b1-9b3c-9e474708a282",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"TEST_DIVISION\",\n    \"addresses\": [\n        {\n            \"apartment\": \"23\",\n            \"area\": \"АВТОНОМНА РЕСПУБЛІКА КРИМ\",\n            \"building\": \"15\",\n            \"country\": \"UA\",\n            \"region\": \"ЄВПАТОРІЯ\",\n            \"settlement\": \"ЗАОЗЕРНЕ\",\n            \"settlement_id\": \"6067b193-6e79-435c-a13b-e6b53e65cbdd\",\n            \"settlement_type\": \"SETTLEMENT\",\n            \"street\": \"II Лісопарківський\",\n            \"street_type\": \"STREET\",\n            \"type\": \"RESIDENCE\",\n            \"zip\": \"02090\"\n        }\n    ],\n    \"phones\": [\n        {\n            \"type\": \"MOBILE\",\n            \"number\": \"+380447777777\"\n        }\n    ],\n    \"email\": \"demo.emergency@ukr.net\",\n    \"working_hours\": {\n        \"mon\": [\n            [\n                \"09.00\",\n                \"13.00\"\n            ],\n            [\n                \"14.00\",\n                \"20.00\"\n            ]\n        ],\n        \"tue\": [\n            [\n                \"09.00\",\n                \"18.00\"\n            ]\n        ],\n        \"wed\": [\n            [\n                \"09.00\",\n                \"13.00\"\n            ],\n            [\n                \"14.00\",\n                \"20.00\"\n            ]\n        ],\n        \"thu\": [\n            [\n                \"08.00\",\n                \"08.35\"\n            ]\n        ],\n        \"fri\": [\n            [\n                \"09.00\",\n                \"15.00\"\n            ]\n        ]\n    },\n    \"type\": \"LICENSED_UNIT\",\n    \"legal_entity_id\": \"{{user_legal_entity}}\",\n    \"external_id\": \"3213213\",\n    \"location\": {\n        \"latitude\": 49.3333333,\n        \"longitude\": 36.3333333\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/divisions",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"divisions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update division",
							"id": "15381251-3d3cb539-e1f5-46de-82f1-a1c96c8a78be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"addresses\": [\r\n            {\r\n                \"apartment\": \"23\",\r\n                \"area\": \"ХАРКІВСЬКА\",\r\n                \"building\": \"15\",\r\n                \"country\": \"UA\",\r\n                \"region\": \"ЧУГУЇВСЬКИЙ\",\r\n                \"settlement\": \"ВЕЛИКА БАБКА\",\r\n                \"settlement_id\": \"7a438190-5b6f-4341-b25d-0b19f46c320f\",\r\n                \"settlement_type\": \"VILLAGE\",\r\n                \"street\": \"вул. Ніжинська\",\r\n                \"street_type\": \"STREET\",\r\n                \"type\": \"RESIDENCE\",\r\n                \"zip\": \"02090\"\r\n            }\r\n        ],\r\n        \"email\": \"lilia.besednikova@ehealth.gov.ua\",\r\n        \"external_id\": \"3213213\",\r\n        \"id\": \"c3246236-89a5-44be-8d40-45e1a2b58271\",\r\n        \"legal_entity_id\": \"24dbe468-7820-44d8-adae-28863fc41db4\",\r\n        \"location\": {\r\n            \"latitude\": 49.3333333,\r\n            \"longitude\": 36.3333333\r\n        },\r\n        \"name\": \"Відділення первинної медичної допомоги №1\",\r\n        \"phones\": [\r\n            {\r\n                \"number\": \"+380448888888\",\r\n                \"type\": \"MOBILE\"\r\n            }\r\n        ],\r\n        \"type\": \"CLINIC\",\r\n        \"working_hours\": {\r\n            \"fri\": [\r\n                [\r\n                    \"09.00\",\r\n                    \"15.00\"\r\n                ]\r\n            ],\r\n            \"mon\": [\r\n                [\r\n                    \"09.00\",\r\n                    \"13.00\"\r\n                ],\r\n                [\r\n                    \"14.00\",\r\n                    \"20.00\"\r\n                ]\r\n            ],\r\n            \"thu\": [\r\n                [\r\n                    \"08.00\",\r\n                    \"08.35\"\r\n                ]\r\n            ],\r\n            \"tue\": [\r\n                [\r\n                    \"09.00\",\r\n                    \"18.00\"\r\n                ]\r\n            ],\r\n            \"wed\": [\r\n                [\r\n                    \"09.00\",\r\n                    \"13.00\"\r\n                ],\r\n                [\r\n                    \"14.00\",\r\n                    \"20.00\"\r\n                ]\r\n            ]\r\n        }\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/divisions/c3246236-89a5-44be-8d40-45e1a2b58271",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"divisions",
										"c3246236-89a5-44be-8d40-45e1a2b58271"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate division",
							"id": "15381251-a7373966-c634-4987-a5ce-912f4c625283",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/divisions/96e57f63-b724-4dca-aed7-8ee58307d3f5/actions/activate",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"divisions",
										"96e57f63-b724-4dca-aed7-8ee58307d3f5",
										"actions",
										"activate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate division",
							"id": "15381251-f61eca6f-b678-44f9-a66d-49e9c486c51a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/divisions/96e57f63-b724-4dca-aed7-8ee58307d3f5/actions/deactivate",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"divisions",
										"96e57f63-b724-4dca-aed7-8ee58307d3f5",
										"actions",
										"deactivate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Divisions",
							"id": "15381251-410e9e89-6957-4114-828c-d7b23810b997",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/divisions?ids=d290f1ee-6c54-4b01-90e6-d701748f0851&name=%D0%91%D0%BE%D1%80%D0%B8%D1%81%D0%BF%D1%96%D0%BB%D1%8C%D1%81%D1%8C%D0%BA%D0%B5%20%D0%B2%D1%96%D0%B4%D0%B4%D1%96%D0%BB%D0%B5%D0%BD%D0%BD%D1%8F%20%D0%BA%D0%BB%D1%96%D0%BD%D1%96%D0%BA%D0%B8&legal_entity_id=d8b5f374-0f3c-46e6-baf1-21d97b4c9ff5&type=CLINIC&status=ACTIVE&page=2&page_size=50",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"divisions"
									],
									"query": [
										{
											"key": "ids",
											"value": "d290f1ee-6c54-4b01-90e6-d701748f0851"
										},
										{
											"key": "name",
											"value": "%D0%91%D0%BE%D1%80%D0%B8%D1%81%D0%BF%D1%96%D0%BB%D1%8C%D1%81%D1%8C%D0%BA%D0%B5%20%D0%B2%D1%96%D0%B4%D0%B4%D1%96%D0%BB%D0%B5%D0%BD%D0%BD%D1%8F%20%D0%BA%D0%BB%D1%96%D0%BD%D1%96%D0%BA%D0%B8"
										},
										{
											"key": "legal_entity_id",
											"value": "d8b5f374-0f3c-46e6-baf1-21d97b4c9ff5"
										},
										{
											"key": "type",
											"value": "CLINIC"
										},
										{
											"key": "status",
											"value": "ACTIVE"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Divisions by id",
							"id": "15381251-f66f6dd5-3c4c-46f1-968a-c08634854f4b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/divisions/2bb9f35c-711f-4bdf-a69f-0d4fab0d2076",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"divisions",
										"2bb9f35c-711f-4bdf-a69f-0d4fab0d2076"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-c7d02adf-2544-402e-84fa-7a896bad4455"
				},
				{
					"name": "Employees",
					"item": [
						{
							"name": "Employee Requests",
							"item": [
								{
									"name": "Create employee request V1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b34a66ef-26e0-4574-b83a-e389eda3d182",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"if (jsonData.data !== undefined){",
													"    var employee_request_id = jsonData.data.id;",
													"    postman.setEnvironmentVariable(\"employee_request_id_to_approve\", employee_request_id);",
													"} else {",
													"    postman.setEnvironmentVariable(\"employee_request_id_to_approve\", \"<<undefined>>\");",
													"}"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1bc4e747-7aa0-4e8f-b93f-b8220e7980f0",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-cb2c4c7e-dc9c-4cf0-a068-433aa7bb0fc3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"employee_request\": {\n        \"division_id\": \"c3246236-89a5-44be-8d40-45e1a2b58271\",\n        \"position\": \"P173\",\n        \"start_date\": \"2025-07-07\",\n        \"status\": \"NEW\",\n        \"employee_type\": \"ASSISTANT\",\n        \"party\": {\n            \"first_name\": \"Сергій\",\n            \"last_name\": \"Куриленко\",\n            \"second_name\": \"Тимчасовий\",\n            \"birth_date\": \"1988-11-25\",\n            \"gender\": \"MALE\",\n            \"no_tax_id\": false,\n            \"tax_id\": \"3047112235\",\n            \"email\": \"caspulugna@necub.com\",\n            \"documents\": [\n                {\n                    \"type\": \"PASSPORT\",\n                    \"number\": \"МО130528\",\n                    \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\n                    \"issued_at\": \"2017-02-28\"\n                }\n            ],\n            \"phones\": [\n                {\n                    \"type\": \"MOBILE\",\n                    \"number\": \"+380502298393\"\n                }\n            ],\n            \"working_experience\": 10,\n            \"about_myself\": \"Закінчив всі можливі курси\"\n        },\n        \"assistant\": {\n            \"educations\": [\n                {\n                    \"city\": \"Київ\",\n                    \"country\": \"UA\",\n                    \"degree\": \"MASTER\",\n                    \"diploma_number\": \"DD123543\",\n                    \"institution_name\": \"Академія Богомольця\",\n                    \"issued_date\": \"2017-02-28\",\n                    \"speciality\": \"Клінічна лабораторна діагностика\"\n                }\n            ],\n            \"qualifications\": [\n                {\n                    \"additional_info\": \"додаткова інофрмація\",\n                    \"certificate_number\": \"2017-02-28\",\n                    \"institution_name\": \"Академія Богомольця\",\n                    \"issued_date\": \"2017-02-28\",\n                    \"speciality\": \"Клінічна лабораторна діагностика\",\n                    \"type\": \"SPECIALIZATION\",\n                    \"valid_to\": \"2027-02-28\"\n                }\n            ],\n            \"specialities\": [\n                {\n                    \"attestation_date\": \"2020-06-28\",\n                    \"attestation_name\": \"Академія Богомольця\",\n                    \"certificate_number\": \"AB/21331\",\n                    \"level\": \"FIRST\",\n                    \"qualification_type\": \"AWARDING\",\n                    \"speciality\": \"NURSING\",\n                    \"speciality_officio\": false,\n                    \"valid_to_date\": \"2027-02-28\"\n                },\n                {\n                    \"attestation_date\": \"2020-06-28\",\n                    \"attestation_name\": \"Академія Богомольця\",\n                    \"certificate_number\": \"AB/21331\",\n                    \"level\": \"FIRST\",\n                    \"qualification_type\": \"AWARDING\",\n                    \"speciality\": \"CLINICAL_DIAGNOSTIC\",\n                    \"speciality_officio\": false,\n                    \"valid_to_date\": \"2027-02-28\"\n                }\n            ]\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/api/employee_requests",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"employee_requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create employee request V2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be04a35d-3773-4b68-af32-4b01eb1f7227",
												"exec": [
													"// tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"// var jsonData = JSON.parse(responseBody);",
													"",
													"// if (jsonData.data !== undefined){",
													"//     var employee_request_id = jsonData.data.id;",
													"//     postman.setEnvironmentVariable(\"employee_request_id_to_approve\", employee_request_id);",
													"// } else {",
													"//     postman.setEnvironmentVariable(\"employee_request_id_to_approve\", \"<<undefined>>\");",
													"// }"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "70733231-0fcf-4c9d-80e7-6ec9cedb612b",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-e741b739-6db2-44e9-93d3-af48bb26203e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"signed_content\": \"\",\n  \"signed_content_encoding\": \"base64\"\n}"
										},
										"url": {
											"raw": "{{host}}/api/v2/employee_requests",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v2",
												"employee_requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate Employee",
									"id": "15381251-ecb519ac-82c6-466f-b462-fea825a81ae4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/employees/b1030af6-c36d-4d99-96ff-293fc2d8bccd/actions/deactivate",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"employees",
												"b1030af6-c36d-4d99-96ff-293fc2d8bccd",
												"actions",
												"deactivate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Approve or Reject employee Request",
									"id": "15381251-9ec56ebd-975f-4b94-9eb2-9dc63b2cea8f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/employee_requests/f2f889bf-b9e5-40ff-938b-e94653e67f02/actions/reject",
											"host": [
												"{{host}}"
											],
											"path": [
												"employee_requests",
												"f2f889bf-b9e5-40ff-938b-e94653e67f02",
												"actions",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Employee Request by ID",
									"id": "15381251-46885f9e-bc45-443e-949c-ba5cf80e055b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/employee_requests/4a72959f-cb1e-4be2-bcdd-5ad1cda8b504",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"employee_requests",
												"4a72959f-cb1e-4be2-bcdd-5ad1cda8b504"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Employee Requests List",
									"id": "15381251-33685935-45ec-4fc8-a0d4-5954003233c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/employee_requests?id=d290f1ee-6c54-4b01-90e6-d701748f0851&edrpou=341086&legal_entity_name=%D0%9B%D0%B8%D0%BC%D0%B8%D1%87%20%D0%9C%D0%B5%D0%B4%D1%96%D0%BA%D0%B0%D0%BB&no_tax_id=true&status=NEW&page=2&page_size=50",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"employee_requests"
											],
											"query": [
												{
													"key": "id",
													"value": "d290f1ee-6c54-4b01-90e6-d701748f0851"
												},
												{
													"key": "edrpou",
													"value": "341086"
												},
												{
													"key": "legal_entity_name",
													"value": "%D0%9B%D0%B8%D0%BC%D0%B8%D1%87%20%D0%9C%D0%B5%D0%B4%D1%96%D0%BA%D0%B0%D0%BB"
												},
												{
													"key": "no_tax_id",
													"value": "true"
												},
												{
													"key": "status",
													"value": "NEW"
												},
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page_size",
													"value": "50"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Employee ID by Employee Request ID",
									"id": "15381251-d8c0aa2c-7874-49cd-a5fc-c61318f55236",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/mis/employee_requests/id",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"mis",
												"employee_requests",
												"id"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-92262632-265b-4b34-af79-c583f3c4a6ad"
						},
						{
							"name": "Party",
							"item": [
								{
									"name": "Get Party verification details",
									"id": "15381251-1fb9c042-03ca-4739-b5ec-810ffc617e5e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/parties/9c5d2bee-a3a4-4d6f-8cda-d28d6195fc16/verification",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"parties",
												"9c5d2bee-a3a4-4d6f-8cda-d28d6195fc16",
												"verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Party Verification Statuses List",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9f7dfb84-c34d-4922-a0cf-a45f8cbeb5db",
												"exec": [
													"const data = pm.response.json().data;\r",
													"\r",
													"// Створюємо мапу для підрахунку кількості кожного party_id\r",
													"const counts = data.reduce((acc, item) => {\r",
													"  acc[item.party_id] = (acc[item.party_id] || 0) + 1;\r",
													"  return acc;\r",
													"}, {});\r",
													"console.log(counts)\r",
													"\r",
													"// Фільтруємо тільки ті елементи, у яких party_id зустрічається більше одного разу\r",
													"const duplicateParties = data.filter(item => counts[item.party_id] > 1);\r",
													"\r",
													"console.log(duplicateParties);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "12c96515-bd7b-4e66-a449-6d165a3cfd20",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-e582880f-85fa-4413-9785-6188bd31e5a9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/parties/verifications",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"parties",
												"verifications"
											],
											"query": [
												{
													"key": "verification_status",
													"value": "VERIFIED",
													"disabled": true
												},
												{
													"key": "status",
													"value": "",
													"type": "text",
													"disabled": true
												},
												{
													"key": "division_id",
													"value": "c3246236-89a5-44be-8d40-45e1a2b58271",
													"disabled": true
												},
												{
													"key": "page",
													"value": "",
													"disabled": true
												},
												{
													"key": "page_size",
													"value": "",
													"type": "text",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Party verification status",
									"id": "15381251-8aa73812-6ce3-4557-8ec3-64266cd4e8ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"dracs_death\": {\r\n    \"verification_status\": \"VERIFIED\",\r\n    \"verification_reason\": \"MANUAL_NOT_CONFIRMED\",\r\n    \"verification_comment\": \"Співробітник не замінював ПІБ\"\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/parties/ddff01d8-e14e-4be3-bee6-49a27b487ad3/verification",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"parties",
												"ddff01d8-e14e-4be3-bee6-49a27b487ad3",
												"verification"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-70021212-2a7b-40c3-a24c-a4a2096b9c8c"
						},
						{
							"name": "Roles",
							"item": [
								{
									"name": "Add employee role",
									"id": "15381251-97e6440d-0926-4d4c-a1e8-fff3e4038dfc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"healthcare_service_id\": \"20a643e8-1497-484a-be86-07e2ec07722f\",\r\n  \"employee_id\": \"ecb4394f-34b9-4279-8042-b9bcbdc0456b\"\r\n}"
										},
										"url": {
											"raw": "{{host_demo}}/api/employee_roles",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"employee_roles"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate employee role",
									"id": "15381251-8915b5dc-ccd0-4cad-a024-182cb3b8129b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/employee_roles/id/actions/deactivate",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"employee_roles",
												"id",
												"actions",
												"deactivate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee roles",
									"id": "15381251-84790510-85de-4eff-a0d5-1a70fafa6916",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/employee_roles/",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"employee_roles",
												""
											],
											"query": [
												{
													"key": "healthcare_service_id",
													"value": "c4de7c6e-8c6e-4d4f-8843-6bc122977227",
													"disabled": true
												},
												{
													"key": "status",
													"value": "active",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "page_size",
													"value": "50",
													"disabled": true
												},
												{
													"key": "employee_id",
													"value": "3de08526-2be0-4430-9424-3866544e555a",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get employee role by ID",
									"id": "15381251-57a0e137-7339-4a60-bf82-8f5119257936",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/employee_roles/1fe75846-270f-40d2-a347-7263af16e5a6",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"employee_roles",
												"1fe75846-270f-40d2-a347-7263af16e5a6"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-87d33c68-bdd2-464b-87fe-0cad4a64c2cf"
						},
						{
							"name": "User details",
							"item": [
								{
									"name": "Get my user details",
									"id": "15381251-e0b113b9-3502-4582-8161-ff92e24dd6c1",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "30276e63617461a185ec",
												"type": "text"
											},
											{
												"key": "x-custom-psk",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/oauth/user",
											"host": [
												"{{host}}"
											],
											"path": [
												"oauth",
												"user"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-81a4061b-d1ad-407c-93e6-ad174fffa76e"
						},
						{
							"name": "Get Employee Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a21aabc5-7ffb-4ca6-bd84-e0fcafedf7f5",
										"exec": [
											"const data = pm.response.json().data;\r",
											"const employeeEmail = pm.environment.get(\"user_email\");\r",
											"\r",
											"// Отримаємо ключ з employee_type, зведений до нижнього регістру\r",
											"const extraKey = data.employee_type?.toLowerCase();\r",
											"const extraData = extraKey && data[extraKey] ? { [extraKey]: data[extraKey] } : {};\r",
											"\r",
											"// Клонування та очищення party\r",
											"const { declaration_count, declaration_limit, id, ...cleanParty } = data.party || {};\r",
											"cleanParty.email = cleanParty.email || employeeEmail; // додати поле email, якщо немає\r",
											"\r",
											"const employeeRequest = {\r",
											"    employee_id: data.id,\r",
											"    division_id: data.division?.id || null,\r",
											"    position: data.position,\r",
											"    start_date: data.start_date,\r",
											"    status: \"NEW\", // примусово встановлюємо NEW\r",
											"    employee_type: data.employee_type,\r",
											"    party: cleanParty,\r",
											"    ...extraData\r",
											"};\r",
											"\r",
											"const finalJson = {\r",
											"    employee_request: employeeRequest\r",
											"};\r",
											"\r",
											"pm.visualizer.set(`\r",
											"    <style>\r",
											"        pre {\r",
											"            background-color: #f6f8fa;\r",
											"            padding: 16px;\r",
											"            border-radius: 5px;\r",
											"            font-family: monospace;\r",
											"            white-space: pre-wrap;\r",
											"        }\r",
											"        button {\r",
											"            margin-bottom: 10px;\r",
											"            padding: 5px 10px;\r",
											"            border-radius: 4px;\r",
											"            border-color: #fff;\r",
											"            cursor: pointer;\r",
											"        }\r",
											"        button:hover {\r",
											"            border-color: #000;\r",
											"        }\r",
											"    </style>\r",
											"    <h3>Згенерований JSON</h3>\r",
											"    <button onclick=\"copyToClipboard()\">Скопіювати JSON</button>\r",
											"    <pre id=\"jsonOutput\">{{json}}</pre>\r",
											"    <script>\r",
											"        function copyToClipboard() {\r",
											"            const text = document.getElementById('jsonOutput').innerText;\r",
											"            const textArea = document.createElement('textarea');\r",
											"            textArea.value = text;\r",
											"            document.body.appendChild(textArea);\r",
											"            textArea.select();\r",
											"            try {\r",
											"                document.execCommand('copy');\r",
											"                alert('JSON скопійовано!');\r",
											"            } catch (err) {\r",
											"                alert('Помилка копіювання: ' + err);\r",
											"            }\r",
											"            document.body.removeChild(textArea);\r",
											"        }\r",
											"    </script>\r",
											"`, {\r",
											"    json: JSON.stringify(finalJson, null, 2)\r",
											"});\r",
											"\r",
											"// Логування запиту та відповіді\r",
											"\r",
											"(function () {\r",
											"  // не логувати /log щоб уникнути рекурсії\r",
											"  if (pm.request.url.toString().includes('/log')) return;\r",
											"\r",
											"  const logger = pm.require('@winter-zodiac-949553/log-utils')\r",
											"  const logPayload = logger.createLogPayload(pm);\r",
											"  logger.sendLog(logPayload);\r",
											"})();\r",
											""
										],
										"type": "text/javascript",
										"packages": {
											"@winter-zodiac-949553/log-utils": {
												"id": "019763ea-01f4-7431-9bc8-865f51c1b866"
											}
										}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6d90088e-a3b5-42ab-89be-93bb1eaf2cbe",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-709225a1-2f34-41e9-bc7c-e24b7fdb7269",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/employees/{{user_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"employees",
										"{{user_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Employees List",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a2bf3b9b-45b5-4113-a23d-c9595fb7fbc0",
										"exec": [
											"// Логування запиту та відповіді\r",
											"\r",
											"(function () {\r",
											"  // не логувати /log щоб уникнути рекурсії\r",
											"  if (pm.request.url.toString().includes('/log')) return;\r",
											"\r",
											"  const logger = pm.require('@winter-zodiac-949553/log-utils')\r",
											"  const logPayload = logger.createLogPayload(pm);\r",
											"  logger.sendLog(logPayload);\r",
											"})();"
										],
										"type": "text/javascript",
										"packages": {
											"@winter-zodiac-949553/log-utils": {
												"id": "019763ea-01f4-7431-9bc8-865f51c1b866"
											}
										}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3d3cdc68-8003-4d09-8e4e-02646a9209cf",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-5cd593f2-b058-4e48-b648-a327b42d6509",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/employees",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"employees"
									],
									"query": [
										{
											"key": "no_tax_id",
											"value": "true",
											"disabled": true
										},
										{
											"key": "tax_id",
											"value": "3015492561",
											"disabled": true
										},
										{
											"key": "party_id",
											"value": "9c5d2bee-a3a4-4d6f-8cda-d28d6195fc16",
											"disabled": true
										},
										{
											"key": "edrpou",
											"value": "38782323",
											"disabled": true
										},
										{
											"key": "legal_entity_id",
											"value": "d290f1ee-6c54-4b01-90e6-d701748f0152",
											"disabled": true
										},
										{
											"key": "division_id",
											"value": "c3246236-89a5-44be-8d40-45e1a2b58271",
											"disabled": true
										},
										{
											"key": "status",
											"value": "APPROVED",
											"disabled": true
										},
										{
											"key": "employee_type",
											"value": "LABORANT",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "1000",
											"disabled": true
										},
										{
											"key": "verification_status",
											"value": "NOT_VERIFIED",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-d619d677-d031-49d5-b474-ca37bfc2cc5f"
				},
				{
					"name": "Contracts",
					"item": [
						{
							"name": "Contract request",
							"item": [
								{
									"name": "Initialize Contract Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c9c3c8d-2810-4bbf-a2ea-7f2eada913d7",
												"exec": [
													"const resData = pm.response.json();\r",
													"\r",
													"function displayResponse(title, data) {\r",
													"    const html = `\r",
													"        <h1>${title}</h1>\r",
													"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
													"    pm.visualizer.set(html);\r",
													"}\r",
													"\r",
													"pm.test(\"Initialize Contract Request status code is 200\", function () {\r",
													"    pm.expect(pm.response.code).to.eql(200);\r",
													"\r",
													"    const contractReqId = resData.data.id;\r",
													"    pm.globals.set('contract_request_id', contractReqId);\r",
													"\r",
													"    console.log(contractReqId);\r",
													"\r",
													"    // Function to handle each URL request\r",
													"    function processUrl(url, additionalData) {\r",
													"        console.log(url, 'urls loop');\r",
													"\r",
													"        pm.sendRequest({\r",
													"            url: url,\r",
													"            method: 'PUT',\r",
													"            header: {\r",
													"                'Content-Type': 'image/jpeg'\r",
													"            },\r",
													"            body: {\r",
													"                mode: 'raw',\r",
													"                raw: JSON.stringify(additionalData) // Include additional data in the body\r",
													"            }\r",
													"        }, function (err, res) {\r",
													"            if (err) {\r",
													"                console.error('Request failed:', err);\r",
													"                displayResponse('Request Error', { error: err.message });\r",
													"            } else {\r",
													"                let responseData;\r",
													"\r",
													"                // Check content type to determine how to parse the response\r",
													"                const contentType = res.headers.get('Content-Type');\r",
													"                console.log(contentType);\r",
													"                if (contentType && contentType.includes('text/plain')) {\r",
													"                    try {\r",
													"                        // Handle TEXT response if needed\r",
													"                        responseData = res.text(); // Get response as text\r",
													"                        displayResponse('Document sign successful', { response: responseData });\r",
													"                        const etag = res.headers.get('etag');\r",
													"                        pm.globals.set('contract_etag', etag)\r",
													"                        console.log(etag)\r",
													"                    } catch (e) {\r",
													"                        console.error('JSON parsing error:', e);\r",
													"                        displayResponse('Parsing Error', { error: 'Failed to parse JSON' });\r",
													"                        return;\r",
													"                    }\r",
													"                } else {\r",
													"                    // Handle other response types if needed\r",
													"                    responseData = res.text(); // Default to text for unknown formats\r",
													"                    displayResponse('Unknown Response Format', { response: responseData });\r",
													"                }\r",
													"            }\r",
													"        });\r",
													"    }\r",
													"\r",
													"    // Extract URLs from the response\r",
													"    const additionalDocumentUrl = resData.data.additional_document_url;\r",
													"    const statuteUrl = resData.data.statute_url;\r",
													"\r",
													"    const urls = [additionalDocumentUrl, statuteUrl];\r",
													"\r",
													"    const additionalData = {\r",
													"        row: '0JTQvtC60YPQvNC10L3Rgg=='\r",
													"    };\r",
													"\r",
													"    // Process each URL from the response\r",
													"    urls.forEach(url => {\r",
													"        processUrl(url, additionalData);\r",
													"    });\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c4c2ba61-c666-4c22-81ae-c93c16bed40c",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-a2a7d0a5-65ff-460a-9143-fa2698e00059",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/contract_requests/reimbursement",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"contract_requests",
												"reimbursement"
											]
										}
									},
									"response": []
								},
								{
									"name": "DUMMY_contracat_capitation",
									"id": "15381251-414253ac-37f5-4aa8-900f-aafda153a964",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"contractor_owner_id\": \"{{owner_id}}\",\r\n    \"contractor_base\": \"на підставі статуту\",\r\n    \"contractor_payment_details\": {\r\n        \"payer_account\": \"UA3412345678901234567890\",\r\n        \"bank_name\": \"Банк №123\"\r\n    },\r\n    \"contractor_divisions\": [\r\n        \"0560cf01-ab53-4415-b827-035c2ede12ec\"\r\n    ],\r\n    \"external_contractor_flag\": false,\r\n    \"start_date\":\"2025-03-01\",\r\n    \"end_date\": \"2025-12-31\",\r\n    \"id_form\": \"PMD_1\",\r\n    \"statute_md5\": {{contract_etag}},\r\n    \"additional_document_md5\": {{contract_etag}},\r\n    \"consent_text\": \"Цією заявою Заявник висловлює бажання укласти договір про медичне обслуговування населення за програмою державних гарантій медичного обслуговування населення (далі – Договір) на умовах, визначених в оголошенні про укладення договорів про медичне обслуговування населення (далі – Оголошення). Заявник підтверджує, що: 1. на момент подання цієї заяви Заявник має чинну ліцензію на провадження господарської діяльності з медичної практики та відповідає ліцензійним умовам з медичної практики; 2. Заявник надає медичні послуги, пов’язані з первинною медичною допомогою (далі – ПМД); 3. Заявник зареєстрований в електронній системі охорони здоров’я (далі – Система); 4. уповноважені особи та медичні працівники, які будуть залучені до виконання Договору, зареєстровані в Системі та отримали електронний цифровий підпис (далі – ЕЦП); 5. в кожному місці надання медичних послуг Заявника наявне матеріально-технічне оснащення, передбачене розділом І Примірного табелю матеріально-технічного оснащення закладів охорони здоров’я та фізичних осіб – підприємців, які надають ПМД, затвердженого наказом Міністерства охорони здоров’я України від 26 січня 2018 року №148; 6. установчими або іншими документами не обмежено право керівника Заявника підписувати договори від імені Заявника без попереднього погодження власника. Якщо таке право обмежено, у тому числі щодо укладання договорів, ціна яких перевищує встановлену суму, Заявник повідомить про це Національну службу здоров’я та отримає необхідні погодження від власника до моменту підписання договору зі сторони Заявника; 7. інформація, зазначена Заявником у цій Заяві та доданих до неї документах, а також інформація, внесена Заявником (його уповноваженими особами) до Системи, є повною та достовірною. Заявник усвідомлює, що у разі зміни інформації, зазначеної Заявником у цій заяві та (або) доданих до неї документах Заявник зобов’язаний повідомити про такі зміни НСЗУ протягом трьох робочих днів з дня настання таких змін шляхом надсилання інформації про такі зміни на електронну пошту dohovir@nszu.gov.ua, з одночасним внесенням таких змін в Систему. Заявник усвідомлює, що законодавством України передбачена відповідальність за подання недостовірної інформації органам державної влади.\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": ""
										}
									},
									"response": []
								},
								{
									"name": "DUMMY_contract_requests_reimbursement",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "360b7853-57ed-4849-9b0d-41529ca8ae83",
												"exec": [
													"// const resData = pm.response.json();\r",
													"// console.log(resData)\r",
													"\r",
													"// pm.test(`Contract request content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
													"//     pm.expect(pm.response.code).to.eql(200);\r",
													"//     pm.expect(resData).to.have.property('signed_content');\r",
													"//     pm.globals.set('contract_request_signed_content', resData.signed_content);\r",
													"// });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "169cbe8e-bc56-4463-91a2-96b380956be4",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-ff23d2f7-43c7-4c55-9c55-19c4c7515899",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"contractor_owner_id\": \"{{owner_id}}\",\r\n    \"contractor_base\": \"на підставі статуту\",\r\n    \"contractor_payment_details\": {\r\n        \"payer_account\": \"UA3412345678901234567890\",\r\n        \"bank_name\": \"Банк №8\"\r\n    },\r\n    \"end_date\": \"2026-01-01\",\r\n    \"id_form\": \"GENERAL\",\r\n    \"contract_number\":\"0000-1E6M-M000\",\r\n    \"statute_md5\": {{contract_etag}},\r\n    \"additional_document_md5\": {{contract_etag}},\r\n    \"medical_programs\": [\r\n        \"63c1f32f-c8f4-4f5b-81a9-79b8452d6545\",\r\n        \"857588d8-9e12-4935-96c4-b08e95d19dce\",\r\n        \"e9c6beeb-b19f-4b97-b42a-020c5c996c56\",\r\n        \"cda113e4-b8dd-4ec4-a878-3d1c7eae49da\",\r\n        \"8efe29df-18bd-4d49-8995-c3f7e44d9e12\",\r\n        \"7335a30e-61f2-42b0-9ed4-2afe847bba16\",\r\n        \"14e19712-b443-4391-b0f7-aba8e8662459\",\r\n        \"9d94a21b-ec70-4b91-946a-981f4db8d2b9\",\r\n        \"f217889f-736f-462c-8f8b-ed99edddb3be\",\r\n        \"8a11c513-e7a9-4800-9fb9-becb743e08c4\",\r\n        \"0eececf1-aaf5-48fb-87e2-da44b7c49db2\",\r\n        \"5562904e-100f-11ee-be56-0242ac120002\",\r\n        \"9723a9a0-100a-11ee-be56-0242ac120002\",\r\n        \"0cefbce3-6dd2-45bd-b1e6-983fc055d5e0\",\r\n        \"ba40bb7f-9084-4266-8316-d753037d26b6\",\r\n        \"1a227396-a0e4-4c4f-a0a9-6b358c8929d2\"\r\n    ],\r\n    \"consent_text\": \"Цією заявою Заявник висловлює бажання укласти договір про реімбурсацію з Національною службою здоров'я України та підтверджує, що на момент подання цієї заяви Заявник провадить господарську діяльність на підставі ліцензії на провадження господарської діяльності з роздрібної торгівлі лікарськими засобами та відповідає ліцензійним умовам. Заявник усвідомлює, що у разі зміни інформації, зазначеної Заявником у цій заяві та (або) доданих до неї документах Заявник зобов'язаний повідомити про такі зміни НСЗУ протягом трьох робочих днів з дня настання таких змін шляхом надсилання інформації про такі зміни на електронну пошту reimb@nszu.gov.ua, з одночасним внесенням таких змін в Систему. Заявник усвідомлює, що законодавством України передбачена відповідальність за подання недостовірної інформації органам державної влади.\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/contract-request-signed-content",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"contract-request-signed-content"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Contract Request",
									"id": "15381251-1db4dead-96eb-4d61-9a0b-e69e4408550f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"signed_content\": \"\",\r\n    \"signed_content_encoding\": \"base64\"\r\n}"
										},
										"url": {
											"raw": "{{host}}/api/contract_requests/reimbursement/{{contract_request_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"contract_requests",
												"reimbursement",
												"{{contract_request_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Approve Contract Request by MSP",
									"id": "15381251-774e7e2a-fe07-419e-b035-7460982bf235",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{host}}/api/contract_requests/reimbursement/b2bf8b5e-bee5-4f91-bdf3-5aa765abffd8/actions/approve_msp",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"contract_requests",
												"reimbursement",
												"b2bf8b5e-bee5-4f91-bdf3-5aa765abffd8",
												"actions",
												"approve_msp"
											]
										}
									},
									"response": []
								},
								{
									"name": "Sign Contract Request by MSP",
									"id": "15381251-0fefb775-c18b-4d04-99ef-1f639e71da22",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"signed_content\": \"\",\r\n  \"signed_content_encoding\": \"base64\"\r\n}"
										},
										"url": {
											"raw": "{{host}}/api/contract_requests/reimbursement/{{contract_request_id}}/actions/sign_msp",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"contract_requests",
												"reimbursement",
												"{{contract_request_id}}",
												"actions",
												"sign_msp"
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Contract Request by MSP",
									"id": "15381251-ff6bc4df-0203-421c-a399-eae910f3d6bb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status_reason\": \"Неправильний період контракту\"\r\n}"
										},
										"url": {
											"raw": "{{host_demo}}/api/contract_requests/reimbursement/b2bf8b5e-bee5-4f91-bdf3-5aa765abffd8/actions/terminate",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"contract_requests",
												"reimbursement",
												"b2bf8b5e-bee5-4f91-bdf3-5aa765abffd8",
												"actions",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Contract Requests list",
									"id": "15381251-d7f629f4-6af8-40a9-9189-c2fa82bdf0b2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/contract_requests/reimbursement/?status=NHS_SIGNED",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"contract_requests",
												"reimbursement",
												""
											],
											"query": [
												{
													"key": "id",
													"value": "f6c30004-3178-4dca-a3d6-dbaa36ab55fa",
													"disabled": true
												},
												{
													"key": "contractor_legal_entity_id",
													"value": "26fc5dfe-1bea-440f-a290-48df6f0546ab",
													"disabled": true
												},
												{
													"key": "contractor_owner_id",
													"value": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
													"disabled": true
												},
												{
													"key": "nhs_signer_id",
													"value": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
													"disabled": true
												},
												{
													"key": "issue_city",
													"value": "%D0%9A%D0%98%D0%87%D0%92",
													"disabled": true
												},
												{
													"key": "edrpou",
													"value": "2799207815",
													"disabled": true
												},
												{
													"key": "status",
													"value": "NHS_SIGNED"
												},
												{
													"key": "contract_number",
													"value": "0000-92TM-M000",
													"disabled": true
												},
												{
													"key": "medical_program_id",
													"value": "2075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
													"disabled": true
												},
												{
													"key": "page",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page_size",
													"value": "50",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Contract Request Details",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "64784072-5d3a-4874-b280-86560c307bba",
												"exec": [
													"var template = `\r",
													"<style type=\"text/css\">\r",
													"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
													"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
													"    .tftable tr {background-color:#ffffff;}\r",
													"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
													"    .tftable tr:hover {background-color:#e0ffff;}\r",
													"</style>\r",
													"\r",
													"<table class=\"tftable\" border=\"1\">\r",
													"    <tr>\r",
													"        <th>Assignee ID</th>\r",
													"        <th>Contract Number</th>\r",
													"        <th>Contractor Base</th>\r",
													"        <th>End Date</th>\r",
													"        <th>Status</th>\r",
													"    </tr>\r",
													"    <tr>\r",
													"        <td>{{response.data.assignee_id}}</td>\r",
													"        <td>{{response.data.contract_number}}</td>\r",
													"        <td>{{response.data.contractor_base}}</td>\r",
													"        <td>{{response.data.end_date}}</td>\r",
													"        <td>{{response.data.status}}</td>\r",
													"    </tr>\r",
													"</table>\r",
													"`;\r",
													"\r",
													"function constructVisualizerPayload() {\r",
													"    return { response: pm.response.json() }\r",
													"}\r",
													"\r",
													"pm.visualizer.set(template, constructVisualizerPayload());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c2a526ec-9b90-4242-9865-0cc4935afd89",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "15381251-69ace939-9680-46fa-b20c-74f4fa0d66c1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/contract_requests/reimbursement/{{contract_request_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"contract_requests",
												"reimbursement",
												"{{contract_request_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Contract Request Printout Content",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "abe914f2-a0c7-41fe-9d29-9aba9df3942f",
												"exec": [
													"let html;\r",
													"\r",
													"try {\r",
													"    const resData = pm.response.json();\r",
													"\r",
													"    if (\r",
													"        resData &&\r",
													"        resData.data &&\r",
													"        typeof resData.data.printout_content === 'string'\r",
													"    ) {\r",
													"        html = resData.data.printout_content;\r",
													"\r",
													"        // Візуалізувати в окремій вкладці\r",
													"        pm.visualizer.set(html);\r",
													"\r",
													"        // Декодуємо escape-послідовності\r",
													"        const decodedHtml = html\r",
													"            .replace(/\\\\n/g, \"\\n\")\r",
													"            .replace(/\\\\\"/g, '\"')\r",
													"            .replace(/\\\\'/g, \"'\")\r",
													"            .replace(/\\\\\\\\/g, \"\\\\\");\r",
													"\r",
													"        console.log(\"Decoded HTML:\", decodedHtml);\r",
													"\r",
													"        // Відправляємо розкодований HTML на локальний сервер\r",
													"        pm.sendRequest({\r",
													"            url: \"http://localhost:3000/save-html/contract_request_printout_content\",\r",
													"            method: \"POST\",\r",
													"            header: {\r",
													"                \"Content-Type\": \"text/plain\"\r",
													"            },\r",
													"            body: {\r",
													"                mode: \"raw\",\r",
													"                raw: decodedHtml\r",
													"            }\r",
													"        }, function (err, res) {\r",
													"            if (err) {\r",
													"                console.error(\"Error sending HTML to server:\", err);\r",
													"            } else {\r",
													"                console.log(\"Server response:\", res.text());\r",
													"            }\r",
													"        });\r",
													"\r",
													"    } else {\r",
													"        console.warn(\"printout_content not found or not a string\");\r",
													"        pm.visualizer.set(`<h3>⚠️ printout_content not available</h3>`);\r",
													"    }\r",
													"} catch (e) {\r",
													"    console.error(\"Failed to parse response JSON or render template:\", e.message);\r",
													"    pm.visualizer.set(`<h3>❌ Error parsing response or rendering</h3><pre>${e.message}</pre>`);\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"// Логування запиту та відповіді\r",
													"\r",
													"(function () {\r",
													"  // не логувати /log щоб уникнути рекурсії\r",
													"  if (pm.request.url.toString().includes('/log')) return;\r",
													"\r",
													"  const logger = pm.require('@winter-zodiac-949553/log-utils')\r",
													"  const logPayload = logger.createLogPayload(pm);\r",
													"  logger.sendLog(logPayload);\r",
													"})();\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {
													"@winter-zodiac-949553/log-utils": {
														"id": "019763ea-01f4-7431-9bc8-865f51c1b866"
													}
												}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "dfd252a6-9c7c-42f3-bbc1-b72f892c5086",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-c262e887-991d-43f4-9322-99edb2897350",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "api-key",
												"value": "30276e63617461a185ec"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/contract_requests/reimbursement/{{contract_request_id}}/printout_content",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"contract_requests",
												"reimbursement",
												"{{contract_request_id}}",
												"printout_content"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-c730a956-adb9-4bac-a798-22d1bb8be9d4"
						},
						{
							"name": "Capitation reports",
							"item": [
								{
									"name": "Get capitation reports",
									"id": "15381251-fa9cff88-218c-4125-9820-3c64abb80e05",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/capitation_reports?page=2&page_size=50",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"capitation_reports"
											],
											"query": [
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page_size",
													"value": "50"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get capitation report details",
									"id": "15381251-4e3ecc77-5b0d-408f-8dcb-3d63b3910d1b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/capitation_report_details?edrpou=34056008&report_id=role-1380df72-275a-11e7-93ae-92361f002671",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"capitation_report_details"
											],
											"query": [
												{
													"key": "edrpou",
													"value": "34056008"
												},
												{
													"key": "report_id",
													"value": "role-1380df72-275a-11e7-93ae-92361f002671"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-87b3e888-4b5b-428b-830d-233f39171e2a"
						},
						{
							"name": "Get Contract Details",
							"id": "15381251-e95f4447-3299-4eb3-9ba7-d79e7d4b726c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/contracts/reimbursement/9f6ae40e-0fe9-4d57-b765-a22398e7ad93",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"contracts",
										"reimbursement",
										"9f6ae40e-0fe9-4d57-b765-a22398e7ad93"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contracts list",
							"id": "15381251-3a211be9-22c9-4dfc-b8c7-235fa47ba879",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/contracts/reimbursement/?status=VERIFIED&page_size=500",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"contracts",
										"reimbursement",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "e3b56386-6f79-4808-9819-b1e3fa29b282",
											"disabled": true
										},
										{
											"key": "contractor_legal_entity_id",
											"value": "69783dd1-0f15-4906-8b58-65b7f0d85cb3b",
											"disabled": true
										},
										{
											"key": "edrpou",
											"value": "3045422037",
											"disabled": true
										},
										{
											"key": "contractor_owner_id",
											"value": "fcc8756e-ed4c-4e0a-ae6f-9efac6411417",
											"disabled": true
										},
										{
											"key": "nhs_signer_id",
											"value": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
											"disabled": true
										},
										{
											"key": "status",
											"value": "VERIFIED"
										},
										{
											"key": "is_suspended",
											"value": "true",
											"disabled": true
										},
										{
											"key": "date_from_start_date",
											"value": "2018-01-01",
											"disabled": true
										},
										{
											"key": "date_to_start_date",
											"value": "2019-01-01",
											"disabled": true
										},
										{
											"key": "date_from_end_date",
											"value": "2018-01-01",
											"disabled": true
										},
										{
											"key": "date_to_end_date",
											"value": "2019-01-01",
											"disabled": true
										},
										{
											"key": "medical_program_id",
											"value": "2075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "500"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contract printout form",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "996313da-a812-4d9e-9837-b0991da89375",
										"exec": [
											"let html;\r",
											"\r",
											"try {\r",
											"    const resData = pm.response.json();\r",
											"\r",
											"    if (\r",
											"        resData &&\r",
											"        resData.data &&\r",
											"        typeof resData.data.printout_content === 'string'\r",
											"    ) {\r",
											"        html = resData.data.printout_content;\r",
											"\r",
											"        // Візуалізувати в окремій вкладці\r",
											"        pm.visualizer.set(html);\r",
											"\r",
											"        // Декодуємо escape-послідовності\r",
											"        const decodedHtml = html\r",
											"            .replace(/\\\\n/g, \"\\n\")\r",
											"            .replace(/\\\\\"/g, '\"')\r",
											"            .replace(/\\\\'/g, \"'\")\r",
											"            .replace(/\\\\\\\\/g, \"\\\\\");\r",
											"\r",
											"        console.log(\"Decoded HTML:\", decodedHtml);\r",
											"\r",
											"        // Відправляємо розкодований HTML на локальний сервер\r",
											"        pm.sendRequest({\r",
											"            url: \"http://localhost:3000/save-html/contract_printout_content\",\r",
											"            method: \"POST\",\r",
											"            header: {\r",
											"                \"Content-Type\": \"text/plain\"\r",
											"            },\r",
											"            body: {\r",
											"                mode: \"raw\",\r",
											"                raw: decodedHtml\r",
											"            }\r",
											"        }, function (err, res) {\r",
											"            if (err) {\r",
											"                console.error(\"Error sending HTML to server:\", err);\r",
											"            } else {\r",
											"                console.log(\"Server response:\", res.text());\r",
											"            }\r",
											"        });\r",
											"\r",
											"    } else {\r",
											"        console.warn(\"printout_content not found or not a string\");\r",
											"        pm.visualizer.set(`<h3>⚠️ printout_content not available</h3>`);\r",
											"    }\r",
											"} catch (e) {\r",
											"    console.error(\"Failed to parse response JSON or render template:\", e.message);\r",
											"    pm.visualizer.set(`<h3>❌ Error parsing response or rendering</h3><pre>${e.message}</pre>`);\r",
											"}\r",
											"\r",
											"\r",
											"// Логування запиту та відповіді\r",
											"\r",
											"(function () {\r",
											"    // не логувати /log щоб уникнути рекурсії\r",
											"    if (pm.request.url.toString().includes('/log')) return;\r",
											"\r",
											"    const logger = pm.require('@winter-zodiac-949553/log-utils')\r",
											"    const logPayload = logger.createLogPayload(pm);\r",
											"    logger.sendLog(logPayload);\r",
											"})();"
										],
										"type": "text/javascript",
										"packages": {
											"@winter-zodiac-949553/log-utils": {
												"id": "019763ea-01f4-7431-9bc8-865f51c1b866"
											}
										}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e395d420-1aa8-41c0-93dc-a888d3ca3f84",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-ea2e65cf-6bd0-40a6-a877-54b24b4bfdf2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/contracts/reimbursement/a916d65b-db4a-4335-8e03-a365f6eb973b/printout_content",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"contracts",
										"reimbursement",
										"a916d65b-db4a-4335-8e03-a365f6eb973b",
										"printout_content"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-e3675c85-0eef-4d33-b28c-af089a35ae83"
				},
				{
					"name": "Licenses",
					"item": [
						{
							"name": "Create license",
							"id": "15381251-f4432e33-abf1-457d-8d21-679f6387204c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"PHARMACY\",\r\n  \"license_number\": \"fd121443\",\r\n  \"issued_by\": \"Кваліфікацйна комісія\",\r\n  \"issued_date\": \"2023-11-17\",\r\n  \"expiry_date\": \"2024-11-17\",\r\n  \"active_from_date\": \"2023-11-17\",\r\n  \"what_licensed\": \"реалізація наркотичних засобів\",\r\n  \"order_no\": \"ВА45234\",\r\n  \"is_primary\": false\r\n}"
								},
								"url": {
									"raw": "{{host_demo}}/api/licenses",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"licenses"
									]
								},
								"description": "This method must be used to create additional licenses for legal entity (`is_primary=false`) in the system.\n\nPrimary license must be added with `Create/Update Legal Entity V2` method."
							},
							"response": []
						},
						{
							"name": "Update license",
							"id": "15381251-fadea5c5-9d72-4e52-ac33-960baf8c2647",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"type\": \"MSP\",\r\n  \"license_number\": \"fd123443\",\r\n  \"issued_by\": \"Кваліфікацйна комісія\",\r\n  \"issued_date\": \"2022-02-28\",\r\n  \"expiry_date\": \"2026-02-28\",\r\n  \"active_from_date\": \"2022-02-28\",\r\n  \"what_licensed\": \"реалізація наркотичних засобів\",\r\n  \"order_no\": \"ВА43234\",\r\n  \"is_primary\": false\r\n}"
								},
								"url": {
									"raw": "{{host_demo}}/api/licenses/id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"licenses",
										"id"
									]
								},
								"description": "This method must be used to update additional license (`is_primary=false`) for legal entity in the system.\n\nPrimary license must be updated with `Create/Update Legal Entity V2` method."
							},
							"response": []
						},
						{
							"name": "Get licenses",
							"id": "15381251-658eaf45-712a-47bc-878e-9362556f9f97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/licenses",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"licenses"
									],
									"query": [
										{
											"key": "id",
											"value": "d290f1ee-6c54-4b01-90e6-d701748f0851",
											"disabled": true
										},
										{
											"key": "license_number",
											"value": "fd12344344",
											"disabled": true
										},
										{
											"key": "type",
											"value": "PHARMACY_DRUGS",
											"disabled": true
										},
										{
											"key": "is_primary",
											"value": "true",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-429b6686-8de2-48bc-b612-a70e01a9124a"
				},
				{
					"name": "Healthcare Services",
					"item": [
						{
							"name": "Create HealthCare Service for Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "38ec281a-26da-4ac2-8fec-7fd64978b45c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ea86d24e-51c5-4e2f-88f6-43a0fcb3db0c",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-e0103e21-33ef-483c-9bd8-875befde5e55",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"division_id\": \"f40ca1ea-e169-4db5-92ec-91d6269f3795\",\r\n    \"speciality_type\": \"PROCTOLOGY\",\r\n    \"providing_condition\": \"OUTPATIENT\",\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"HEALTHCARE_SERVICE_CATEGORIES\",\r\n                \"code\": \"PHC\"\r\n            }\r\n        ]\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/healthcare_services",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"healthcare_services"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create HealthCare Service for Division",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "316fe4b3-fedb-467d-88b2-e94704611c9e"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"id": "125766d8-6764-44ee-b03f-7d3fd93bbd12"
									}
								}
							],
							"id": "15381251-c3f749a8-b506-46c5-8053-e4ddef0b83e6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"division_id\": \"be34b00b-05de-4107-b21b-953f24ae1f69\",\r\n    \"license_id\": \"f9c70fce-9fec-4b64-b0de-a358825f6cac\",\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"HEALTHCARE_SERVICE_CATEGORIES\",\r\n                \"code\": \"PHARMACY_DRUGS\"\r\n            }\r\n        ]\r\n    },\r\n    \"type\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"HEALTHCARE_SERVICE_PHARMACY_DRUGS_TYPES\",\r\n                \"code\": \"SALE\"\r\n            }\r\n        ]\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{host_demo}}/api/healthcare_services",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"healthcare_services"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update healthcare service",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "3527361e-c2a4-4abb-8a9e-c1d69d812eb5"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "1e3e652e-b0e0-4b66-a88f-dc75ba9034b6"
									}
								}
							],
							"id": "15381251-d39afdff-0ca3-40a7-9538-f88b0f8c44be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"comment\": \"Заведено помилково\",\r\n  \"coverage_area\": [\r\n    \"2c0110a9-0bea-4b16-af8e-6e2e149a5bfc\"\r\n  ],\r\n  \"available_time\": [\r\n    {\r\n      \"days_of_week\": [\r\n        \"mon\"\r\n      ],\r\n      \"all_day\": true,\r\n      \"available_start_time\": \"08:30:00\",\r\n      \"available_end_time\": \"19:00:00\"\r\n    }\r\n  ],\r\n  \"not_available\": [\r\n    {\r\n      \"description\": \"Санітарний день\",\r\n      \"during\": {\r\n        \"start\": \"2018-08-02T10:45:16.000Z\",\r\n        \"end\": \"2018-08-02T11:00:00.000Z\"\r\n      }\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{host_demo}}/api/healthcare_services/id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"healthcare_services",
										"id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate healthcare service",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "85e5dfa6-c5fb-4eaa-8b2d-f58c6c5db284"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "7328511f-f626-438e-b5dc-e5deca853592"
									}
								}
							],
							"id": "15381251-9f436c42-6754-4bca-9729-e9b3ca06cf3e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/healthcare_services/id/actions/deactivate",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"healthcare_services",
										"id",
										"actions",
										"deactivate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate healthcare service Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "d743af58-5513-4b34-a3bd-f127d0cf095e"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "5622ea33-eb0a-49ee-b6df-7bd2f2639e16"
									}
								}
							],
							"id": "15381251-09d1a836-7771-4f6b-9b3e-0fef1c8e1d8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/healthcare_services/id/actions/activate",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"healthcare_services",
										"id",
										"actions",
										"activate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get healthcare services",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83574876-acb6-4f20-ad5e-93cb73d4f0d7",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9dcefce2-11d0-47da-bc78-ae9a20ef578f",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-d7e66033-b6b0-4875-9896-de97fd796d14",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/healthcare_services/?division_id={{user_division_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"healthcare_services",
										""
									],
									"query": [
										{
											"key": "speciality_type",
											"value": "FAMILY_DOCTOR",
											"disabled": true
										},
										{
											"key": "providing_condition",
											"value": "OUTPATIENT",
											"disabled": true
										},
										{
											"key": "category",
											"value": "MSP",
											"disabled": true
										},
										{
											"key": "type",
											"value": "SALE",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ACTIVE",
											"disabled": true
										},
										{
											"key": "page",
											"value": "",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "1000",
											"disabled": true
										},
										{
											"key": "division_id",
											"value": "{{user_division_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get healthcare service details by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "aefef813-ed67-4785-be02-ca84985947ed"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"id": "3ff9484e-8a69-4a34-9095-137d424b3382"
									}
								}
							],
							"id": "15381251-006aa3fd-c185-4459-819d-6851764f353f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/healthcare_services/id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"healthcare_services",
										"id"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-2fe0be3f-29e5-4767-acd9-88b70a5a735d"
				}
			],
			"id": "15381251-45b8ed5e-8e00-4ea0-ab6a-70a47d2a9e6a"
		},
		{
			"name": "Person_Preperson_Merge_AuthMethods_Verification",
			"item": [
				{
					"name": "Person",
					"item": [
						{
							"name": "Person Request",
							"item": [
								{
									"name": "Create Person Request",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fd3cee88-735d-4709-8a1a-9eb943058a8c",
												"exec": [
													"function generateRandomTaxId() {\r",
													"    let taxId = '';\r",
													"    for (let i = 0; i < 10; i++) {\r",
													"        taxId += Math.floor(Math.random() * 10); // Generate a random digit\r",
													"    }\r",
													"    return taxId;\r",
													"}\r",
													"\r",
													"// Generate a random tax ID\r",
													"const randomTaxId = generateRandomTaxId();\r",
													"\r",
													"// Set the random tax ID in an environment variable\r",
													"pm.globals.set('person_tax_id', randomTaxId);\r",
													"\r",
													"// Optional: Log the generated tax ID for debugging\r",
													"console.log('Generated tax ID:', randomTaxId);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5216d296-8e85-4d42-8a63-f7c0e53e96bc",
												"exec": [
													"const resBody = pm.response.json();\r",
													"\r",
													"function displayResponse(title, data) {\r",
													"    const html = `\r",
													"        <h1>${title}</h1>\r",
													"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
													"    pm.visualizer.set(html);\r",
													"}\r",
													"\r",
													"if (resBody.data.id) {\r",
													"    const personReqId = resBody.data.id\r",
													"    console.log(personReqId)\r",
													"    pm.globals.set(\"Person_req_id\", personReqId);\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"// Function to handle each URL request\r",
													"function processUrl(url, additionalData) {\r",
													"    console.log(url, 'urls loop');\r",
													"   \r",
													"    pm.sendRequest({\r",
													"        url: url,\r",
													"        method: 'PUT',\r",
													"        header: {\r",
													"            'Content-Type': 'image/jpeg'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify(additionalData) // Include additional data in the body\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error('Request failed:', err);\r",
													"            displayResponse('Request Error', { error: err.message });\r",
													"        } else {\r",
													"            let responseData;\r",
													"\r",
													"            // Check content type to determine how to parse the response\r",
													"            const contentType = res.headers.get('Content-Type');\r",
													"            console.log(contentType)\r",
													"            if (contentType && contentType.includes('text/plain')) {\r",
													"                try {\r",
													"                     // Handle TEXT response if needed\r",
													"                responseData = res.text(); // Get response as text\r",
													"                displayResponse('Document sign successful', { response: responseData });\r",
													"                } catch (e) {\r",
													"                    console.error('JSON parsing error:', e);\r",
													"                    displayResponse('Parsing Error', { error: 'Failed to parse JSON' });\r",
													"                    return;\r",
													"                }\r",
													"                // displayResponse('Document sign successful', responseData);\r",
													"            } else {\r",
													"                // Handle other response types if needed\r",
													"                responseData = res.text(); // Default to text for unknown formats\r",
													"                displayResponse('Unknown Response Format', { response: responseData });\r",
													"            }\r",
													"        }\r",
													"    });\r",
													"}\r",
													"\r",
													"const resData = pm.response.json();\r",
													"\r",
													"// Extract URLs from the documents array in the response\r",
													"const documents = resData.urgent.documents;\r",
													"const urls = documents.map(doc => doc.url);\r",
													"\r",
													"const additionalData = {\r",
													"    row: '0JTQvtC60YPQvNC10L3Rgg=='\r",
													"};\r",
													"\r",
													"// Process each URL from the documents array\r",
													"urls.forEach(url => {\r",
													"    processUrl(url, additionalData);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"// Логування запиту та відповіді\r",
													"\r",
													"(function () {\r",
													"  // не логувати /log щоб уникнути рекурсії\r",
													"  if (pm.request.url.toString().includes('/log')) return;\r",
													"\r",
													"  const logger = pm.require('@winter-zodiac-949553/log-utils')\r",
													"  const logPayload = logger.createLogPayload(pm);\r",
													"  logger.sendLog(logPayload);\r",
													"})();"
												],
												"type": "text/javascript",
												"packages": {
													"@winter-zodiac-949553/log-utils": {
														"id": "019763ea-01f4-7431-9bc8-865f51c1b866"
													}
												}
											}
										}
									],
									"id": "15381251-5ce5306c-aaf4-4ecb-bbda-69b4a67c64f5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"person\": {\n        \"first_name\": \"В/Йоханнес\",\n        \"last_name\": \"Гара\",\n        \"second_name\": \"С.М.\",\n        \"birth_date\": \"2009-11-25\",\n        \"birth_country\": \"Україна\",\n        \"birth_settlement\": \"Київ\",\n        \"gender\": \"MALE\",\n        \"email\": \"test1234@mail.com\",\n        \"no_tax_id\": false,\n        \"tax_id\": \"{{person_tax_id}}\",\n        \"secret\": \"secret\",\n        \"documents\": [\n            {\n                \"type\": \"NATIONAL_ID\",\n                \"number\": \"566436411\",\n                \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\n                \"issued_at\": \"2017-02-28\",\n                \"expiration_date\":\"2027-02-28\"\n            },\n            {\n                \"type\": \"MARRIAGE_CERTIFICATE\",\n                \"number\": \"566436411\",\n                \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\n                \"issued_at\": \"2017-02-28\",\n                \"expiration_date\":\"2027-02-28\"\n            }\n        ],\n        \"addresses\": [\n            {\n                \"area\": \"ХАРКІВСЬКА\",\n                \"building\": \"15\",\n                \"country\": \"UA\",\n                \"region\": \"ЧУГУЇВСЬКИЙ\",\n                \"settlement\": \"ВЕЛИКА БАБКА\",\n                \"settlement_id\": \"7a438190-5b6f-4341-b25d-0b19f46c320f\",\n                \"settlement_type\": \"VILLAGE\",\n                \"street\": \"Ніжинська\",\n                \"street_type\": \"STREET\",\n                \"type\": \"RESIDENCE\",\n                \"zip\": \"12345\"\n            }\n        ],\n        \"phones\": [\n            {\n                \"type\": \"MOBILE\",\n                \"number\": \"+380990953716\"\n            }\n        ],\n        \"authentication_methods\": [\n            {\n                \"type\": \"OFFLINE\"\n            }\n        ],\n        \"unzr\": \"19910824-00026\",\n        \"emergency_contact\": {\n            \"first_name\": \"Ганна\",\n            \"last_name\": \"Сіра\",\n            \"second_name\": \"Іванівна\",\n            \"phones\": [\n                {\n                    \"type\": \"MOBILE\",\n                    \"number\": \"+380954445566\"\n                }\n            ]\n        },\n        \"preferred_way_communication\": \"email\"\n    },\n    \"patient_signed\": false,\n    \"process_disclosure_data_consent\": true\n}"
										},
										"url": {
											"raw": "{{host}}/api/v2/person_requests",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v2",
												"person_requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create_peson_request_under_14",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "141393a3-7766-44d7-9dde-c4b7876ccc8c",
												"exec": [
													"const resBody = pm.response.json();\r",
													"\r",
													"function displayResponse(title, data) {\r",
													"    const html = `\r",
													"        <h1>${title}</h1>\r",
													"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
													"    pm.visualizer.set(html);\r",
													"}\r",
													"\r",
													"if (resBody.data.id) {\r",
													"    const personReqId = resBody.data.id\r",
													"    console.log(personReqId)\r",
													"    pm.globals.set(\"Person_req_id\", personReqId);\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"// Function to handle each URL request\r",
													"function processUrl(url, additionalData) {\r",
													"    console.log(url, 'urls loop');\r",
													"   \r",
													"    pm.sendRequest({\r",
													"        url: url,\r",
													"        method: 'PUT',\r",
													"        header: {\r",
													"            'Content-Type': 'image/jpeg'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify(additionalData) // Include additional data in the body\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error('Request failed:', err);\r",
													"            displayResponse('Request Error', { error: err.message });\r",
													"        } else {\r",
													"            let responseData;\r",
													"\r",
													"            // Check content type to determine how to parse the response\r",
													"            const contentType = res.headers.get('Content-Type');\r",
													"            console.log(contentType)\r",
													"            if (contentType && contentType.includes('text/plain')) {\r",
													"                try {\r",
													"                     // Handle TEXT response if needed\r",
													"                responseData = res.text(); // Get response as text\r",
													"                displayResponse('Document sign successful', { response: responseData });\r",
													"                } catch (e) {\r",
													"                    console.error('JSON parsing error:', e);\r",
													"                    displayResponse('Parsing Error', { error: 'Failed to parse JSON' });\r",
													"                    return;\r",
													"                }\r",
													"                // displayResponse('Document sign successful', responseData);\r",
													"            } else {\r",
													"                // Handle other response types if needed\r",
													"                responseData = res.text(); // Default to text for unknown formats\r",
													"                displayResponse('Unknown Response Format', { response: responseData });\r",
													"            }\r",
													"        }\r",
													"    });\r",
													"}\r",
													"\r",
													"const resData = pm.response.json();\r",
													"\r",
													"// Extract URLs from the documents array in the response\r",
													"const documents = resData.urgent.documents;\r",
													"const urls = documents.map(doc => doc.url);\r",
													"\r",
													"const additionalData = {\r",
													"    row: '0JTQvtC60YPQvNC10L3Rgg=='\r",
													"};\r",
													"\r",
													"// Process each URL from the documents array\r",
													"urls.forEach(url => {\r",
													"    processUrl(url, additionalData);\r",
													"});\r",
													"\r",
													"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d5a83a0d-2268-442c-ba89-8c755b23120c",
												"exec": [
													"function generateRandomTaxId() {\r",
													"    let taxId = '';\r",
													"    for (let i = 0; i < 10; i++) {\r",
													"        taxId += Math.floor(Math.random() * 10); // Generate a random digit\r",
													"    }\r",
													"    return taxId;\r",
													"}\r",
													"\r",
													"// Generate a random tax ID\r",
													"const randomTaxId = generateRandomTaxId();\r",
													"\r",
													"// Set the random tax ID in an environment variable\r",
													"pm.globals.set('person_tax_id', randomTaxId);\r",
													"\r",
													"// Optional: Log the generated tax ID for debugging\r",
													"console.log('Generated tax ID:', randomTaxId);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-99fe6f72-b2f8-49ac-88ea-aa99fc38d336",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "API-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"person\": {\r\n        \"first_name\": \"Наталія\",\r\n        \"last_name\": \"д.Артан'ян\",\r\n        \"second_name\": \"Ігорівна\",\r\n        \"birth_date\": \"2020-05-10\",\r\n        \"birth_country\": \"Україна\",\r\n        \"birth_settlement\": \"Київ\",\r\n        \"gender\": \"MALE\",\r\n        \"email\": \"mail@gmail.com\",\r\n        \"no_tax_id\": false,\r\n        \"tax_id\": \"{{person_tax_id}}\",\r\n        \"secret\": \"secret\",\r\n        \"documents\": [\r\n            {\r\n                \"type\": \"BIRTH_CERTIFICATE\",\r\n                \"number\": \"І-РВ675276\",\r\n                \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\r\n                \"issued_at\": \"2020-05-16\",\r\n                \"expiration_date\": \"2027-02-28\"\r\n            }\r\n        ],\r\n        \"addresses\": [\r\n            {\r\n                \"type\": \"RESIDENCE\",\r\n                \"apartment\": \"45Б\",\r\n                \"area\": \"КИЇВСЬКА\",\r\n                \"region\": \"Києво-Свят0шинський\",\r\n                \"building\": \"15\",\r\n                \"country\": \"IT\",\r\n                \"settlement\": \"ЧУГУЇВ\",\r\n                \"settlement_id\": \"fb5e6f07-0c2d-4c5c-8bc5-f0b86bb94494\",\r\n                \"settlement_type\": \"CITY\",\r\n                \"street\": \"Г0голя\",\r\n                \"street_type\": \"STREET\",\r\n                \"zip\": \"02115\"\r\n            }\r\n        ],\r\n        \"phones\": [\r\n            {\r\n                \"type\": \"MOBILE\",\r\n                \"number\": \"+380634390602\"\r\n            }\r\n        ],\r\n        \"authentication_methods\": [\r\n            {\r\n                \"type\": \"THIRD_PERSON\",\r\n                \"value\": \"421c3318-f783-4883-a030-f0c63aa7e0bf\",\r\n                \"alias\": \"father\"\r\n            }\r\n        ],\r\n        \"unzr\": \"20200515-00011\",\r\n        \"emergency_contact\": {\r\n            \"first_name\": \"Володимир\",\r\n            \"last_name\": \"Петренко\",\r\n            \"second_name\": \"Іванівнович\",\r\n            \"phones\": [\r\n                {\r\n                    \"type\": \"MOBILE\",\r\n                    \"number\": \"+380634390340\"\r\n                }\r\n            ]\r\n        },\r\n        \"confidant_person\": {\r\n            \"person_id\": \"421c3318-f783-4883-a030-f0c63aa7e0bf\",\r\n            \"documents_relationship\": [\r\n                {\r\n                    \"type\": \"BIRTH_CERTIFICATE\",\r\n                    \"number\": \"І-БК535231\",\r\n                    \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\r\n                    \"issued_at\": \"2020-05-16\",\r\n                    \"active_to\": \"2027-02-28\"\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"patient_signed\": false,\r\n    \"process_disclosure_data_consent\": true\r\n}"
										},
										"url": {
											"raw": "{{host}}/api/v2/person_requests",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v2",
												"person_requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_peson_request_under Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "48537a8b-5b10-452c-b219-f000259b275a",
												"exec": [
													"const resBody = JSON.parse(responseBody);\r",
													"\r",
													"function displayResponse(title, data) {\r",
													"    const html = `\r",
													"        <h1>${title}</h1>\r",
													"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
													"    pm.visualizer.set(html);\r",
													"}\r",
													"\r",
													"if (resBody.data.id) {\r",
													"    const personReqId = resBody.data.id\r",
													"    console.log(personReqId)\r",
													"    pm.globals.set(\"Person_req_id\", personReqId);\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"// Function to handle each URL request\r",
													"function processUrl(url, additionalData) {\r",
													"    console.log(url, 'urls loop');\r",
													"   \r",
													"    pm.sendRequest({\r",
													"        url: url,\r",
													"        method: 'PUT',\r",
													"        header: {\r",
													"            'Content-Type': 'image/jpeg'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify(additionalData) // Include additional data in the body\r",
													"        }\r",
													"    }, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error('Request failed:', err);\r",
													"            displayResponse('Request Error', { error: err.message });\r",
													"        } else {\r",
													"            let responseData;\r",
													"\r",
													"            // Check content type to determine how to parse the response\r",
													"            const contentType = res.headers.get('Content-Type');\r",
													"            console.log(contentType)\r",
													"            if (contentType && contentType.includes('text/plain')) {\r",
													"                try {\r",
													"                     // Handle TEXT response if needed\r",
													"                responseData = res.text(); // Get response as text\r",
													"                displayResponse('Document sign successful', { response: responseData });\r",
													"                } catch (e) {\r",
													"                    console.error('JSON parsing error:', e);\r",
													"                    displayResponse('Parsing Error', { error: 'Failed to parse JSON' });\r",
													"                    return;\r",
													"                }\r",
													"                // displayResponse('Document sign successful', responseData);\r",
													"            } else {\r",
													"                // Handle other response types if needed\r",
													"                responseData = res.text(); // Default to text for unknown formats\r",
													"                displayResponse('Unknown Response Format', { response: responseData });\r",
													"            }\r",
													"        }\r",
													"    });\r",
													"}\r",
													"\r",
													"const resData = pm.response.json();\r",
													"\r",
													"// Extract URLs from the documents array in the response\r",
													"const documents = resData.urgent.documents;\r",
													"const urls = documents.map(doc => doc.url);\r",
													"\r",
													"const additionalData = {\r",
													"    row: '0JTQvtC60YPQvNC10L3Rgg=='\r",
													"};\r",
													"\r",
													"// Process each URL from the documents array\r",
													"urls.forEach(url => {\r",
													"    processUrl(url, additionalData);\r",
													"});\r",
													"\r",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c2d8ad6-c3f7-4605-85c1-38b80765215f",
												"exec": [
													"function generateRandomTaxId() {\r",
													"    let taxId = '';\r",
													"    for (let i = 0; i < 10; i++) {\r",
													"        taxId += Math.floor(Math.random() * 10); // Generate a random digit\r",
													"    }\r",
													"    return taxId;\r",
													"}\r",
													"\r",
													"// Generate a random tax ID\r",
													"const randomTaxId = generateRandomTaxId();\r",
													"\r",
													"// Set the random tax ID in an environment variable\r",
													"pm.globals.set('person_tax_id', randomTaxId);\r",
													"\r",
													"// Optional: Log the generated tax ID for debugging\r",
													"console.log('Generated tax ID:', randomTaxId);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-9dc36155-422c-4f35-a1b6-1a8dd4aeb56b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "API-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"person\": {\r\n        \"id\":\"b5dfd213-ece0-4035-b802-6f7c18e80a5c\",\r\n        \"first_name\": \"Підопічний\",\r\n        \"last_name\": \"Той\",\r\n        \"second_name\": \"Один\",\r\n        \"birth_date\": \"2014-08-19\",\r\n        \"birth_country\": \"Україна\",\r\n        \"birth_settlement\": \"Київ\",\r\n        \"gender\": \"MALE\",\r\n        \"email\": \"s.kurylenko.mail@gmail.com\",\r\n        \"tax_id\": \"2247262245\",\r\n        \"no_tax_id\": false,\r\n        \"secret\": \"secret\",\r\n        \"documents\": [\r\n            {\r\n                \"type\": \"BIRTH_CERTIFICATE\",\r\n                \"number\": \"ПП150510\",\r\n                \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\r\n                \"issued_at\": \"2020-02-28\"\r\n            }\r\n        ],\r\n        \"addresses\": [\r\n            {\r\n                \"type\": \"RESIDENCE\",\r\n                \"apartment\": \"45Б\",\r\n                \"area\": \"КИЇВСЬКА\",\r\n                \"region\": \"Києво-Свят0шинський\",\r\n                \"building\": \"15\",\r\n                \"country\": \"IT\",\r\n                \"settlement\": \"ЧУГУЇВ\",\r\n                \"settlement_id\": \"fb5e6f07-0c2d-4c5c-8bc5-f0b86bb94494\",\r\n                \"settlement_type\": \"CITY\",\r\n                \"street\": \"Г0голя\",\r\n                \"street_type\": \"STREET\",\r\n                \"zip\": \"02115\"\r\n            }\r\n        ],\r\n        \"phones\": [\r\n            {\r\n                \"type\": \"MOBILE\",\r\n                \"number\": \"+380634390602\"\r\n            }\r\n        ],\r\n        \"unzr\": \"20150119-00024\",\r\n        \"emergency_contact\": {\r\n            \"first_name\": \"Володимир\",\r\n            \"last_name\": \"Петренко\",\r\n            \"second_name\": \"Іванівнович\",\r\n            \"phones\": [\r\n                {\r\n                    \"type\": \"MOBILE\",\r\n                    \"number\": \"+380634390340\"\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"patient_signed\": false,\r\n    \"process_disclosure_data_consent\": true,\r\n    \"authorize_with\": \"eba17b73-794c-48d1-abfc-7674c36f3234\"\r\n\r\n}"
										},
										"url": {
											"raw": "{{host}}/api/v2/person_requests",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v2",
												"person_requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "Approve Person Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ff16486a-8f10-4455-a5c5-6bfd589792d1",
												"exec": [
													"if (pm.response.code === 200) {\r",
													"\r",
													"    function displayResponse(title, data) {\r",
													"        const html = `\r",
													"        <h1>${title}</h1>\r",
													"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
													"        pm.visualizer.set(html);\r",
													"    }\r",
													"\r",
													"    // Extract data from the response\r",
													"    const responseJson = pm.response.json();\r",
													"    let dataToSign = responseJson.data;\r",
													"\r",
													"    console.log(dataToSign)\r",
													"\r",
													"    dataToSign.patient_signed = true;\r",
													"\r",
													"    // Define the URL and the request details for the local server\r",
													"    const localServerUrl = 'http://localhost:3000/receive-data'; // Replace with your local server endpoint\r",
													"    const requestData = {\r",
													"        method: 'POST',\r",
													"        url: localServerUrl,\r",
													"        header: {\r",
													"            'Content-Type': 'application/json'\r",
													"        },\r",
													"        body: {\r",
													"            mode: 'raw',\r",
													"            raw: JSON.stringify(dataToSign) // Send the entire response or specific fields\r",
													"        }\r",
													"    };\r",
													"\r",
													"    // Send the request to the local server\r",
													"    pm.sendRequest(requestData, function (err, res) {\r",
													"        if (err) {\r",
													"            console.error('Error sending request to local server:', err);\r",
													"        } else {\r",
													"            console.log('Response from local server:', res.json());\r",
													"            const responseBody = res.json();\r",
													"\r",
													"            pm.globals.set('signed_content', responseBody.signed_content)\r",
													"            \r",
													"            displayResponse('Signed person data', responseBody);\r",
													"        }\r",
													"    });\r",
													"} else {\r",
													"    console.log('Initial request failed');\r",
													"}\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Логування запиту та відповіді\r",
													"\r",
													"(function () {\r",
													"  // не логувати /log щоб уникнути рекурсії\r",
													"  if (pm.request.url.toString().includes('/log')) return;\r",
													"\r",
													"  const logger = pm.require('@winter-zodiac-949553/log-utils')\r",
													"  const logPayload = logger.createLogPayload(pm);\r",
													"  logger.sendLog(logPayload);\r",
													"})();"
												],
												"type": "text/javascript",
												"packages": {
													"@winter-zodiac-949553/log-utils": {
														"id": "019763ea-01f4-7431-9bc8-865f51c1b866"
													}
												}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "539894e3-cdc9-42f5-a6a0-147d2d665bea",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-d27ff7df-63b0-400d-9078-009bf53cecbd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"verification_code\": 8226\r\n}"
										},
										"url": {
											"raw": "{{host}}/api/v2/person_requests/{{Person_req_id}}/actions/approve",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v2",
												"person_requests",
												"{{Person_req_id}}",
												"actions",
												"approve"
											],
											"query": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"disabled": true
												},
												{
													"key": "Authorization",
													"value": "Bearer {{access_token}}",
													"disabled": true
												},
												{
													"key": "api-key",
													"value": "{{mis_client_secret}}",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sign person request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "570981d4-2dbf-4314-9f57-50ee6a67ff88",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"// Логування запиту та відповіді",
													"",
													"(function () {",
													"  // не логувати /log щоб уникнути рекурсії",
													"  if (pm.request.url.toString().includes('/log')) return;",
													"",
													"  const logger = pm.require('@winter-zodiac-949553/log-utils')",
													"  const logPayload = logger.createLogPayload(pm);",
													"  logger.sendLog(logPayload);",
													"})();",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {
													"@winter-zodiac-949553/log-utils": {
														"id": "019763ea-01f4-7431-9bc8-865f51c1b866"
													}
												}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cbfa6777-d20b-424d-af25-7ae94f0ac435",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "15381251-200b899d-889f-4b37-aee1-7fbfbb12d93f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "drfo",
												"value": "2799207815"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"signed_content\": \"{{signed_content}}\"\n}\n\n"
										},
										"url": {
											"raw": "{{host}}/api/v2/person_requests/{{Person_req_id}}/actions/sign",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"v2",
												"person_requests",
												"{{Person_req_id}}",
												"actions",
												"sign"
											]
										}
									},
									"response": []
								},
								{
									"name": "Reject Person Request",
									"id": "15381251-0dd33dc5-87e6-41b2-8c04-a1759ae08631",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "30276e63617461a185ec",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/person_requests/954909cc-d696-4eff-9eff-47e0f5bca8d2/actions/reject",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"person_requests",
												"954909cc-d696-4eff-9eff-47e0f5bca8d2",
												"actions",
												"reject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Person Request by ID",
									"id": "15381251-4077b34f-146b-4cd5-b0f0-c77a4901ed12",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/person_requests/e32a0e11-15cd-48a4-ad5a-b1c9173446c2",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"person_requests",
												"e32a0e11-15cd-48a4-ad5a-b1c9173446c2"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Person Requests List Copy",
									"id": "15381251-7a51e8cb-d527-4382-b0ab-b88e2e91f52a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "API-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/person_requests?page=1&page_size=500",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"person_requests"
											],
											"query": [
												{
													"key": "status",
													"value": "CANCELLED",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "page_size",
													"value": "500"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Resend Authorization OTP on Person Request",
									"id": "15381251-a18c95b1-2d7e-422a-abf4-76bc829dd8f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "API-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/person_requests/id/actions/resend_otp",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"person_requests",
												"id",
												"actions",
												"resend_otp"
											],
											"query": [
												{
													"key": "status",
													"value": "CANCELLED",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-4abf95ca-06ab-4544-bb2c-bdb461d8064e"
						},
						{
							"name": "Confidants",
							"item": [
								{
									"name": "Get Confidant Person relationships",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4b1a2650-4301-445c-b337-47246089fa5a",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ba700ee1-732b-44d6-8596-2f32657a4e9d",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-022ed9d7-7a58-468d-aeae-b906ab2ff30f",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true,
											"user-agent": true,
											"accept-encoding": true,
											"connection": true
										},
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/persons/96eb123f-d58e-488b-9b60-523a94232f26/confidant_person_relationships",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"persons",
												"96eb123f-d58e-488b-9b60-523a94232f26",
												"confidant_person_relationships"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new Confidant Person relationship request",
									"id": "15381251-7914d277-6b91-4e03-a828-b290f35d0701",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "API-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"confidant_person_id\": \"eb540550-2d5f-446c-bcc9-f0e7c8a1cb97\",\r\n  \"documents_relationship\": [\r\n    {\r\n      \"type\": \"BIRTH_CERTIFICATE\",\r\n      \"number\": \"ВР456342\",\r\n      \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\r\n      \"issued_at\": \"1988-11-25\",\r\n      \"active_to\": \"2035-08-19\"\r\n    }\r\n  ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/persons/635252d7-d629-4ed0-8d7f-417a47e55a18/confidant_person_relationship_requests",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"persons",
												"635252d7-d629-4ed0-8d7f-417a47e55a18",
												"confidant_person_relationship_requests"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate Confidant Person relationship request",
									"id": "15381251-517812ec-f547-4033-802a-36957528e288",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "API-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"confidant_person_relationship\": {\r\n    \"id\": \"95c501f5-651d-4d39-88bc-15b5bf654911\",\r\n    \"documents_relationship\": [\r\n      {\r\n        \"type\": \"BIRTH_CERTIFICATE\",\r\n        \"number\": \"АА120518\",\r\n        \"issued_by\": \"Рокитнянським РВ ГУ МВС Київської області\",\r\n        \"issued_at\": \"2020-02-28\"\r\n      }\r\n    ]\r\n  },\r\n  \"authorize_with\": \"684c83ee-8633-4fcd-8580-86b4286127d9\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/persons/c6227b7d-5486-4c46-9681-4539761467fc/confidant_person_relationship_requests/deactivate",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"persons",
												"c6227b7d-5486-4c46-9681-4539761467fc",
												"confidant_person_relationship_requests",
												"deactivate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Approve Confidant Person relationship request",
									"id": "15381251-26364c4f-8a2c-4c81-bb67-ab4a1e3d5c95",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "API-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"verification_code\": 5229\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/persons/635252d7-d629-4ed0-8d7f-417a47e55a18/confidant_person_relationship_requests/c4245a2d-d38c-4e71-ac85-424ddd94cea9/actions/approve",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"persons",
												"635252d7-d629-4ed0-8d7f-417a47e55a18",
												"confidant_person_relationship_requests",
												"c4245a2d-d38c-4e71-ac85-424ddd94cea9",
												"actions",
												"approve"
											]
										}
									},
									"response": []
								},
								{
									"name": "Resend Authorization OTP on Confidant Person relationship",
									"id": "15381251-3da7b9dc-e59c-47c6-9f91-5913aa848341",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "API-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/persons/id/confidant_person_relationship_requests/confidant_person_relationship_request_id/actions/resend_otp",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"persons",
												"id",
												"confidant_person_relationship_requests",
												"confidant_person_relationship_request_id",
												"actions",
												"resend_otp"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-9d63a987-d2c0-470b-ae51-86557ae13805"
						},
						{
							"name": "Search for a person",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ecff9e70-3bce-403a-8301-adfecdc17f61",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "85d23fa0-6515-4462-a141-96de877a724a",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-ba7ae802-90ae-4573-8284-45aefa14d62f",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"user-agent": true,
									"accept-encoding": true,
									"connection": true
								},
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/persons?birth_date=1965-09-27&first_name=Ярослав&last_name=Бойко",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons"
									],
									"query": [
										{
											"key": "second_name",
											"value": "Іванівна",
											"disabled": true
										},
										{
											"key": "birth_date",
											"value": "1965-09-27"
										},
										{
											"key": "first_name",
											"value": "Ярослав"
										},
										{
											"key": "tax_id",
											"value": "4730419503",
											"disabled": true
										},
										{
											"key": "last_name",
											"value": "Бойко"
										},
										{
											"key": "birth_certificate",
											"value": "I-БК535231",
											"disabled": true
										},
										{
											"key": "phone_number",
											"value": "+380634390602",
											"description": "%2B",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get personal data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7825b6f7-9c7a-4aa9-9d19-8a74c1f47b36",
										"exec": [
											"let resp = pm.response.json();",
											"",
											"let person = {",
											"    first_name: resp.data.first_name,",
											"    last_name: resp.data.last_name,",
											"    second_name: resp.data.second_name,",
											"    birth_date: resp.data.birth_date,",
											"    birth_country: resp.data.birth_country,",
											"    birth_settlement: resp.data.birth_settlement,",
											"    gender: resp.data.gender,",
											"    email: resp.data.email,",
											"    no_tax_id: resp.data.no_tax_id,",
											"    secret: resp.data.secret,",
											"    documents: resp.data.documents?.map(doc => ({",
											"        type: doc.type,",
											"        number: doc.number,",
											"        issued_by: doc.issued_by,",
											"        issued_at: doc.issued_at",
											"    })) || [],",
											"    addresses: resp.data.addresses?.map(addr => ({",
											"        area: addr.area,",
											"        building: addr.building,",
											"        country: addr.country,",
											"        region: addr.region,",
											"        settlement: addr.settlement,",
											"        settlement_id: addr.settlement_id,",
											"        settlement_type: addr.settlement_type,",
											"        street: addr.street,",
											"        street_type: addr.street_type,",
											"        type: addr.type,",
											"        zip: addr.zip",
											"    })) || [],",
											"    phones: resp.data.phones?.map(ph => ({",
											"        type: ph.type,",
											"        number: ph.number",
											"    })) || [],",
											"    emergency_contact: resp.data.emergency_contact ? {",
											"        first_name: resp.data.emergency_contact.first_name,",
											"        last_name: resp.data.emergency_contact.last_name,",
											"        second_name: resp.data.emergency_contact.second_name,",
											"        phones: resp.data.emergency_contact.phones?.map(ph => ({",
											"            type: ph.type,",
											"            number: ph.number",
											"        })) || []",
											"    } : null,",
											"    preferred_way_communication: resp.data.preferred_way_communication || \"email\"",
											"};",
											"",
											"if (resp.data.tax_id !== null) person.tax_id = resp.data.tax_id;",
											"if (resp.data.unzr !== null) person.unzr = resp.data.unzr;",
											"",
											"let personData = {",
											"    person: person,",
											"    patient_signed: false,",
											"    process_disclosure_data_consent: true",
											"};",
											"",
											"let template = `",
											"<div style=\"font-family: Arial, sans-serif; max-width: 800px; margin: 10px auto; padding: 15px; border: 1px solid #ccc; border-radius: 8px; background: #f9f9f9;\">",
											"    <h2 style=\"text-align:center; color:#333;\">Дані пацієнта</h2>",
											"    <pre id=\"jsonData\" style=\"background:#eee; padding:10px; border-radius:5px; overflow-x:auto;\">{{json}}</pre>",
											"    <button id=\"copyBtn\" style=\"",
											"        margin-top:10px; ",
											"        padding:8px 15px; ",
											"        font-size:14px; ",
											"        border:none; ",
											"        background:#4CAF50; ",
											"        color:white; ",
											"        border-radius:5px; ",
											"        cursor:pointer;",
											"        transition: all 0.1s ease;",
											"    \">Copy JSON</button>",
											"</div>",
											"",
											"<script>",
											"const btn = document.getElementById('copyBtn');",
											"",
											"btn.addEventListener('click', function() {",
											"    // Ефект натискання",
											"    btn.style.transform = 'scale(0.95)';",
											"    btn.style.background = '#45a049';",
											"",
											"    setTimeout(() => {",
											"        btn.style.transform = 'scale(1)';",
											"        btn.style.background = '#4CAF50';",
											"    }, 150);",
											"",
											"    var text = document.getElementById('jsonData').innerText;",
											"    var textArea = document.createElement('textarea');",
											"    textArea.value = text;",
											"    document.body.appendChild(textArea);",
											"    textArea.select();",
											"    try {",
											"        document.execCommand('copy');",
											"        alert('JSON скопійовано у буфер обміну!');",
											"    } catch (err) {",
											"        alert('Не вдалося скопіювати: ' + err);",
											"    }",
											"    document.body.removeChild(textArea);",
											"});",
											"</script>",
											"`;",
											"",
											"pm.visualizer.set(template, {",
											"    json: JSON.stringify(personData, null, 2)",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "892af767-00b6-46dc-8045-66415ebe0b2a",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-23fc0de1-1f66-467a-bba1-126c50aee136",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"user-agent": true,
									"accept-encoding": true,
									"connection": true
								},
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/persons/19311cc0-800d-41e2-8dc2-490a2e4565f4/personal_data",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons",
										"19311cc0-800d-41e2-8dc2-490a2e4565f4",
										"personal_data"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Person Emergency contact",
							"id": "15381251-1d5e6c3e-4725-4854-b78f-78e655611617",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/medical_event_type/medical_event_id/emergency_contact",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"medical_event_type",
										"medical_event_id",
										"emergency_contact"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-51ba401a-e77b-4abe-b369-1936088b4de8"
				},
				{
					"name": "PrePerson",
					"item": [
						{
							"name": "Get preperson by ID",
							"id": "15381251-e38b3b5d-9425-4f9f-9868-7b3aacf23998",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/prepersons/1b34e88b-17fb-4005-8925-8df115a86084",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"prepersons",
										"1b34e88b-17fb-4005-8925-8df115a86084"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create PrePerson request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cf17477c-d695-4580-8d9b-64ec5bcf8a87",
										"exec": [
											"var current_step = environment[\"declaration_current_step\"];",
											"//According to business logic, phone number need to be verified in Verification module.",
											"var phone_number = '+380937404005'",
											"// Генерирует случаиный инн/имя.",
											"function makeRandom(regexp, n)",
											"{",
											"    var text, possible, i;",
											"    if(regexp === \"name\")",
											"    {",
											"        text = \"Тест\";",
											"        possible = \"АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЮЯ\";",
											"        for(i=0; i < n; i++)",
											"        {",
											"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
											"        }",
											"    }",
											"    else if(regexp === \"tax\")",
											"    {",
											"        text = \"\";",
											"        possible = \"1234567890\";",
											"        for(i=0; i < n; i++)",
											"        {",
											"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
											"        }",
											"    }",
											"    else if(regexp === \"mob\")",
											"    {",
											"        text = \"+380\";",
											"        possible = \"1234567890\";",
											"        for(i=0; i < n; i++)",
											"        {",
											"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
											"        }",
											"    }",
											"    return text;",
											"}",
											"//Присваиваем значения глобальным переменным",
											"",
											"var randomName = makeRandom(\"name\", 3);",
											"postman.setEnvironmentVariable(\"declaration_first_name\", randomName);",
											"postman.setEnvironmentVariable(\"declaration_last_name\", randomName);",
											"postman.setEnvironmentVariable(\"declaration_second_name\", randomName);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cea47197-9303-4162-8acb-fbace8569673",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-d4221a0b-b730-49c4-a038-a842d7cb059f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"3999869394.2799207815.1\",\n  \"first_name\": \"Анна-Марія\",\n  \"last_name\": \"Бондар/Іванова\",\n  \"second_name\":\"Іванівна\",\n  \"gender\": \"MALE\",\n  \"birth_date\": \"1988-03-01\",\n  \"emergency_contact\": {\n    \"first_name\": \"В/Йоханнес\",\n    \"last_name\": \"Петренко\",\n    \"second_name\": \"Іванівна\",\n    \"phones\": [\n      {\n        \"type\": \"MOBILE\",\n        \"number\": \"+380951364444\"\n      }\n    ]\n  },\n  \"note\": \"Зареєстрований у тестових цілях\"\n}"
								},
								"url": {
									"raw": "{{host}}/api/prepersons",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"prepersons"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update PrePerson request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cf17477c-d695-4580-8d9b-64ec5bcf8a87",
										"exec": [
											"var current_step = environment[\"declaration_current_step\"];",
											"//According to business logic, phone number need to be verified in Verification module.",
											"var phone_number = '+380937404005'",
											"// Генерирует случаиный инн/имя.",
											"function makeRandom(regexp, n)",
											"{",
											"    var text, possible, i;",
											"    if(regexp === \"name\")",
											"    {",
											"        text = \"Тест\";",
											"        possible = \"АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩЮЯ\";",
											"        for(i=0; i < n; i++)",
											"        {",
											"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
											"        }",
											"    }",
											"    else if(regexp === \"tax\")",
											"    {",
											"        text = \"\";",
											"        possible = \"1234567890\";",
											"        for(i=0; i < n; i++)",
											"        {",
											"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
											"        }",
											"    }",
											"    else if(regexp === \"mob\")",
											"    {",
											"        text = \"+380\";",
											"        possible = \"1234567890\";",
											"        for(i=0; i < n; i++)",
											"        {",
											"            text += possible.charAt(Math.floor(Math.random() * possible.length));",
											"        }",
											"    }",
											"    return text;",
											"}",
											"//Присваиваем значения глобальным переменным",
											"",
											"var randomName = makeRandom(\"name\", 3);",
											"postman.setEnvironmentVariable(\"declaration_first_name\", randomName);",
											"postman.setEnvironmentVariable(\"declaration_last_name\", randomName);",
											"postman.setEnvironmentVariable(\"declaration_second_name\", randomName);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cea47197-9303-4162-8acb-fbace8569673",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-2518f7d1-06d1-4417-acd8-4b70b3f79ead",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"external_id\": \"3999869394.2799207815.1\",\n  \"first_name\": \"Анна-Марія\",\n  \"last_name\": \"Кравець/Петренко\",\n  \"second_name\":\"Іванівна\",\n  \"gender\": \"MALE\",\n  \"birth_date\": \"1988-03-01\",\n  \"emergency_contact\": {\n    \"first_name\": \"В/Йоханнес\",\n    \"last_name\": \"Петренко\",\n    \"second_name\": \"Іванівна\",\n    \"phones\": [\n      {\n        \"type\": \"MOBILE\",\n        \"number\": \"+380951364444\"\n      }\n    ]\n  },\n  \"note\": \"Зареєстрований у тестових цілях\"\n}"
								},
								"url": {
									"raw": "{{host}}/api/prepersons/1b34e88b-17fb-4005-8925-8df115a86084",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"prepersons",
										"1b34e88b-17fb-4005-8925-8df115a86084"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-69dfd422-a108-4e40-b220-5685c4d3e809"
				},
				{
					"name": "Merge",
					"item": [
						{
							"name": "Create merge request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2c7d289d-e19b-4797-8428-ebeeb26117b5",
										"exec": [
											"const resBody = JSON.parse(responseBody);\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"if (resBody.data.id) {\r",
											"    const personReqId = resBody.data.id\r",
											"    console.log(personReqId)\r",
											"    pm.globals.set(\"merge_req_id\", personReqId);\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// Function to handle each URL request\r",
											"function processUrl(url, additionalData) {\r",
											"    console.log(url, 'urls loop');\r",
											"   \r",
											"    pm.sendRequest({\r",
											"        url: url,\r",
											"        method: 'PUT',\r",
											"        header: {\r",
											"            'Content-Type': 'image/jpeg'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify(additionalData) // Include additional data in the body\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err) {\r",
											"            console.error('Request failed:', err);\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"        } else {\r",
											"            let responseData;\r",
											"\r",
											"            // Check content type to determine how to parse the response\r",
											"            const contentType = res.headers.get('Content-Type');\r",
											"            console.log(contentType)\r",
											"            if (contentType && contentType.includes('text/plain')) {\r",
											"                try {\r",
											"                     // Handle TEXT response if needed\r",
											"                responseData = res.text(); // Get response as text\r",
											"                displayResponse('Document sign successful', { response: responseData });\r",
											"                } catch (e) {\r",
											"                    console.error('JSON parsing error:', e);\r",
											"                    displayResponse('Parsing Error', { error: 'Failed to parse JSON' });\r",
											"                    return;\r",
											"                }\r",
											"                // displayResponse('Document sign successful', responseData);\r",
											"            } else {\r",
											"                // Handle other response types if needed\r",
											"                responseData = res.text(); // Default to text for unknown formats\r",
											"                displayResponse('Unknown Response Format', { response: responseData });\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"const resData = pm.response.json();\r",
											"\r",
											"// Extract URLs from the documents array in the response\r",
											"const documents = resData.urgent.documents;\r",
											"const urls = documents.map(doc => doc.url);\r",
											"\r",
											"const additionalData = {\r",
											"    row: '0JTQvtC60YPQvNC10L3Rgg=='\r",
											"};\r",
											"\r",
											"// Process each URL from the documents array\r",
											"urls.forEach(url => {\r",
											"    processUrl(url, additionalData);\r",
											"});\r",
											"\r",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a3733c6f-e6f3-477b-9bb8-84635a1d1fac",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-5d7e2fbc-9693-4b29-b39e-d3491634fddf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n  \"master_person_id\": \"3241244c-acf7-40bf-8a35-d290607fb53e\",\r\n  \"merge_person_id\": \"1dcf1c8d-7994-4289-bdef-b9cec0a25fd9\",\r\n  \"authorize_with\": \"c9e35958-6bb4-42e3-91df-1574059ad6ef\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/merge_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"merge_requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Approve merge request",
							"id": "15381251-5934662f-1226-495f-ba7e-862983913013",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"verification_code\": 9387\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/merge_requests/{{merge_req_id}}/actions/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"merge_requests",
										"{{merge_req_id}}",
										"actions",
										"approve"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign merge request",
							"id": "15381251-c45b1e20-8b83-4811-9535-3e23fd0d5a16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_content\": \"\",\r\n  \"signed_content_encoding\": \"base64\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/merge_requests/{{merge_req_id}}/actions/sign",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"merge_requests",
										"{{merge_req_id}}",
										"actions",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject merge request",
							"id": "15381251-e97f0822-e215-4bdc-86a7-d2d3f230e46e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/merge_requests/{{merge_req_id}}/actions/reject",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"merge_requests",
										"{{merge_req_id}}",
										"actions",
										"reject"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend Authorization OTP on merge request",
							"id": "15381251-d65945f1-e323-45da-9271-4d1bbb6a1390",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/merge_requests/{{merge_req_id}}/actions/resend_otp",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"merge_requests",
										"{{merge_req_id}}",
										"actions",
										"resend_otp"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get merge request by ID",
							"id": "15381251-0dd8976d-1f48-4aaf-be2e-09f53146a831",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/merge_requests/{{merge_req_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"merge_requests",
										"{{merge_req_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Person's merged persons",
							"id": "15381251-c312bb26-1d57-4c39-afec-eed574817055",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/persons/3241244c-acf7-40bf-8a35-d290607fb53e/merged_persons",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons",
										"3241244c-acf7-40bf-8a35-d290607fb53e",
										"merged_persons"
									],
									"query": [
										{
											"key": "status",
											"value": "DECLINED",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get merge requests",
							"id": "15381251-1f69f62a-49ea-4c06-96db-0c02c8e059ca",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/merge_requests?status=NEW&master_person_id=7c3da506-804d-4550-8993-bf17f9ee0402&merge_person_id=7c3da506-804d-4550-8993-bf17f9ee0403&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"merge_requests"
									],
									"query": [
										{
											"key": "status",
											"value": "NEW"
										},
										{
											"key": "master_person_id",
											"value": "7c3da506-804d-4550-8993-bf17f9ee0402"
										},
										{
											"key": "merge_person_id",
											"value": "7c3da506-804d-4550-8993-bf17f9ee0403"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-dbc5b11a-27e3-4e38-a1e4-95540c73d393"
				},
				{
					"name": "Verification",
					"item": [
						{
							"name": "OTP",
							"item": [
								{
									"name": "Initialize OTP Verification",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "1e4877aa-3548-4d92-bb10-0ca01e5f5c86"
											}
										}
									],
									"id": "15381251-95e6788f-2dfd-498e-bf3a-43ee9b253c3a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"phone_number\": \"+380508887700\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api-demo.ehealth.gov.ua/api/verifications",
											"protocol": "https",
											"host": [
												"api-demo",
												"ehealth",
												"gov",
												"ua"
											],
											"path": [
												"api",
												"verifications"
											]
										}
									},
									"response": []
								},
								{
									"name": "Complete OTP Verification",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "5fef4f11-e70a-4aa2-8b27-65debe029356"
											}
										}
									],
									"id": "15381251-dcfd5653-4f2f-4307-9336-42205c1cba29",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"code\": 3782\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api-demo.ehealth.gov.ua/api/verifications/+380508887700/actions/complete",
											"protocol": "https",
											"host": [
												"api-demo",
												"ehealth",
												"gov",
												"ua"
											],
											"path": [
												"api",
												"verifications",
												"+380508887700",
												"actions",
												"complete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Find Verifications by Phone Number",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "fbd10ead-97d2-43f9-bd80-e35e12565fb1"
											}
										}
									],
									"id": "15381251-eaae58b0-b4aa-4463-9cc4-5639ac9a6109",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://api-demo.ehealth.gov.ua/api/verifications/+380508887700",
											"protocol": "https",
											"host": [
												"api-demo",
												"ehealth",
												"gov",
												"ua"
											],
											"path": [
												"api",
												"verifications",
												"+380508887700"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify phone number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "537f126f-90ed-41e9-ba5a-aaef26736b56",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c976816f-5996-4801-8264-6fe18f89c08d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "15381251-d1f88a7f-b007-47cd-9321-ddcf5e52764b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"factor\": \"+380501112233\",\r\n  \"type\": \"SMS\",\r\n  \"content_hash\": \"76dea970d89477ed03dc5289f297443c\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/sms_verifications",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"sms_verifications"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-2ec29088-8e36-43d0-ac6b-24d6d5df3f90"
						},
						{
							"name": "Verification_status",
							"item": [
								{
									"name": "Dummy Update Person verification status",
									"id": "15381251-890dd20b-87e5-4ef2-bb31-ac4dc059d9ac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"dracs_death\": {\r\n        \"verification_status\": \"VERIFIED\",\r\n        \"verification_reason\": \"MANUAL_NOT_CONFIRMED\",\r\n        \"verification_comment\": \"Смерть не підтверджено\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": ""
										}
									},
									"response": []
								},
								{
									"name": "Update person verification status",
									"id": "15381251-42830024-76f4-4c89-a344-d49bbd2a44ca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"signed_content\": \"\"\r\n}"
										},
										"url": {
											"raw": "{{host}}/api/persons/646ba9fd-ef61-46c2-8544-1e7baff2c229/verification",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"persons",
												"646ba9fd-ef61-46c2-8544-1e7baff2c229",
												"verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get person verification details",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf4af91c-1144-4c5a-b4b3-7a2aa3edefa1",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "37852ecb-8137-4621-8cce-c219c7bbb5a4",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-2d1633b0-99df-46de-99d9-97d0b843bab6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/persons/bddcd6fd-bc55-4ac4-b381-af835a239712/verification",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"persons",
												"bddcd6fd-bc55-4ac4-b381-af835a239712",
												"verification"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Persons Verification Statuses List",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "514c3d6f-370e-443a-ad72-d05d8c86bc25",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-2f617a62-5fe2-4faa-961f-dc606903f13d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/api/persons/verifications",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"persons",
												"verifications"
											],
											"query": [
												{
													"key": "employee_id",
													"value": "{{user_id}}",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-b871f0ce-1b3a-49ff-b9e2-94820a71c8a1"
						}
					],
					"id": "15381251-6f343f44-a6d2-48e7-8ba8-1a364a7abc6f"
				},
				{
					"name": "AuthMehtods",
					"item": [
						{
							"name": "GetPersonAuthenticationMethods",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "20027df2-b3f2-4cb1-bc96-0ad3a8aab9c1",
										"exec": [
											"pm.environment.set(\"patient_id\",\"47966250-3d12-4724-9160-2c409a1750ec\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cc6bba58-f246-4910-b77f-5eaa2fd1dac6",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-df6bb269-7561-446e-99a7-e065baf57a41",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/persons/9d5b0e88-7b17-4d8e-9a34-66f7e20c39fe/authentication_methods",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons",
										"9d5b0e88-7b17-4d8e-9a34-66f7e20c39fe",
										"authentication_methods"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create authentification method",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f73ede97-b1d6-4ba3-bc6e-a21cf7fae316",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "be251edb-d10a-45d1-8e4e-01207fcd8efb",
										"exec": [
											"const resBody = JSON.parse(responseBody);\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"if (resBody.data.id) {\r",
											"    const personAuthMethodId = resBody.data.id\r",
											"    console.log(personAuthMethodId)\r",
											"    pm.globals.set(\"Person_auth_method_id\", personAuthMethodId);\r",
											"}\r",
											"if (resBody.meta) {\r",
											"    const url = resBody.meta.url;\r",
											"    const extractedPresonId = url.split('/')[5];\r",
											"    pm.globals.set(\"auth_method_person_id\", extractedPresonId)\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// Function to handle each URL request\r",
											"function processUrl(url, additionalData) {\r",
											"    console.log(url, 'urls loop');\r",
											"\r",
											"    pm.sendRequest({\r",
											"        url: url,\r",
											"        method: 'PUT',\r",
											"        header: {\r",
											"            'Content-Type': 'image/jpeg'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify(additionalData) // Include additional data in the body\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err) {\r",
											"            console.error('Request failed:', err);\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"        } else {\r",
											"            let responseData;\r",
											"\r",
											"            // Check content type to determine how to parse the response\r",
											"            const contentType = res.headers.get('Content-Type');\r",
											"            console.log(contentType)\r",
											"            if (contentType && contentType.includes('text/plain')) {\r",
											"                try {\r",
											"                    // Handle TEXT response if needed\r",
											"                    responseData = res.text(); // Get response as text\r",
											"                    displayResponse('Document sign successful', { response: responseData });\r",
											"                } catch (e) {\r",
											"                    console.error('JSON parsing error:', e);\r",
											"                    displayResponse('Parsing Error', { error: 'Failed to parse JSON' });\r",
											"                    return;\r",
											"                }\r",
											"                // displayResponse('Document sign successful', responseData);\r",
											"            } else {\r",
											"                // Handle other response types if needed\r",
											"                responseData = res.text(); // Default to text for unknown formats\r",
											"                displayResponse('Unknown Response Format', { response: responseData });\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"const resData = pm.response.json();\r",
											"\r",
											"// Extract URLs from the documents array in the response\r",
											"// const documents = resData.urgent.documents;\r",
											"// const urls = documents.map(doc => doc.url);\r",
											"\r",
											"// const additionalData = {\r",
											"//     row: '0JTQvtC60YPQvNC10L3Rgg=='\r",
											"// };\r",
											"\r",
											"// // Process each URL from the documents array\r",
											"// urls.forEach(url => {\r",
											"//     processUrl(url, additionalData);\r",
											"// });\r",
											"\r",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-d8753e75-5970-46c9-aab2-d8b0354814a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"INSERT\",\r\n    \"authentication_method\": {\r\n        \"type\":\"THIRD_PERSON\",\r\n        \"value\":\"a6b83007-0b09-420c-ba0b-138335bb751e\",\r\n        \"phone_number\": \"+380502298393\",\r\n        \"alias\":\"Otp\"\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/persons/151cac96-4c93-49d8-80cc-241518629436/authentication_method_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons",
										"151cac96-4c93-49d8-80cc-241518629436",
										"authentication_method_requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Approve authentication method request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aaa791a6-7bbd-42ac-947e-9e69edb9a612",
										"exec": [
											"pm.environment.set(\"patient_id\",\"47966250-3d12-4724-9160-2c409a1750ec\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dafb3972-a329-47c8-b0d0-078f7e702c36",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-54c3e559-8e48-4372-a2bf-ee16e18d7875",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"verification_code\": 2810\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/persons/{{auth_method_person_id}}/authentication_method_requests/{{Person_auth_method_id}}/actions/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons",
										"{{auth_method_person_id}}",
										"authentication_method_requests",
										"{{Person_auth_method_id}}",
										"actions",
										"approve"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend Authorization OTP on Authentication method Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"patient_id\",\"47966250-3d12-4724-9160-2c409a1750ec\")"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "08ae4c7c-6a36-4d11-8fc0-95dc32fbcfdc"
									}
								}
							],
							"id": "15381251-8eaff2c2-a762-44e5-894e-536db6f0a789",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/persons/{{auth_method_person_id}}/authentication_method_requests/{{Person_auth_method_id}}/actions/resend_otp",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"persons",
										"{{auth_method_person_id}}",
										"authentication_method_requests",
										"{{Person_auth_method_id}}",
										"actions",
										"resend_otp"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-f298798e-71a6-4a2d-bbb1-d1f2c6f5bb12"
				}
			],
			"id": "15381251-c99f40d4-7b63-493f-aba5-e151514c701d"
		},
		{
			"name": "Declarations",
			"item": [
				{
					"name": "Declaration_Request",
					"item": [
						{
							"name": "Create Declaration Request V3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ede16ebc-bf62-4c5b-a609-bfcc1f8500b6",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "02564b46-bf39-4f46-a213-39f6d716ceb2",
										"exec": [
											"const generalResData = pm.response.json();\r",
											"const parsedGeneraData = JSON.stringify(generalResData, null, 2)\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"\r",
											"pm.test(`Response status is not 200, ${generalResData.error ? parsedGeneraData : ''}`, function () {\r",
											"    pm.expect(pm.response.code).to.not.eql(200);\r",
											"    const errData = pm.response.json();\r",
											"    console.log(errData)\r",
											"    displayResponse('Create Declaration Request', errData)\r",
											"});\r",
											"\r",
											"\r",
											"// Function to handle each URL request\r",
											"function processUrl(url, additionalData) {\r",
											"    console.log(url, 'urls loop');\r",
											"\r",
											"    pm.sendRequest({\r",
											"        url: url,\r",
											"        method: 'PUT',\r",
											"        header: {\r",
											"            'Content-Type': 'image/jpeg'\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify(additionalData) // Include additional data in the body\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        if (err) {\r",
											"            console.error('Request failed:', err);\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"        } else {\r",
											"            let responseData;\r",
											"\r",
											"            // Check content type to determine how to parse the response\r",
											"            const contentType = res.headers.get('Content-Type');\r",
											"            console.log(contentType)\r",
											"            if (contentType && contentType.includes('text/plain')) {\r",
											"                try {\r",
											"                    // Handle TEXT response if needed\r",
											"                    responseData = res.text(); // Get response as text\r",
											"                    displayResponse('Document sign successful', { response: responseData });\r",
											"                } catch (e) {\r",
											"                    console.error('JSON parsing error:', e);\r",
											"                    displayResponse('Parsing Error', { error: 'Failed to parse JSON' });\r",
											"                    return;\r",
											"                }\r",
											"                // displayResponse('Document sign successful', responseData);\r",
											"            } else {\r",
											"                // Handle other response types if needed\r",
											"                responseData = res.text(); // Default to text for unknown formats\r",
											"                displayResponse('Unknown Response Format', { response: responseData });\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(`Declaration request pass. Response status is 200  |  ${parsedGeneraData}`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    const declarationReqId = jsonData.data.id\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.globals.set('declaration_request_id', declarationReqId)\r",
											"\r",
											"\r",
											"    const resData = pm.response.json();\r",
											"\r",
											"    // Extract URLs from the documents array in the response\r",
											"    const documents = resData.urgent.documents;\r",
											"    const urls = documents.map(doc => doc.url);\r",
											"\r",
											"    const additionalData = {\r",
											"        row: '0JTQvtC60YPQvNC10L3Rgg=='\r",
											"    };\r",
											"\r",
											"    // Process each URL from the documents array\r",
											"    urls.forEach(url => {\r",
											"        processUrl(url, additionalData);\r",
											"    });\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-e4ea6edd-424c-4680-8b3d-9d52c5c0f246",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"person_id\": \"b5dfd213-ece0-4035-b802-6f7c18e80a5c\",\n    \"employee_id\": \"{{user_id}}\",\n    \"division_id\": \"{{user_division_id}}\",\n    \"authorize_with\":\"eba17b73-794c-48d1-abfc-7674c36f3234\"\n}\n"
								},
								"url": {
									"raw": "{{host}}/api/v3/declaration_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v3",
										"declaration_requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Approve Declaration Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a1fbc0a5-1566-4f41-a264-c7dda84fc239",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "adc982fc-a916-406d-8660-e273b12ca6d0",
										"exec": [
											"const jsonData = pm.response.json();",
											"",
											"",
											"function displayResponse(title, data) {",
											"    const html = `",
											"        <h1>${title}</h1>",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;",
											"    pm.visualizer.set(html);",
											"}",
											"",
											"if(jsonData.error){",
											"    displayResponse('Error Approve Declaration Request Details', jsonData)",
											"}",
											"",
											"",
											"",
											"function sendDataToSign(dataToBeSigned) {",
											"    const localServerUrl = 'http://localhost:3000/receive-data';",
											"",
											"    const requestData = {",
											"        method: 'POST',",
											"        url: localServerUrl,",
											"        header: {",
											"            'Content-Type': 'application/json',",
											"        },",
											"        body: {",
											"            mode: 'raw',",
											"            raw: JSON.stringify(dataToBeSigned) // Send the entire response or specific fields",
											"        }",
											"    };",
											"",
											"    // Send the request to the local server",
											"    pm.sendRequest(requestData, function (err, res) {",
											"        if (err) {",
											"            console.error('Error sending request to local server:', err);",
											"        } else {",
											"            console.log('Response from local server:', res.json());",
											"            const responseBody = res.json();",
											"",
											"            console.log(responseBody);",
											"",
											"            pm.globals.set('declaration_signed_content', responseBody.signed_content)",
											"",
											"            displayResponse('Signed declaration data', responseBody);",
											"        }",
											"    });",
											"}",
											"",
											"",
											"pm.test(`Approve declaration request pass. Response status is 200  |  ${JSON.stringify(jsonData, null, 2)}`, function () {",
											"",
											"    pm.expect(pm.response.code).to.eql(200);",
											"",
											"    let dataToBeSigned = jsonData.data.data_to_be_signed;",
											"",
											"    dataToBeSigned.person.patient_signed = true;",
											"",
											"    console.log(dataToBeSigned.person.patient_signed)",
											"",
											"    sendDataToSign(dataToBeSigned);",
											"",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-dde4ab39-71a2-438b-be25-be4d4bd0ccd6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"verification_code\": 8486\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/v3/declaration_requests/{{declaration_request_id}}/actions/approve",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v3",
										"declaration_requests",
										"{{declaration_request_id}}",
										"actions",
										"approve"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign Declaration Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c3cffc8f-bece-435b-9e9a-f5ae78398ae4",
										"exec": [
											"const jsonData = pm.response.json();\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"if (jsonData.error) {\r",
											"    displayResponse('Error Sign Declaration Request Details', jsonData)\r",
											"}\r",
											"\r",
											"pm.test(`Sign declaration request ${pm.response.code === 200 ? 'pass' : 'fail'}. Response code is ${pm.response.code === 200 ? '200' : pm.response.code} / ${JSON.stringify(jsonData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    console.log(jsonData);\r",
											"    const declarationId = jsonData.data.id;\r",
											"    pm.globals.set('declaration_id', declarationId)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b59fd3f3-7904-4b41-8b30-8641ee095f35",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-e3757315-e7e4-4ec6-82b3-779ee0e6bb96",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_declaration_request\": \"{{declaration_signed_content}}\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/v3/declaration_requests/{{declaration_request_id}}/actions/sign",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v3",
										"declaration_requests",
										"{{declaration_request_id}}",
										"actions",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject Declaration Request V3",
							"id": "15381251-a0c49c2a-b6fb-4641-b81d-b8bbf42e1cb4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/v3/declaration_requests/646a9219-cabd-4f9b-bccb-9994d1017fbd/actions/reject",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"v3",
										"declaration_requests",
										"646a9219-cabd-4f9b-bccb-9994d1017fbd",
										"actions",
										"reject"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Declaration Request by ID V3",
							"id": "15381251-553bec09-5b33-405e-bda0-d7b8bf920823",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/v3/declaration_requests/{{declaration_request_id}}",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"v3",
										"declaration_requests",
										"{{declaration_request_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Declaration Requests List V3",
							"id": "15381251-1076625c-6940-4b5a-bcc1-2fc7dd85b8e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/v3/declaration_requests?employee_id=d290f1ee-6c54-4b01-90e6-d701748f0851&legal_entity_id=d290f1ee-6c54-4b01-90e6-d701748f0851&status=active&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"v3",
										"declaration_requests"
									],
									"query": [
										{
											"key": "employee_id",
											"value": "d290f1ee-6c54-4b01-90e6-d701748f0851"
										},
										{
											"key": "legal_entity_id",
											"value": "d290f1ee-6c54-4b01-90e6-d701748f0851"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend Authorization OTP on Declaration Request",
							"id": "15381251-748c776d-f3f5-4050-a019-b75cecf013de",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/v3/declaration_requests/id/actions/resend_otp",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"v3",
										"declaration_requests",
										"id",
										"actions",
										"resend_otp"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-9073cc7b-2e7f-4006-93cf-eb268cd300b7"
				},
				{
					"name": "Get Declaration List",
					"id": "15381251-a7951104-77ea-493a-aef2-c1df419941b6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/declarations?employee_id=52fb1417-c7d7-426c-9121-cf030fc17e76",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"declarations"
							],
							"query": [
								{
									"key": "employee_id",
									"value": "52fb1417-c7d7-426c-9121-cf030fc17e76"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Declaration by ID",
					"id": "15381251-8a18d837-d7be-4f12-b829-a3672049f857",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "API-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/declarations/{{declaration_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"declarations",
								"{{declaration_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get persons Declaration",
					"id": "15381251-02e867d4-21ce-4060-89ad-a0fe009c75ea",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/persons/3241244c-acf7-40bf-8a35-d290607fb53e/declaration",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"persons",
								"3241244c-acf7-40bf-8a35-d290607fb53e",
								"declaration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reject declaration",
					"id": "15381251-54b839d1-4d86-43a0-ae8e-818bd60803a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/declarations/id/reject",
							"host": [
								"{{host}}"
							],
							"path": [
								"declarations",
								"id",
								"reject"
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-650a378f-c57c-4d69-acf7-1b5169a29439"
		},
		{
			"name": "Dictionaries",
			"item": [
				{
					"name": "Search Streets",
					"item": [
						{
							"name": "List of Streets by Search Params",
							"id": "15381251-d76010b2-64fd-42b7-8765-38fa86ca896e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/uaddresses/streets?settlement_id=eea333b5-e26d-4e3e-92e2-2ab37b131502",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"uaddresses",
										"streets"
									],
									"query": [
										{
											"key": "settlement_id",
											"value": "eea333b5-e26d-4e3e-92e2-2ab37b131502"
										},
										{
											"key": "name",
											"value": "%D0%9D%D0%B5%D0%B7%D0%B0%D0%BB%D0%B5%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D1%96",
											"disabled": true
										},
										{
											"key": "type",
											"value": "STREET",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-61203195-c46b-419d-8249-2040d90eb9a6"
				},
				{
					"name": "Search Settlements",
					"item": [
						{
							"name": "Get settlement details by ID",
							"id": "15381251-1f31af7f-7532-4cf6-87e9-612783ee022c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/uaddresses/settlements/7a438190-5b6f-4341-b25d-0b19f46c320f",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"uaddresses",
										"settlements",
										"7a438190-5b6f-4341-b25d-0b19f46c320f"
									]
								}
							},
							"response": []
						},
						{
							"name": "List Of Cities By Search Params Copy",
							"id": "15381251-e1767ec1-b296-4cbd-b275-1aaa8ca5cad8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/uaddresses/settlements?name=%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D1%96%D0%BB%D0%BA%D0%B8&region=%D0%9A%D0%B8%D1%97%D0%B2&district=%D0%9A%D0%B8%D1%94%D0%B2%D0%BE-%D0%A1%D0%B2%D1%8F%D1%82%D0%BE%D1%88%D0%B8%D0%BD%D1%81%D1%8C%D0%BA%D0%B8%D0%B9&koatuu=2625286301&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"uaddresses",
										"settlements"
									],
									"query": [
										{
											"key": "name",
											"value": "%D0%9D%D0%BE%D0%B2%D0%BE%D1%81%D1%96%D0%BB%D0%BA%D0%B8"
										},
										{
											"key": "region",
											"value": "%D0%9A%D0%B8%D1%97%D0%B2"
										},
										{
											"key": "district",
											"value": "%D0%9A%D0%B8%D1%94%D0%B2%D0%BE-%D0%A1%D0%B2%D1%8F%D1%82%D0%BE%D1%88%D0%B8%D0%BD%D1%81%D1%8C%D0%BA%D0%B8%D0%B9"
										},
										{
											"key": "koatuu",
											"value": "2625286301"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-980ae40c-c331-4eca-a40d-871a0644bdd3"
				},
				{
					"name": "Search Regions",
					"item": [
						{
							"name": "List Of Regions By Search Params",
							"id": "15381251-d6d50c6e-3607-469b-8b8c-260d11897f6b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/uaddresses/regions?name=%D0%9A%D0%B8%D1%97%D0%B2&koatuu=2625286301&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"uaddresses",
										"regions"
									],
									"query": [
										{
											"key": "name",
											"value": "%D0%9A%D0%B8%D1%97%D0%B2"
										},
										{
											"key": "koatuu",
											"value": "2625286301"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-5fdb78d1-63b2-4b32-a398-6dde15999ee9"
				},
				{
					"name": "Search Districts",
					"item": [
						{
							"name": "List Of Districts By Search Params",
							"id": "15381251-e682f687-1ea8-4da4-a78b-a2a5d1767ce4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/uaddresses/districts?region_id=09a33c98-9a5c-447a-8493-da8fcecb6873&region=%D0%9A%D0%B8%D1%97%D0%B2&name=%D0%9A%D0%B8%D1%94%D0%B2%D0%BE-%D0%A1%D0%B2%D1%8F%D1%82%D0%BE%D1%88%D0%B8%D0%BD%D1%81%D1%8C%D0%BA%D0%B8%D0%B9&koatuu=2625286301&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"uaddresses",
										"districts"
									],
									"query": [
										{
											"key": "region_id",
											"value": "09a33c98-9a5c-447a-8493-da8fcecb6873"
										},
										{
											"key": "region",
											"value": "%D0%9A%D0%B8%D1%97%D0%B2"
										},
										{
											"key": "name",
											"value": "%D0%9A%D0%B8%D1%94%D0%B2%D0%BE-%D0%A1%D0%B2%D1%8F%D1%82%D0%BE%D1%88%D0%B8%D0%BD%D1%81%D1%8C%D0%BA%D0%B8%D0%B9"
										},
										{
											"key": "koatuu",
											"value": "2625286301"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Districts by Region",
							"id": "15381251-59d29063-94a2-4476-b2c9-81d4f10c6db4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/uaddresses/regions/290f1ee-6c54-4b01-90e6-d701748f0851/districts?name=%D0%9A%D0%B8%D1%94%D0%B2%D0%BE-%D0%A1%D0%B2%D1%8F%D1%82%D0%BE%D1%88%D0%B8%D0%BD%D1%81%D1%8C%D0%BA%D0%B8%D0%B9&koatuu=2625286301&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"uaddresses",
										"regions",
										"290f1ee-6c54-4b01-90e6-d701748f0851",
										"districts"
									],
									"query": [
										{
											"key": "name",
											"value": "%D0%9A%D0%B8%D1%94%D0%B2%D0%BE-%D0%A1%D0%B2%D1%8F%D1%82%D0%BE%D1%88%D0%B8%D0%BD%D1%81%D1%8C%D0%BA%D0%B8%D0%B9"
										},
										{
											"key": "koatuu",
											"value": "2625286301"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Settlements by district",
							"id": "15381251-d849238e-a70a-4554-b8fd-e86015fac2d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/uaddresses/api/uaddresses/districts/290f1ee-6c54-4b01-90e6-d701748f0851/settlements?name=%D0%9A%D0%B8%D1%97%D0%B2&koatuu=2625286301&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"uaddresses",
										"api",
										"uaddresses",
										"districts",
										"290f1ee-6c54-4b01-90e6-d701748f0851",
										"settlements"
									],
									"query": [
										{
											"key": "name",
											"value": "%D0%9A%D0%B8%D1%97%D0%B2"
										},
										{
											"key": "koatuu",
											"value": "2625286301"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-11ae89cf-04cb-41a5-92a3-e38a92fc223b"
				},
				{
					"name": "Forbidden group details",
					"item": [
						{
							"name": "Get Forbidden group list",
							"id": "15381251-cf41ad7f-bc14-4e21-bdc2-e3010a4287c8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/forbidden_groups",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"forbidden_groups"
									],
									"query": [
										{
											"key": "name",
											"value": "Some%20name",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-4fc830e3-5db3-42b0-aa5f-b3e60d1ba253"
				},
				{
					"name": "Groups of Diagnoses",
					"item": [
						{
							"name": "Get Groups of Diagnoses list",
							"id": "15381251-17bbab23-a2b8-4fbb-9b8e-8ab3bebd708e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/diagnoses_groups?page=2&page_size=50&diagnoses_group_name=Some%20name&diagnoses_group_code=H00&diagnosis_name=Some%20name&diagnosis_code=G30.9",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"diagnoses_groups"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "diagnoses_group_name",
											"value": "Some%20name"
										},
										{
											"key": "diagnoses_group_code",
											"value": "H00"
										},
										{
											"key": "diagnosis_name",
											"value": "Some%20name"
										},
										{
											"key": "diagnosis_code",
											"value": "G30.9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Group of Diagnoses details",
							"id": "15381251-b6d9b11d-acb9-42d2-9c6d-f3aeb5c08d0a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/diagnoses_groups/id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"diagnoses_groups",
										"id"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-53e2ea22-c779-4035-ae10-1d9b5a11e738"
				},
				{
					"name": "Device definitions",
					"item": [
						{
							"name": "Get Device definitions",
							"id": "15381251-e8e8bea1-4a3e-4ae8-8357-ac37ac225915",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/device_definitions?medical_program_id=d1f8be15-f9db-4c09-abf7-aa78a5a09b24",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"device_definitions"
									],
									"query": [
										{
											"key": "classification_type",
											"value": "30221",
											"disabled": true
										},
										{
											"key": "model_number",
											"value": "H00P53",
											"disabled": true
										},
										{
											"key": "name",
											"value": "Some%20name",
											"disabled": true
										},
										{
											"key": "name_type",
											"value": "registered",
											"disabled": true
										},
										{
											"key": "medical_program_id",
											"value": "d1f8be15-f9db-4c09-abf7-aa78a5a09b24"
										},
										{
											"key": "is_active",
											"value": "true",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device definition details",
							"id": "15381251-89250ca0-7c1b-4bb2-a23c-64c2058d0881",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/device_definitions/id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"device_definitions",
										"id"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-c343d2d6-0cd6-48a8-b8c0-af148a9aab40"
				},
				{
					"name": "Services",
					"id": "15381251-6423cc26-420e-4c0c-9f8c-e13765b193f2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "API-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host_demo}}/api/services",
							"host": [
								"{{host_demo}}"
							],
							"path": [
								"api",
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Dictionary",
					"id": "15381251-7b9c36ae-a460-4658-9dbd-62e495d25156",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v2/dictionaries?name=DOCUMENT_TYPE_EXTENDED",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v2",
								"dictionaries"
							],
							"query": [
								{
									"key": "name",
									"value": "eHealth/ICD10/condition_codes",
									"disabled": true
								},
								{
									"key": "name",
									"value": "POSITION",
									"disabled": true
								},
								{
									"key": "name",
									"value": "SPECIALITY_TYPE",
									"disabled": true
								},
								{
									"key": "name",
									"value": "DIVISION_TYPE",
									"disabled": true
								},
								{
									"key": "name",
									"value": "HEALTHCARE_SERVICE_CATEGORIES",
									"disabled": true
								},
								{
									"key": "name",
									"value": "LICENCE_TYPE",
									"disabled": true
								},
								{
									"key": "name",
									"value": "specimen_types",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/SNOMED/service_request_categories",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/observation_categories",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/LOINC/observation_codes",
									"disabled": true
								},
								{
									"key": "name",
									"value": "specimen_statuses",
									"disabled": true
								},
								{
									"key": "name",
									"value": "specimen_conditions",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/diagnostic_report_categories",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/procedure_status_reasons",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/resources",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/procedure_categories",
									"disabled": true
								},
								{
									"key": "name",
									"value": "specimen_cancel_reasons",
									"disabled": true
								},
								{
									"key": "name",
									"value": "DOCUMENT_RELATIONSHIP_TYPE",
									"disabled": true
								},
								{
									"key": "name",
									"value": "DOCUMENT_TYPE_EXTENDED"
								},
								{
									"key": "name",
									"value": "PROVIDING_CONDITION",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/ICD10_AM/condition_codes",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/care_plan_activity_goals",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/episode_types",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/care_plan_cancel_reasons",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/care_plan_activity_cancel_reasons",
									"disabled": true
								},
								{
									"key": "name",
									"value": "device_request_revoke_reasons",
									"disabled": true
								},
								{
									"key": "name",
									"value": "device_request_mark_in_error_reasons",
									"disabled": true
								},
								{
									"key": "name",
									"value": "device_dispense_mark_in_error_reasons",
									"disabled": true
								},
								{
									"key": "name",
									"value": "COMPOSITION_CATEGORIES",
									"disabled": true
								},
								{
									"key": "name",
									"value": "COMPOSITION_CANCELLATION_REASONS_TEMP_DISABILITY",
									"disabled": true
								},
								{
									"key": "name",
									"value": "eHealth/encounter_types",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get drugs list v2",
					"id": "15381251-c61a42ab-6a81-4c71-87a4-36b1370ce8d4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/v3/drugs?medical_program_id=f646aa61-6765-4cfa-89cd-5259b68b2ab7",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v3",
								"drugs"
							],
							"query": [
								{
									"key": "innm_id",
									"value": "ac61b335-3848-4808-b28b-bec7559d696e",
									"disabled": true
								},
								{
									"key": "innm_name",
									"value": "%D0%86%D0%BD%D1%81%D1%83%D0%BB%D1%96%D0%BD%20%D0%B4%D0%B5%D0%B3%D0%BB%D1%8E%D0%B4%D0%B5%D0%BA",
									"disabled": true
								},
								{
									"key": "innm_sctid",
									"value": "52574003",
									"disabled": true
								},
								{
									"key": "innm_dosage_form",
									"value": "ML",
									"disabled": true
								},
								{
									"key": "innm_dosage_id",
									"value": "fcb14dac-2e2d-4d3e-9c17-e1c23e60fb10",
									"disabled": true
								},
								{
									"key": "innm_dosage_name",
									"value": "%D0%86%D0%BD%D1%81%D1%83%D0%BB%D1%96%D0%BD%20%D0%B4%D0%B5%D0%B3%D0%BB%D1%8E%D0%B4%D0%B5%D0%BA%20200%D0%BC%D0%BB%20%D1%88%D0%BF%D1%80%D0%B8%D1%86-%D1%80%D1%83%D1%87%D0%BA%D0%B0",
									"disabled": true
								},
								{
									"key": "medication_code_atc",
									"value": "%D0%A101BD01",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								},
								{
									"key": "medical_program_id",
									"value": "f646aa61-6765-4cfa-89cd-5259b68b2ab7"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-afb31d21-ffe1-44f6-a15b-778d6de02fa2"
		},
		{
			"name": "Event Manager",
			"item": [
				{
					"name": "Get events by ID",
					"id": "15381251-d6c24134-ca6f-4397-85dd-2eb8a07149f7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/events/id",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								"id"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get events list",
					"id": "15381251-db201130-657b-45b0-9fd4-498fb6fa4662",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/events/?date=2025-08-20T11:40:00Z",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"events",
								""
							],
							"query": [
								{
									"key": "date_to",
									"value": "2025-08-18T08:40:01Z",
									"disabled": true
								},
								{
									"key": "event_type",
									"value": "StatusChangeEvent",
									"disabled": true
								},
								{
									"key": "entity_type",
									"value": "Person",
									"disabled": true
								},
								{
									"key": "attribute_name",
									"value": "status",
									"disabled": true
								},
								{
									"key": "new_value",
									"value": "COMPLETED",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "5000",
									"disabled": true
								},
								{
									"key": "entity_id",
									"value": "f9683699-d581-4b87-a51e-95b2b0b39156",
									"disabled": true
								},
								{
									"key": "date",
									"value": "2025-08-19T00:00:01Z",
									"disabled": true
								},
								{
									"key": "date",
									"value": "2025-08-20T11:40:00Z"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-8523d19e-af09-402d-8782-108b56836621"
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "List Roles",
					"id": "15381251-4512a968-9690-42d7-a82f-0c8dd8d9446b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/admin/roles",
							"host": [
								"{{host}}"
							],
							"path": [
								"admin",
								"roles"
							],
							"query": [
								{
									"key": "name",
									"value": "My%20role",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Role by ID",
					"id": "15381251-e4ec0912-d9b2-4e59-a8ab-98d82e0a2a07",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/admin/roles/id",
							"host": [
								"{{host}}"
							],
							"path": [
								"admin",
								"roles",
								"id"
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-e010d933-bf2b-44da-83bc-275b84b92d7c"
		},
		{
			"name": "Manage client configuration",
			"item": [
				{
					"name": "Client",
					"item": [
						{
							"name": "Get clients",
							"id": "15381251-94ec9683-e62a-4b36-91ce-416769ecf1ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/clients",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"clients"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get client details",
							"id": "15381251-92123900-198b-4332-bc83-9bc289dda4b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/clients/a2e2b364-29f6-4412-b80a-cbb33e388833",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"clients",
										"a2e2b364-29f6-4412-b80a-cbb33e388833"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get client connections",
							"id": "15381251-10da8c99-1a11-4acc-a0ce-46db344a62ef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/clients/id/connections",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"clients",
										"id",
										"connections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get client connection details",
							"id": "15381251-14f2f5f5-0ecd-42b3-88cf-4545f8c816b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/clients/id/connections/connection_id",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"clients",
										"id",
										"connections",
										"connection_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update client connection",
							"id": "15381251-b50b8375-6d70-4a28-a081-5cc328f3edef",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"redirect_uri\": \"https://example3.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/clients/id/connections/connection_id",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"clients",
										"id",
										"connections",
										"connection_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refresh client secret",
							"id": "15381251-173ac759-a19c-465f-84cf-3620654c10be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/clients/id/connections/connection_id/actions/refresh_secret",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"clients",
										"id",
										"connections",
										"connection_id",
										"actions",
										"refresh_secret"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete client connection",
							"id": "15381251-c36dde8a-ade6-47e1-8822-392e913f02ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/clients/id/connections/connection_id",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"clients",
										"id",
										"connections",
										"connection_id"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-16637a6a-7e1c-462c-a5b7-570fe3a8f224"
				}
			],
			"id": "15381251-29d4cf07-5b5e-426a-9c65-02ec3bae9585"
		},
		{
			"name": "Equipment",
			"item": [
				{
					"name": "Create equipment",
					"id": "15381251-86e5eee8-6f83-4506-aa8f-30e33f91220c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"inventory_number\": \"523655gg\",\r\n    \"serial_number\": \"S/N234554\",\r\n    \"names\": [\r\n        {\r\n            \"name\": \"Екг-апарат портативний PM10 S61-2047\",\r\n            \"type\": \"registered\"\r\n        }\r\n    ],\r\n    \"status\": \"active\",\r\n    \"availability_status\": \"available\",\r\n    \"manufacturer\": \"GlobalMed, Inc\",\r\n    \"manufacture_date\": \"1999-01-01\",\r\n    \"model_number\": \"NSPX30\",\r\n    \"type\": \"30221\",\r\n    \"properties\": [\r\n        {\r\n            \"type\": \"default\",\r\n            \"value_integer\": 10\r\n        }\r\n    ],\r\n    \"division_id\": \"{{user_division_id}}\",\r\n    \"note\": \"Технічний огляд раз на рік\",\r\n    \"lot_number\": \"RZ12345678\",\r\n    \"expiration_date\": \"2020-01-01\",\r\n    \"recorder\": \"{{user_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/equipment",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"equipment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get equipment list",
					"id": "15381251-6b6eba98-228b-4ac0-aeac-51bf54eef304",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/equipment?division_id={{user_division_id}}&status=active&availability_status=available",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"equipment"
							],
							"query": [
								{
									"key": "division_id",
									"value": "{{user_division_id}}"
								},
								{
									"key": "device_definition_id",
									"value": "8be63914-a278-470b-b868-1af5b9087332",
									"disabled": true
								},
								{
									"key": "type",
									"value": "03221",
									"disabled": true
								},
								{
									"key": "status",
									"value": "active"
								},
								{
									"key": "model_number",
									"value": "PC122345",
									"disabled": true
								},
								{
									"key": "manufacturer",
									"value": "%D0%A4%D0%9E%D0%9F%20%D0%92%D0%B8%D1%80%D0%BE%D0%B1%D0%BD%D0%B8%D0%BA",
									"disabled": true
								},
								{
									"key": "availability_status",
									"value": "available"
								},
								{
									"key": "recorder",
									"value": "8be63914-a278-470b-b868-1af5b9087332",
									"disabled": true
								},
								{
									"key": "inventory_number",
									"value": "23655gg",
									"disabled": true
								},
								{
									"key": "serial_number",
									"value": "8be63914-a278-470b-b868-1af5b9087332",
									"disabled": true
								},
								{
									"key": "name",
									"value": "8be63914-a278-470b-b868-1af5b9087332",
									"disabled": true
								},
								{
									"key": "created_from",
									"value": "2017-08-17",
									"disabled": true
								},
								{
									"key": "created_to",
									"value": "2017-08-20",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get equipment details by ID",
					"id": "15381251-dcb2f5fd-7991-4a64-9f23-0b94c35f3c3a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/equipment/ec6215de-a0e7-4fcc-8747-99d0b7ccc282",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"equipment",
								"ec6215de-a0e7-4fcc-8747-99d0b7ccc282"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change equipment status",
					"id": "15381251-a514aea3-4e70-40bf-add9-0b621040baf2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"entered_in_error\",\r\n  \"error_reason\": \"Out of service\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/equipment/id/actions/change_status",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"equipment",
								"id",
								"actions",
								"change_status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change equipment availability status",
					"id": "15381251-e2d57d5d-3820-4612-87f7-37de604a28e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"availability_status\": \"damaged\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/equipment/id/actions/change_availability_status",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"equipment",
								"id",
								"actions",
								"change_availability_status"
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-0d4cb74f-9cb9-4dff-b510-8e08d9b26ecb"
		},
		{
			"name": "LOGIN",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30c2bb67-1f4e-47df-a5fe-ddbfb676352d",
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"let visualLog = '';\r",
							"\r",
							"function displayResponse(title, description, data) {\r",
							"    console.log(title, data);\r",
							"    visualLog += `\r",
							"        <div style=\"border:1px solid #ccc; margin-bottom:1em; padding:1em;\">\r",
							"            <h2>${title}</h2>\r",
							"            <h4>${description}</h4>\r",
							"            <pre>${JSON.stringify(data, null, 2)}</pre>\r",
							"        </div>\r",
							"    `;\r",
							"}\r",
							"\r",
							"\r",
							"let jsonData;\r",
							"\r",
							"try {\r",
							"    jsonData = pm.response.json();\r",
							"} catch (e) {\r",
							"    displayResponse('Error parsing login response', 'Invalid JSON format', e);\r",
							"    pm.visualizer.set(visualLog);\r",
							"    return;\r",
							"}\r",
							"\r",
							"if (jsonData.error) {\r",
							"    displayResponse('Error on step LOGIN', jsonData.error.message, jsonData.error);\r",
							"    pm.visualizer.set(visualLog);\r",
							"    return;\r",
							"}\r",
							"\r",
							"if (jsonData.data && jsonData.data.value) {\r",
							"    const access_token = jsonData.data.value;\r",
							"    const refresh_token = jsonData.data.details.refresh_token;\r",
							"    pm.environment.set(\"access_token\", access_token);\r",
							"    pm.environment.set(\"refresh_token\", refresh_token);\r",
							"} else {\r",
							"    displayResponse('Login response error', 'Access token not found', jsonData);\r",
							"    pm.visualizer.set(visualLog);\r",
							"    return;\r",
							"}\r",
							"\r",
							"// ----------------------- Authorize ---------------------------\r",
							"const le = pm.environment.get('user_legal_entity');\r",
							"const redirect = pm.environment.get('user_redirect_uri');\r",
							"const scopes = pm.environment.get('user_scopes');\r",
							"const apiKey = pm.environment.get('mis_client_secret');\r",
							"const clientSecret = pm.environment.get('client_secret');\r",
							"const XCustomPSK = pm.globals.get('x-custom-psk');\r",
							"\r",
							"pm.sendRequest({\r",
							"    url: `${pm.globals.get('host')}/oauth/apps/authorize`,\r",
							"    method: 'POST',\r",
							"    header: {\r",
							"        'Content-Type': 'application/json',\r",
							"        'Authorization': `Bearer ${pm.environment.get('access_token')}`,\r",
							"        'X-Custom-PSK': XCustomPSK\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({\r",
							"            \"app\": {\r",
							"                \"client_id\": le,\r",
							"                \"redirect_uri\": redirect,\r",
							"                \"scope\": scopes\r",
							"            }\r",
							"        })\r",
							"    }\r",
							"}, (err, res) => {\r",
							"    if (err) {\r",
							"        displayResponse('Authorize request failed', 'Network or connection error', err);\r",
							"        pm.visualizer.set(visualLog);\r",
							"        return;\r",
							"    }\r",
							"\r",
							"    // Обробка статусів, що означають помилку\r",
							"    if (![201, 302].includes(res.code)) {\r",
							"        let responseBody;\r",
							"        try {\r",
							"            responseBody = res.json();\r",
							"        } catch {\r",
							"            responseBody = res.text();\r",
							"        }\r",
							"\r",
							"        // Якщо є поле error.message - відобразити його, інакше код статусу\r",
							"        const errorMessage = responseBody?.error?.message || `Unexpected status code: ${res.code}`;\r",
							"        displayResponse('Authorize response error', errorMessage, responseBody);\r",
							"        pm.visualizer.set(visualLog);\r",
							"        return;\r",
							"    }\r",
							"\r",
							"    // Обробка відсутності Location заголовку\r",
							"    const locationHeader = res.headers.get('Location');\r",
							"    if (!locationHeader) {\r",
							"        displayResponse('Authorize error', 'Missing Location header in response', res);\r",
							"        pm.visualizer.set(visualLog);\r",
							"        return;\r",
							"    }\r",
							"\r",
							"    // Витягування коду з Location\r",
							"    const match = locationHeader.match(/[?&]code=([^&]+)/);\r",
							"    if (!match) {\r",
							"        displayResponse('Authorize error', 'No \"code\" parameter found in Location header', locationHeader);\r",
							"        pm.visualizer.set(visualLog);\r",
							"        return;\r",
							"    }\r",
							"\r",
							"    const code = match[1];\r",
							"    pm.environment.set(\"user_code\", code);\r",
							"\r",
							"\r",
							"    // ----------------------- Exchange grant token ---------------------------\r",
							"    pm.sendRequest({\r",
							"        url: `${pm.globals.get('host')}/oauth/tokens`,\r",
							"        method: 'POST',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'api-key': `${apiKey}`,\r",
							"            'X-Custom-PSK': `${XCustomPSK}`\r",
							"        },\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify({\r",
							"                \"token\": {\r",
							"                    \"grant_type\": \"authorization_code\",\r",
							"                    \"code\": `${pm.environment.get(\"user_code\")}`,\r",
							"                    \"client_id\": `${le}`,\r",
							"                    \"client_secret\": `${clientSecret}`,\r",
							"                    \"redirect_uri\": `${redirect}`\r",
							"                }\r",
							"            })\r",
							"        }\r",
							"    }, function (err, res) {\r",
							"        if (err) {\r",
							"            displayResponse('Token exchange failed', 'Network or request error', err);\r",
							"            pm.visualizer.set(visualLog);\r",
							"            return;\r",
							"        }\r",
							"\r",
							"        let subrequestData;\r",
							"        try {\r",
							"            subrequestData = res.json();\r",
							"        } catch (e) {\r",
							"            displayResponse('JSON parsing error', 'Could not parse token response', res.text());\r",
							"            pm.visualizer.set(visualLog);\r",
							"            return;\r",
							"        }\r",
							"\r",
							"        // 🔴 Обробка HTTP помилки з тілом, яке містить .error.message\r",
							"        if (res.code !== 200 && res.code !== 201) {\r",
							"            const message = subrequestData?.error?.message || `Unexpected status code: ${res.code}`;\r",
							"            displayResponse('Token exchange error', message, subrequestData);\r",
							"            pm.visualizer.set(visualLog);\r",
							"            return;\r",
							"        }\r",
							"\r",
							"        if (subrequestData.data && subrequestData.data.value) {\r",
							"            const access_token = subrequestData.data.value;\r",
							"            const refresh_token = subrequestData.data.details.refresh_token;\r",
							"            pm.environment.set(\"access_token\", access_token);\r",
							"            pm.environment.set(\"refresh_token\", refresh_token);\r",
							"\r",
							"            const prevEmployeeType = pm.environment.get(\"employee_type\");\r",
							"            const prevEmployeeSpecialty = pm.environment.get(\"employee_specialty\");\r",
							"\r",
							"            getEmployeeTypeAndSpeciality(access_token, function (type, speciality, leInfo) {\r",
							"                const finalType = type || prevEmployeeType;\r",
							"                const finalSpeciality = speciality || prevEmployeeSpecialty;\r",
							"\r",
							"                const { le_type, le_name, le_edrpou } = leInfo || {};\r",
							"\r",
							"                const leHtml = `\r",
							"        Legal Entity Info:<br>\r",
							"        &#x2022; Type: ${le_type || pm.environment.get('le_type')},<br>\r",
							"        &#x2022; Name: ${le_name || pm.environment.get('le_name')},<br>\r",
							"        &#x2022; Edrpou: ${le_edrpou || pm.environment.get('le_edrpou')}\r",
							"    `;\r",
							"\r",
							"                const shortLeHtml = `\r",
							"        Legal Entity Info:<br>\r",
							"        &#x2022; Name: ${le_name || pm.environment.get('le_name')}<br>\r",
							"        &#x2022; Edrpou: ${le_edrpou || pm.environment.get('le_edrpou')}\r",
							"    `;\r",
							"\r",
							"                const msg = finalSpeciality\r",
							"                    ? `You authorized as a ${finalType},<br>Speciality: ${finalSpeciality}<br><br>${leHtml}`\r",
							"                    : `You authorized as a ${finalType}_${le_type || ''}<br><br>${shortLeHtml}`;\r",
							"\r",
							"                displayResponse('Authorization Successful', msg, subrequestData.data);\r",
							"                pm.visualizer.set(visualLog);\r",
							"            });\r",
							"\r",
							"\r",
							"        } else {\r",
							"            displayResponse('Token exchange error', 'No token data found in response', subrequestData);\r",
							"            pm.visualizer.set(visualLog);\r",
							"        }\r",
							"    });\r",
							"\r",
							"});\r",
							"\r",
							"const employeeId = pm.environment.get('user_id') || pm.environment.get('owner_id');\r",
							"\r",
							"const getEmployeeTypeAndSpeciality = (access_token, callback) => {\r",
							"    pm.sendRequest({\r",
							"        url: `${pm.globals.get('host')}/api/employees/${employeeId}`,\r",
							"        method: 'GET',\r",
							"        header: {\r",
							"            'Content-Type': 'application/json',\r",
							"            'api-key': apiKey,\r",
							"            'X-Custom-PSK': XCustomPSK,\r",
							"            'Authorization': `Bearer ${access_token}`\r",
							"        },\r",
							"    }, (err, res) => {\r",
							"        if (err) {\r",
							"            displayResponse('Employee fetch error', 'Network error while fetching employee', err);\r",
							"            pm.visualizer.set(visualLog);\r",
							"            return callback(null, null, null);\r",
							"        }\r",
							"\r",
							"        let responseBody;\r",
							"        try {\r",
							"            responseBody = res.json();\r",
							"        } catch (parseError) {\r",
							"            displayResponse('Employee fetch parsing error', 'Invalid JSON in response', parseError);\r",
							"            pm.visualizer.set(visualLog);\r",
							"            return callback(null, null, null);\r",
							"        }\r",
							"        if (res.code !== 200) {\r",
							"            const message = responseBody?.error?.message || 'Unexpected error';\r",
							"            displayResponse(`Employee fetch failed (Status ${res.code})`, message, responseBody);\r",
							"            pm.visualizer.set(visualLog);\r",
							"            callback(null, null, null);\r",
							"            return;\r",
							"        }\r",
							"\r",
							"        try {\r",
							"            const employeeType = responseBody?.data?.employee_type ?? null;\r",
							"            const legalEntity = responseBody?.data?.legal_entity ?? {};\r",
							"            const legalEntityInfo = {\r",
							"                le_type: legalEntity.type ?? null,\r",
							"                le_name: legalEntity.name ?? null,\r",
							"                le_edrpou: legalEntity.edrpou ?? null\r",
							"            };\r",
							"            // 🔐 Зберігаємо в environment\r",
							"            pm.environment.set('le_type', legalEntityInfo.le_type);\r",
							"            pm.environment.set('le_name', legalEntityInfo.le_name);\r",
							"            pm.environment.set('le_edrpou', legalEntityInfo.le_edrpou);\r",
							"\r",
							"            const employeeTypeLower = (employeeType ?? '').toLowerCase();\r",
							"            const specialistKey = Object.keys(responseBody?.data ?? {}).find(\r",
							"                key => key.toLowerCase() === employeeTypeLower\r",
							"            );\r",
							"            const specialities = specialistKey ? (responseBody.data[specialistKey]?.specialities ?? []) : [];\r",
							"            const officioSpecialities = specialities.filter(s => s.speciality_officio === true);\r",
							"\r",
							"            let employeeSpeciality = null;\r",
							"            if (officioSpecialities.length > 0) {\r",
							"                employeeSpeciality = officioSpecialities.map(s => s.speciality).join(', ');\r",
							"                pm.environment.set('employee_specialty', employeeSpeciality);\r",
							"            }\r",
							"            const noSepeciality = employeeSpeciality ? '' : `_${legalEntityInfo.le_type}`\r",
							"\r",
							"            if (employeeType && legalEntityInfo.le_type) {\r",
							"                pm.environment.set('employee_type', `${employeeType}${noSepeciality}`);\r",
							"            }\r",
							"\r",
							"            // Візуалізація (не обов’язково)\r",
							"            displayResponse(\r",
							"                'Employee fetch success',\r",
							"                employeeSpeciality\r",
							"                    ? `Employee type: ${employeeType}, Speciality(ies): ${employeeSpeciality}`\r",
							"                    : `Employee type: ${employeeType} (no officio speciality to display)`,\r",
							"                { employeeType, employeeSpeciality }\r",
							"            );\r",
							"            pm.visualizer.set(visualLog);\r",
							"\r",
							"            callback(employeeType, employeeSpeciality, legalEntityInfo);\r",
							"\r",
							"        } catch (finalError) {\r",
							"            // ❌ нічого не чіпаємо у середовищі\r",
							"            displayResponse('Employee processing error', 'Could not extract employee_type or speciality', finalError);\r",
							"            pm.visualizer.set(visualLog);\r",
							"            callback(null, null, null);\r",
							"        }\r",
							"    });\r",
							"};"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "6582ab6c-af81-4426-b6b0-f8d471537655",
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "15381251-b9e39d59-9749-438d-8ef7-04c6fde44f6b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-Custom-PSK",
						"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"token\": {\r\n        \"grant_type\": \"password\",\r\n        \"email\": \"{{user_email}}\",\r\n        \"password\": \"{{user_password}}\",\r\n        \"client_id\": \"e2e1d2c8-9bac-43c6-adef-83239940b30a\",\r\n        \"scope\": \"app:authorize\"\r\n    }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://auth-demo.ehealth.gov.ua/auth/login",
					"protocol": "https",
					"host": [
						"auth-demo",
						"ehealth",
						"gov",
						"ua"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		}
	]
}