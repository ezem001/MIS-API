{
	"info": {
		"_postman_id": "15381251-b87de427-11ab-4522-b9b2-d584855d2439",
		"name": "MEDICAL EVENTS MIS API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Medical Events",
			"item": [
				{
					"name": "Episode",
					"item": [
						{
							"name": "Get entities in episode context",
							"item": [
								{
									"name": "Get encounters in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "ce1f5058-d508-474b-86d0-fe173e5fd877"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [],
												"type": "text/javascript",
												"id": "15da39cc-d021-4a4d-889f-384c59ee5299"
											}
										}
									],
									"id": "15381251-dd0fe68e-9b9b-4dd9-9849-e2db62c16297",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/encounters?page=2&page_size=50",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"encounters"
											],
											"query": [
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page_size",
													"value": "50"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get encounter details in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "2da45ab1-50a3-4c2a-bf06-8ea4ddc06dfc"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "5bfdb428-383a-4aee-a3b0-e1b6b8c94f5d"
											}
										}
									],
									"id": "15381251-3f3d34b5-785d-45fe-884b-4555c1606262",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/encounters/encounter_id",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"encounters",
												"encounter_id"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get conditions in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "03765672-55b8-4520-a2f8-5e378d68bc0f"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "0e4b4605-7a27-446b-858e-e5717d2564c4"
											}
										}
									],
									"id": "15381251-2662ef43-4942-41d9-af13-3f9fc9b75cc1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/conditions?code=A20&onset_date_from=1990-01-01&onset_date_to=2000-01-01&page=2&page_size=50",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"conditions"
											],
											"query": [
												{
													"key": "code",
													"value": "A20"
												},
												{
													"key": "onset_date_from",
													"value": "1990-01-01"
												},
												{
													"key": "onset_date_to",
													"value": "2000-01-01"
												},
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page_size",
													"value": "50"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get conditions details in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "970c53ec-ece0-42a9-b175-77d6a0af8ea6"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "6a03db3a-5838-4d61-a767-4698170dff4e"
											}
										}
									],
									"id": "15381251-bae0ff28-d9b8-413d-9ed0-1e56ab3621d0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/conditions/condition_id",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"conditions",
												"condition_id"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get observations in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "c69a115d-518c-42be-a42a-46dd4a6b89de"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "56030764-bee8-490f-ab57-662a61c5e203"
											}
										}
									],
									"id": "15381251-f0c5b483-5309-493e-8889-5eb43be7055c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/observations?code=10569-2&issued_from=1990-01-01&issued_to=2000-01-01&page=2&page_size=50",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"observations"
											],
											"query": [
												{
													"key": "code",
													"value": "10569-2"
												},
												{
													"key": "issued_from",
													"value": "1990-01-01"
												},
												{
													"key": "issued_to",
													"value": "2000-01-01"
												},
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page_size",
													"value": "50"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get observation details in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "d5fdff7b-f3ec-4eda-98c4-9e78bb59db50"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "7011bf11-bf51-4325-8dc9-3563b7afab2c"
											}
										}
									],
									"id": "15381251-3c820d27-eddc-47e3-a8e7-0b2e8ae12570",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/observations/observation_id",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"observations",
												"observation_id"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get allergy intolerances in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "a2efc606-e6ee-4dbd-a999-81b2228ba231"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "cd9b7a30-3ef9-4a3c-b431-d3c64031ce38"
											}
										}
									],
									"id": "15381251-2b695dc5-b2ab-4a27-a295-b7955d8ce411",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/allergy_intolerances?code=227493005&onset_date_time_from=1990-01-01&onset_date_time_to=2000-01-01&page=2&page_size=50",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"allergy_intolerances"
											],
											"query": [
												{
													"key": "code",
													"value": "227493005"
												},
												{
													"key": "onset_date_time_from",
													"value": "1990-01-01"
												},
												{
													"key": "onset_date_time_to",
													"value": "2000-01-01"
												},
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page_size",
													"value": "50"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get allergy intolerance details in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "eabf1ace-903f-4dd0-8400-cb008ad54460"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "9e3310cd-3854-44ab-993c-0280b28195fa"
											}
										}
									],
									"id": "15381251-fd7c7063-2e80-4957-927b-ff50ebcc89b5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/allergy_intolerances/allergy_intolerance_id",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"allergy_intolerances",
												"allergy_intolerance_id"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get immunizations in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "08790c1c-2069-4545-990b-284df6ee180a"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [],
												"type": "text/javascript",
												"id": "121bf645-4068-4ff6-92ee-e339e6227cd5"
											}
										}
									],
									"id": "15381251-8c1e77b5-6018-4ab5-b3d1-9e9b206f2634",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/immunizations?date_from=1990-01-01&date_to=2000-01-01&page=2&page_size=50",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"immunizations"
											],
											"query": [
												{
													"key": "date_from",
													"value": "1990-01-01"
												},
												{
													"key": "date_to",
													"value": "2000-01-01"
												},
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page_size",
													"value": "50"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get immunization details in episode context",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "2dbac6e7-dc35-410f-94ba-9d25a26409f9"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "01db8e00-a13c-4eda-9e1a-f3770d4ab1f5"
											}
										}
									],
									"id": "15381251-46a74484-9939-410b-b384-4711efd4d557",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host_demo}}/api/patients/patient_id/episodes/episode_id/immunizations/immunization_id",
											"host": [
												"{{host_demo}}"
											],
											"path": [
												"api",
												"patients",
												"patient_id",
												"episodes",
												"episode_id",
												"immunizations",
												"immunization_id"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-f804470c-c82a-41bc-ae18-018dd252595b"
						},
						{
							"name": "Create Episode",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6a2eb172-fbe6-49c4-80b4-172d625d2434",
										"exec": [
											"var uuid = require('uuid');",
											"var id = uuid.v4();",
											"pm.globals.set(\"episode_id\", id);",
											"",
											"const now = new Date();",
											"",
											"// Зменшити дату на 2 дні",
											"const twoDaysAgo = new Date();",
											"twoDaysAgo.setDate(now.getDate() - 4);",
											"",
											"// Форматувати дату у форматі ISO 8601",
											"const formattedDate = twoDaysAgo.toISOString();",
											"console.log(formattedDate)",
											"// Зберегти дату в змінній середовища",
											"pm.globals.set('episode_start_date', formattedDate);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a5f1e9de-1809-413a-b90b-ca6ac21f1528",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    console.log(title, data)\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Initialize variables to track the number of tests\r",
											"let allTestsPassed = false;\r",
											"let passedTestsCount = 0;\r",
											"let totalTestsCount = 3; // Adjust based on the total number of tests\r",
											"\r",
											"// Run your tests\r",
											"pm.test(\"Check token is not expired\", function () {\r",
											"    const result = pm.response.code !== 401;\r",
											"    pm.expect(result).to.be.true;\r",
											"    if (result) {\r",
											"        passedTestsCount++;\r",
											"        allTestsPassed = true;\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Check user has the required scope\", function () {\r",
											"    const result = pm.response.code !== 403;\r",
											"    pm.expect(result).to.be.true;\r",
											"    if (result) {\r",
											"        passedTestsCount++;\r",
											"        allTestsPassed = true;\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Check for valid access token\", function () {\r",
											"    const result = pm.response.code !== 401;\r",
											"    pm.expect(result).to.be.true;\r",
											"    if (result) {\r",
											"        passedTestsCount++;\r",
											"        allTestsPassed = true;\r",
											"    }\r",
											"});\r",
											"\r",
											"console.log(`Passed ${passedTestsCount} out of ${totalTestsCount} tests ${passedTestsCount < totalTestsCount}`);\r",
											"if (passedTestsCount === totalTestsCount) {\r",
											"    const jsonData = pm.response.json();\r",
											"    console.log('response in episode', jsonData);\r",
											"\r",
											"    pm.test(\"Episode done. Response status is 202\", function () {\r",
											"        pm.expect(pm.response.code).to.eql(202);\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											"    if (jsonData && jsonData.error) {\r",
											"        displayResponse('Episode Response Error Details', jsonData.error);\r",
											"    }\r",
											"\r",
											"\r",
											"    const job_id = jsonData.data.links[0].href.substring(6) || '';\r",
											"    pm.globals.set(\"job_id\", job_id);\r",
											"\r",
											"    pm.environment.set('retryCount', 0);\r",
											"\r",
											"    // Function to check job status\r",
											"    function checkJobStatus(jobId) {\r",
											"\r",
											"        const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"        const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"        pm.sendRequest({\r",
											"            method: 'GET',\r",
											"            url: url,\r",
											"            header: {\r",
											"                'Content-Type': 'application/json',\r",
											"                'Authorization': 'Bearer TEQyZ2VCcW5YWnNoSTkyM2xOU0RVZz09',\r",
											"                'api-key': '30276e63617461a185ec',\r",
											"                'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"            }\r",
											"        }, function (err, res) {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"\r",
											"            pm.test(\"Check if patient is not active\", function () {\r",
											"                if (responseBody.data.status_code === 409) {\r",
											"                    pm.expect(responseBody.error.message).to.equal(\"Person is not active\");\r",
											"                    pm.expect(responseBody.error.type).to.equal(\"request_conflict\");\r",
											"                }\r",
											"            });\r",
											"\r",
											"            // Валідація ID епізоду\r",
											"            pm.test(\"Check episode id is unique\", function () {\r",
											"                // Перевірка, чи статус відповіді є 422\r",
											"                pm.response.to.not.have.status(422);\r",
											"\r",
											"                // Отримання масиву помилок\r",
											"                const errors = responseBody.data?.error?.invalid || [];\r",
											"\r",
											"                // Перевірка на наявність помилки \"Episode with such id already exists\"\r",
											"                const isIdDuplicate = errors.some(error =>\r",
											"                    error.entry === \"$.id\" &&\r",
											"                    Array.isArray(error.rules) &&\r",
											"                    error.rules.some(rule => rule.description === \"Episode with such id already exists\")\r",
											"                );\r",
											"                // Якщо знайдена помилка, тест не пройде\r",
											"                pm.expect(isIdDuplicate).to.be.false;\r",
											"            });\r",
											"\r",
											"            pm.test(\"Check if episode period start date is valid\", function () {\r",
											"                const errors = responseBody.data.error?.invalid || [];\r",
											"                const isPeriodStartError = errors.some(error =>\r",
											"                    error.entry === \"$.period.start\" &&\r",
											"                    error.rules.some(rule => rule.description === \"Start date must be in past\")\r",
											"                );\r",
											"                pm.expect(isPeriodStartError).to.be.false;\r",
											"            });\r",
											"\r",
											"            if (err) {\r",
											"                displayResponse('Request Error', { error: err.message });\r",
											"                console.error('Error checking job status:', err);\r",
											"            } else {\r",
											"\r",
											"                // const responseBody = res.json();\r",
											"                console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"                if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                    pm.test(`Episode Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                        // Перевіряємо, чи код відповіді є або 303\r",
											"                        pm.expect(res.code).to.eql(303);\r",
											"                    });\r",
											"\r",
											"                    // Extract patientID and jobEpisodeID from responseBody\r",
											"                    const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                        const href = link.href.replace('/api/', '');\r",
											"\r",
											"                        if (href.includes('patients/')) {\r",
											"                            // Extract patient ID\r",
											"                            const parts = href.split('/');\r",
											"                            const patientIDIndex = parts.indexOf('patients') + 1;\r",
											"                            if (patientIDIndex > 0 && patientIDIndex < parts.length) {\r",
											"                                acc.patientID = parts[patientIDIndex];\r",
											"                            }\r",
											"                        }\r",
											"\r",
											"                        if (href.includes('episodes/')) {\r",
											"                            // Extract episode ID\r",
											"                            acc.jobEpisodeID = href.split('episodes/')[1];\r",
											"                        }\r",
											"\r",
											"                        return acc;\r",
											"                    }, {});\r",
											"\r",
											"                    // Set globals\r",
											"                    if (links.patientID) {\r",
											"                        pm.globals.set('patient_id_from_episode', links.patientID);\r",
											"                    }\r",
											"\r",
											"                    if (links.jobEpisodeID) {\r",
											"                        pm.globals.set('jobEpisodeID', links.jobEpisodeID);\r",
											"                    }\r",
											"\r",
											"                    // Display response details in visualizer\r",
											"                    displayResponse('Episode Job Response Details', responseBody.data);\r",
											"\r",
											"\r",
											"                } else {\r",
											"\r",
											"                    // Retrieve the current retry count\r",
											"                    let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                    if (retryCount < maxRetries) {\r",
											"                        // Increment the retry count and set it back to the environment\r",
											"                        retryCount++;\r",
											"                        pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                        console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                        setTimeout(() => {\r",
											"                            checkJobStatus(jobId);\r",
											"                        }, 1000);\r",
											"\r",
											"                    } else {\r",
											"                        console.log('Maximum retry limit reached.');\r",
											"                        // Display final response details in visualizer\r",
											"                        displayResponse('Final Job Status Check', responseBody.data);\r",
											"                    }\r",
											"                }\r",
											"            }\r",
											"        });\r",
											"    }\r",
											"\r",
											"    // Call the function with the job ID\r",
											"    checkJobStatus(job_id);\r",
											"\r",
											"} else {\r",
											"    console.log('One or more tests failed, skipping job status check.');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-72622f90-e9dd-4bc4-a9c0-54d62b0f32c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n   \"id\":\"{{episode_id}}\",\n   \"name\":\"Епізод QA_28\",\n   \"status\":\"active\",\n   \"type\":{\n      \"system\":\"eHealth/episode_types\",\n      \"code\":\"TREATMENT\"\n   },\n   \"period\":{\n      \"start\":\"{{episode_start_date}}\"\n   },\n   \"managing_organization\": {\n\t    \"identifier\": {\n\t      \"type\": {\n\t        \"coding\": [\n\t          {\n\t            \"system\": \"eHealth/resources\",\n\t            \"code\": \"legal_entity\"\n\t          }\n\t        ]\n\t      },\n\t      \"value\":\"{{user_legal_entity}}\"\n\t    }\n   },\n   \"care_manager\": {\n\t    \"identifier\": {\n\t      \"type\": {\n\t        \"coding\": [\n\t          {\n\t            \"system\": \"eHealth/resources\",\n\t            \"code\": \"employee\"\n\t          }\n\t        ]\n\t      },\n\t      \"value\":\"{{user_id}}\"\n\t    }\n   }\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/8fb10e9d-59e5-4c0e-a34e-9162e2b94f6f/episodes",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"8fb10e9d-59e5-4c0e-a34e-9162e2b94f6f",
										"episodes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Episode by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "082f1043-4488-4a69-9d2d-fdb85dfeba80",
										"exec": [
											"// tests[\"Job created\"] = responseCode.code === 202;",
											"// var jsonData = JSON.parse(responseBody);",
											"// //pm.environment.set(\"job_id\", jsonData.data.id);",
											"// var job_id=jsonData.data.links[0].href.substring(6);",
											"// pm.environment.set(\"job_id\", job_id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7a619893-d291-44e8-b7d4-808f8613ffb0",
										"exec": [
											"var uuid = require('uuid');",
											"var id = uuid.v4();",
											"pm.environment.set(\"episode_id\", id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-83470d18-22dd-4f02-a944-3a0bd82cbb3b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/episodes/{{jobEpisodeID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"episodes",
										"{{jobEpisodeID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Episode by search params",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5fa01d24-256b-41fe-83b2-89157b8d3d40",
										"exec": [
											"tests[\"Route works\"] = responseCode.code === 200;",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "69a6d5d9-d14d-4667-8b7c-8c0e1c984a7b",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-725524c6-306c-427b-8ac2-cb369f7d67f4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/5546706d-6e18-47b8-82db-6d2af184f8e2/episodes?managing_organization_id={{user_legal_entity}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"5546706d-6e18-47b8-82db-6d2af184f8e2",
										"episodes"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										},
										{
											"key": "period_from",
											"value": "2022-05-01",
											"disabled": true
										},
										{
											"key": "period_to",
											"value": "2022-06-20",
											"disabled": true
										},
										{
											"key": "status",
											"value": "active",
											"disabled": true
										},
										{
											"key": "managing_organization_id",
											"value": "{{user_legal_entity}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Approved Episodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Route works\"] = responseCode.code === 200;",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "534523fc-bf9b-44b7-9198-8574c7b5ae9d"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript",
										"id": "6f7d7452-108c-4f2b-866e-24306f677be0"
									}
								}
							],
							"id": "15381251-7e7fd657-1bc2-4a13-9f93-7ec6bd802d9d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/episodes/approved",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"episodes",
										"approved"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										},
										{
											"key": "period_from",
											"value": "2022-05-01",
											"disabled": true
										},
										{
											"key": "period_to",
											"value": "2022-06-20",
											"disabled": true
										},
										{
											"key": "status",
											"value": "active",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Short Episodes by Diagnoses Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Route works\"] = responseCode.code === 200;",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "d3f34ec6-f05a-47ca-b7a5-1e077248892d"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "93e32412-cd27-4ea3-a8c0-f848e443da71"
									}
								}
							],
							"id": "15381251-10d5f1f4-3209-4a15-b86f-8758d11c2516",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/diagnoses_groups/episodes?period_from=2022-01-01&period_to=2023-01-01&diagnoses_group_id=80a9e15b-b71b-4caf-8f2e-ff247e8a5677&managing_organization_id=80a9e15b-b71b-4caf-8f2e-ff247e8a5677&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"diagnoses_groups",
										"episodes"
									],
									"query": [
										{
											"key": "period_from",
											"value": "2022-01-01"
										},
										{
											"key": "period_to",
											"value": "2023-01-01"
										},
										{
											"key": "diagnoses_group_id",
											"value": "80a9e15b-b71b-4caf-8f2e-ff247e8a5677"
										},
										{
											"key": "managing_organization_id",
											"value": "80a9e15b-b71b-4caf-8f2e-ff247e8a5677"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Episode",
							"id": "15381251-b95711f3-b319-42f4-bce2-dd88302a7d4e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Епізод оновлення\",\r\n  \"care_manager\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"employee\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"c32c52a6-4e62-440e-b971-a14165eab628\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/b9d31a4f-6424-4aa2-a9cb-3701adb16b01/episodes/1d22d407-3ab1-49ba-a154-455984b9fcdc",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"b9d31a4f-6424-4aa2-a9cb-3701adb16b01",
										"episodes",
										"1d22d407-3ab1-49ba-a154-455984b9fcdc"
									]
								}
							},
							"response": []
						},
						{
							"name": "Close Episode",
							"id": "15381251-269780da-4625-4212-8114-e91b0e379bd9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"period\": {\r\n    \"end\": \"2022-11-28T10:45:16.000Z\"\r\n  },\r\n  \"closing_summary\": \"Пацієнт одужав, епізод може бути закрито\",\r\n  \"status_reason\": {\r\n    \"coding\": [\r\n      {\r\n        \"system\": \"eHealth/episode_closing_reasons\",\r\n        \"code\": \"resolved\"\r\n      }\r\n    ],\r\n    \"text\": \"Стан пацієнта поліпшився, в подальшому лікуванні немає потреби\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/b9d31a4f-6424-4aa2-a9cb-3701adb16b01/episodes/1d22d407-3ab1-49ba-a154-455984b9fcdc/actions/close",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"b9d31a4f-6424-4aa2-a9cb-3701adb16b01",
										"episodes",
										"1d22d407-3ab1-49ba-a154-455984b9fcdc",
										"actions",
										"close"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Episode",
							"id": "15381251-c0c965c9-a145-4ea3-b8cc-afe255333c39",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"explanatory_letter\": \"Епізод був відмінений у зв'язку з механічною помилкою лікаря\",\r\n  \"status_reason\": {\r\n    \"coding\": [\r\n      {\r\n        \"system\": \"eHealth/cancellation_reasons\",\r\n        \"code\": \"typo\"\r\n      }\r\n    ],\r\n    \"text\": \"Епізод з механічною помилкою\"\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/b9d31a4f-6424-4aa2-a9cb-3701adb16b01/episodes/875c8194-fe8d-4944-83f6-efeddc4f8c9b/actions/cancel",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"b9d31a4f-6424-4aa2-a9cb-3701adb16b01",
										"episodes",
										"875c8194-fe8d-4944-83f6-efeddc4f8c9b",
										"actions",
										"cancel"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-c4c6476e-d153-404a-96a0-44f68f2c1a25"
				},
				{
					"name": "Encounter data package",
					"item": [
						{
							"name": "Dummy for encounters",
							"item": [
								{
									"name": "PHC",
									"item": [
										{
											"name": "PHC_Encounter_Rancho_Los_Amigos Preparation",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6ec24cc7-9000-40db-a82c-470483a92913",
														"exec": [
															"const uuid = require('uuid');\r",
															"const encounterId = uuid.v4();\r",
															"const drId = uuid.v4();\r",
															"const visitId = uuid.v4();\r",
															"const observationId = uuid.v4();\r",
															"pm.globals.set(\"encounter_id\", encounterId);\r",
															"pm.globals.set(\"visit_id\", visitId);\r",
															"pm.globals.set(\"diagnostic_report_id\", drId);\r",
															"pm.globals.set(\"observation_id\", observationId)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f8047aa7-3244-46b7-9ee5-d81877600896",
														"exec": [
															"const resData = pm.response.json();\r",
															"console.log('create encounter sign content', resData)\r",
															"\r",
															"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
															"    pm.expect(pm.response.code).to.eql(200);\r",
															"    pm.expect(resData).to.have.property('signed_content');\r",
															"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "15381251-c77bdd52-b1b2-4114-9599-dbe9405a9534",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2025-02-16T10:45:16.000Z\",\r\n            \"end\": \"2025-02-16T10:45:16.000Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"actions\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"T47\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"T50\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_division_id}}\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"PHC\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"A02\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"D09\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"B77\",\r\n                        \"system\": \"eHealth/ICPC2/condition_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"text\": \"Ліва нога\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"left_leg\",\r\n                            \"system\": \"eHealth/body_sites\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2025-01-20T09:46:37.694Z\",\r\n            \"asserted_date\": \"2025-01-25T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"text\": \"IV\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"default_condition_stage\",\r\n                            \"system\": \"eHealth/condition_stages\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"observations\": [\r\n        {\r\n            \"body_site\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"left_hand\",\r\n                        \"system\": \"eHealth/body_sites\"\r\n                    }\r\n                ]\r\n            },\r\n            \"categories\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"survey\",\r\n                            \"system\": \"eHealth/observation_categories\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"Rancho_Los_Amigos\",\r\n                        \"system\": \"eHealth/custom/observation_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"comment\": \"Some comment\",\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"encounter\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"end\": \"2025-01-25T10:50:44Z\",\r\n                \"start\": \"2025-01-01T10:50:44Z\"\r\n            },\r\n            \"id\": \"{{observation_id}}\",\r\n            \"interpretation\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_interpretations\"\r\n                    }\r\n                ],\r\n                \"text\": \"низький\"\r\n            },\r\n            \"issued\": \"2025-01-01T10:50:44Z\",\r\n            \"method\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_methods\"\r\n                    }\r\n                ],\r\n                \"text\": \"метод ABC\"\r\n            },\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"employee\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"reference_ranges\": [\r\n                {\r\n                    \"age\": {\r\n                        \"high\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \"<\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 35\r\n                        },\r\n                        \"low\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \">\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 18\r\n                        }\r\n                    },\r\n                    \"applies_to\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"code\": \"default_reference_range_application\",\r\n                                    \"system\": \"eHealth/reference_range_applications\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"high\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \"<\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 27\r\n                    },\r\n                    \"low\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \">\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 13.000001\r\n                    },\r\n                    \"text\": \"Some text\",\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"default_reference_range\",\r\n                                \"system\": \"eHealth/reference_range_types\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"нормальний\"\r\n                    }\r\n                }\r\n            ],\r\n            \"status\": \"valid\",\r\n            \"value_codeable_concept\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"LEVEL_10\",\r\n                        \"system\": \"eHealth/Rancho_Los_Amigos\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"diagnostic_reports\": [\r\n        {\r\n            \"id\": \"{{diagnostic_report_id}}\",\r\n            \"status\": \"final\",\r\n            \"category\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnostic_report_categories\",\r\n                            \"code\": \"diagnostic_procedure\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"3c7587c8-74fb-40be-b027-b7eabd1d5ec4\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"start\": \"2025-01-20T10:45:16.000Z\",\r\n                \"end\": \"2025-01-25T11:00:00.000Z\"\r\n            },\r\n            \"issued\": \"2025-01-20T09:46:37.694Z\",\r\n            \"conclusion\": \"At risk of osteoporotic fracture SO TEST\",\r\n            \"recorded_by\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"encounter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"managing_organization\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_legal_entity}}\"\r\n                }\r\n            },\r\n            \"performer\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            },\r\n            \"results_interpreter\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3000/create-encounter-signed-content",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3000",
													"path": [
														"create-encounter-signed-content"
													]
												}
											},
											"response": []
										},
										{
											"name": "PHC_Encounter_Bartel",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6ec24cc7-9000-40db-a82c-470483a92913",
														"exec": [
															"const uuid = require('uuid');\r",
															"const encounterId = uuid.v4();\r",
															"const drId = uuid.v4();\r",
															"const visitId = uuid.v4();\r",
															"const observationId = uuid.v4();\r",
															"pm.globals.set(\"encounter_id\", encounterId);\r",
															"pm.globals.set(\"visit_id\", visitId);\r",
															"pm.globals.set(\"diagnostic_report_id\", drId);\r",
															"pm.globals.set(\"observation_id\", observationId)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f8047aa7-3244-46b7-9ee5-d81877600896",
														"exec": [
															"const resData = pm.response.json();\r",
															"console.log('create encounter sign content', resData)\r",
															"\r",
															"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
															"    pm.expect(pm.response.code).to.eql(200);\r",
															"    pm.expect(resData).to.have.property('signed_content');\r",
															"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "15381251-7027fa88-4665-4ea8-acad-6c3403303694",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2025-02-16T10:45:16.000Z\",\r\n            \"end\": \"2025-02-16T10:45:16.000Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"actions\": [\r\n           {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"T47\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"T50\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_division_id}}\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"PHC\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n             {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"A02\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"D09\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"B77\",\r\n                        \"system\": \"eHealth/ICPC2/condition_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"text\": \"Ліва нога\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"left_leg\",\r\n                            \"system\": \"eHealth/body_sites\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2025-01-20T09:46:37.694Z\",\r\n            \"asserted_date\": \"2025-01-25T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"text\": \"IV\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"default_condition_stage\",\r\n                            \"system\": \"eHealth/condition_stages\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"observations\": [\r\n        {\r\n            \"body_site\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"left_hand\",\r\n                        \"system\": \"eHealth/body_sites\"\r\n                    }\r\n                ]\r\n            },\r\n            \"categories\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"survey\",\r\n                            \"system\": \"eHealth/observation_categories\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"96761-2\",\r\n                        \"system\": \"eHealth/LOINC/observation_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"comment\": \"Some comment\",\r\n            \"components\": [\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"83184-2\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 10\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5785-2\",\r\n                                \"code\": \"LA12302-8\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"83185-9\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 15\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5787-8\",\r\n                                \"code\": \"LA12302-8\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"96767-9\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 5\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5777-9\",\r\n                                \"code\": \"LA31644-0\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"83183-4\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 10\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5786-0\",\r\n                                \"code\": \"LA31632-5\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"83181-8\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 5\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5788-6\",\r\n                                \"code\": \"LA31636-6\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"83186-7\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 15\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5790-2\",\r\n                                \"code\": \"LA31642-4\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"96758-8\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 10\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5783-7\",\r\n                                \"code\": \"LA12302-8\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"83182-6\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 10\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5789-4\",\r\n                                \"code\": \"LA31638-2\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"96759-6\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 10\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5766-2\",\r\n                                \"code\": \"LA31625-9\"\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/observation_components\",\r\n                                \"code\": \"96760-4\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"extension\": [\r\n                                    {\r\n                                        \"code\": \"item_weight\",\r\n                                        \"value_decimal\": 10\r\n                                    }\r\n                                ],\r\n                                \"system\": \"eHealth/LOINC/LL5782-9\",\r\n                                \"code\": \"LA31625-9\"\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            ],\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"encounter\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"end\": \"2025-01-25T10:50:44Z\",\r\n                \"start\": \"2025-01-01T10:50:44Z\"\r\n            },\r\n            \"id\": \"{{observation_id}}\",\r\n            \"interpretation\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_interpretations\"\r\n                    }\r\n                ],\r\n                \"text\": \"низький\"\r\n            },\r\n            \"issued\": \"2025-01-01T10:50:44Z\",\r\n            \"method\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_methods\"\r\n                    }\r\n                ],\r\n                \"text\": \"метод ABC\"\r\n            },\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"employee\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"reference_ranges\": [\r\n                {\r\n                    \"age\": {\r\n                        \"high\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \"<\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 35\r\n                        },\r\n                        \"low\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \">\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 18\r\n                        }\r\n                    },\r\n                    \"applies_to\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"code\": \"default_reference_range_application\",\r\n                                    \"system\": \"eHealth/reference_range_applications\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"high\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \"<\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 27\r\n                    },\r\n                    \"low\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \">\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 13.000001\r\n                    },\r\n                    \"text\": \"Some text\",\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"default_reference_range\",\r\n                                \"system\": \"eHealth/reference_range_types\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"нормальний\"\r\n                    }\r\n                }\r\n            ],\r\n            \"status\": \"valid\",\r\n            \"value_quantity\": {\r\n                \"value\": 100,\r\n                \"code\": \"ScoreOf\",\r\n                \"unit\": \"ScoreOf\",\r\n                \"system\": \"eHealth/ucum/units\"\r\n            }\r\n        }\r\n    ],\r\n    \"diagnostic_reports\": [\r\n        {\r\n            \"id\": \"{{diagnostic_report_id}}\",\r\n            \"status\": \"final\",\r\n            \"category\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnostic_report_categories\",\r\n                            \"code\": \"diagnostic_procedure\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"3c7587c8-74fb-40be-b027-b7eabd1d5ec4\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"start\": \"2025-01-20T10:45:16.000Z\",\r\n                \"end\": \"2025-01-25T11:00:00.000Z\"\r\n            },\r\n            \"issued\": \"2025-01-26T09:46:37.694Z\",\r\n            \"conclusion\": \"At risk of osteoporotic fracture SO TEST\",\r\n            \"recorded_by\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"encounter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"managing_organization\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_legal_entity}}\"\r\n                }\r\n            },\r\n            \"performer\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            },\r\n            \"results_interpreter\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3000/create-encounter-signed-content",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3000",
													"path": [
														"create-encounter-signed-content"
													]
												}
											},
											"response": []
										},
										{
											"name": "PHC_Encounter_WHODAS_2.0",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6ec24cc7-9000-40db-a82c-470483a92913",
														"exec": [
															"const uuid = require('uuid');\r",
															"const encounterId = uuid.v4();\r",
															"const drId = uuid.v4();\r",
															"const visitId = uuid.v4();\r",
															"const observationId = uuid.v4();\r",
															"pm.globals.set(\"encounter_id\", encounterId);\r",
															"pm.globals.set(\"visit_id\", visitId);\r",
															"pm.globals.set(\"diagnostic_report_id\", drId);\r",
															"pm.globals.set(\"observation_id\", observationId)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f8047aa7-3244-46b7-9ee5-d81877600896",
														"exec": [
															"const resData = pm.response.json();\r",
															"console.log('create encounter sign content', resData)\r",
															"\r",
															"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
															"    pm.expect(pm.response.code).to.eql(200);\r",
															"    pm.expect(resData).to.have.property('signed_content');\r",
															"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "15381251-1491bf3a-1481-423a-9e5d-3f468ee39997",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2025-02-24T10:45:16.000Z\",\r\n            \"end\": \"2025-02-24T10:45:16.000Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"actions\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"T47\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"T50\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_division_id}}\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"PHC\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"A02\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"D09\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"B77\",\r\n                        \"system\": \"eHealth/ICPC2/condition_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"text\": \"Ліва нога\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"left_leg\",\r\n                            \"system\": \"eHealth/body_sites\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2025-01-20T09:46:37.694Z\",\r\n            \"asserted_date\": \"2025-01-25T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"text\": \"IV\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"default_condition_stage\",\r\n                            \"system\": \"eHealth/condition_stages\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"observations\": [\r\n        {\r\n            \"body_site\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"left_hand\",\r\n                        \"system\": \"eHealth/body_sites\"\r\n                    }\r\n                ]\r\n            },\r\n            \"categories\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"survey\",\r\n                            \"system\": \"eHealth/observation_categories\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"WHODAS_2.0\",\r\n                        \"system\": \"eHealth/custom/observation_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"comment\": \"Some comment\",\r\n            \"components\": [\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/custom/observation_components\",\r\n                                \"code\": \"D1\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_quantity\": {\r\n                        \"value\": 35,\r\n                        \"code\": \"ScoreOf\",\r\n                        \"unit\": \"ScoreOf\",\r\n                        \"system\": \"eHealth/ucum/units\"\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/custom/observation_components\",\r\n                                \"code\": \"D2\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_quantity\": {\r\n                        \"value\": 10,\r\n                        \"code\": \"ScoreOf\",\r\n                        \"unit\": \"ScoreOf\",\r\n                        \"system\": \"eHealth/ucum/units\"\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/custom/observation_components\",\r\n                                \"code\": \"D3\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_quantity\": {\r\n                        \"value\": 10,\r\n                        \"code\": \"ScoreOf\",\r\n                        \"unit\": \"ScoreOf\",\r\n                        \"system\": \"eHealth/ucum/units\"\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/custom/observation_components\",\r\n                                \"code\": \"D4\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_quantity\": {\r\n                        \"value\": 10,\r\n                        \"code\": \"ScoreOf\",\r\n                        \"unit\": \"ScoreOf\",\r\n                        \"system\": \"eHealth/ucum/units\"\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/custom/observation_components\",\r\n                                \"code\": \"D5\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_quantity\": {\r\n                        \"value\": 10,\r\n                        \"code\": \"ScoreOf\",\r\n                        \"unit\": \"ScoreOf\",\r\n                        \"system\": \"eHealth/ucum/units\"\r\n                    }\r\n                },\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/custom/observation_components\",\r\n                                \"code\": \"D6\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_quantity\": {\r\n                        \"value\": 10,\r\n                        \"code\": \"ScoreOf\",\r\n                        \"unit\": \"ScoreOf\",\r\n                        \"system\": \"eHealth/ucum/units\"\r\n                    }\r\n                }\r\n            ],\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"encounter\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"end\": \"2025-01-25T10:50:44Z\",\r\n                \"start\": \"2025-01-01T10:50:44Z\"\r\n            },\r\n            \"id\": \"{{observation_id}}\",\r\n            \"interpretation\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_interpretations\"\r\n                    }\r\n                ],\r\n                \"text\": \"низький\"\r\n            },\r\n            \"issued\": \"2025-01-01T10:50:44Z\",\r\n            \"method\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_methods\"\r\n                    }\r\n                ],\r\n                \"text\": \"метод ABC\"\r\n            },\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"employee\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"reference_ranges\": [\r\n                {\r\n                    \"age\": {\r\n                        \"high\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \"<\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 35\r\n                        },\r\n                        \"low\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \">\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 18\r\n                        }\r\n                    },\r\n                    \"applies_to\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"code\": \"default_reference_range_application\",\r\n                                    \"system\": \"eHealth/reference_range_applications\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"high\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \"<\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 27\r\n                    },\r\n                    \"low\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \">\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 13.000001\r\n                    },\r\n                    \"text\": \"Some text\",\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"default_reference_range\",\r\n                                \"system\": \"eHealth/reference_range_types\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"нормальний\"\r\n                    }\r\n                }\r\n            ],\r\n            \"status\": \"valid\",\r\n            \"value_quantity\": {\r\n                \"value\": 60,\r\n                \"code\": \"mg\",\r\n                \"unit\": \"mg\",\r\n                \"system\": \"eHealth/ucum/units\"\r\n            }\r\n        }\r\n    ],\r\n    \"diagnostic_reports\": [\r\n        {\r\n            \"id\": \"{{diagnostic_report_id}}\",\r\n            \"status\": \"final\",\r\n            \"category\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnostic_report_categories\",\r\n                            \"code\": \"diagnostic_procedure\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"3c7587c8-74fb-40be-b027-b7eabd1d5ec4\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"start\": \"2025-01-20T10:45:16.000Z\",\r\n                \"end\": \"2025-01-25T11:00:00.000Z\"\r\n            },\r\n            \"issued\": \"2025-01-26T09:46:37.694Z\",\r\n            \"conclusion\": \"At risk of osteoporotic fracture SO TEST\",\r\n            \"recorded_by\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"encounter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"managing_organization\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_legal_entity}}\"\r\n                }\r\n            },\r\n            \"performer\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            },\r\n            \"results_interpreter\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3000/create-encounter-signed-content",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3000",
													"path": [
														"create-encounter-signed-content"
													]
												}
											},
											"response": []
										},
										{
											"name": "PHC_Encounter_ASIA",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6ec24cc7-9000-40db-a82c-470483a92913",
														"exec": [
															"const uuid = require('uuid');\r",
															"const encounterId = uuid.v4();\r",
															"const drId = uuid.v4();\r",
															"const visitId = uuid.v4();\r",
															"const observationId = uuid.v4();\r",
															"pm.globals.set(\"encounter_id\", encounterId);\r",
															"pm.globals.set(\"visit_id\", visitId);\r",
															"pm.globals.set(\"diagnostic_report_id\", drId);\r",
															"pm.globals.set(\"observation_id\", observationId)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f8047aa7-3244-46b7-9ee5-d81877600896",
														"exec": [
															"const resData = pm.response.json();\r",
															"console.log('create encounter sign content', resData)\r",
															"\r",
															"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
															"    pm.expect(pm.response.code).to.eql(200);\r",
															"    pm.expect(resData).to.have.property('signed_content');\r",
															"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "15381251-4a8c10bd-6c81-4659-9a24-9cfe8e18a741",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2025-02-16T10:45:16.000Z\",\r\n            \"end\": \"2025-02-16T10:45:16.000Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"actions\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"T47\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"T50\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_division_id}}\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"PHC\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"A02\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"D09\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"B77\",\r\n                        \"system\": \"eHealth/ICPC2/condition_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"text\": \"Ліва нога\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"left_leg\",\r\n                            \"system\": \"eHealth/body_sites\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2025-01-20T09:46:37.694Z\",\r\n            \"asserted_date\": \"2025-01-25T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"text\": \"IV\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"default_condition_stage\",\r\n                            \"system\": \"eHealth/condition_stages\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"observations\": [\r\n        {\r\n            \"body_site\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"left_hand\",\r\n                        \"system\": \"eHealth/body_sites\"\r\n                    }\r\n                ]\r\n            },\r\n            \"categories\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"survey\",\r\n                            \"system\": \"eHealth/observation_categories\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"97843-7\",\r\n                        \"system\": \"eHealth/LOINC/observation_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"comment\": \"Some comment\",\r\n            \"components\": [\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/custom/observation_components\",\r\n                                \"code\": \"D1\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/LOINC/LL5913-0\",\r\n                                \"code\": \"LA32084-8\"\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            ],\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"encounter\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"end\": \"2025-01-25T10:50:44Z\",\r\n                \"start\": \"2025-01-01T10:50:44Z\"\r\n            },\r\n            \"id\": \"{{observation_id}}\",\r\n            \"interpretation\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_interpretations\"\r\n                    }\r\n                ],\r\n                \"text\": \"низький\"\r\n            },\r\n            \"issued\": \"2025-01-01T10:50:44Z\",\r\n            \"method\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_methods\"\r\n                    }\r\n                ],\r\n                \"text\": \"метод ABC\"\r\n            },\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"employee\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"reference_ranges\": [\r\n                {\r\n                    \"age\": {\r\n                        \"high\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \"<\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 35\r\n                        },\r\n                        \"low\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \">\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 18\r\n                        }\r\n                    },\r\n                    \"applies_to\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"code\": \"default_reference_range_application\",\r\n                                    \"system\": \"eHealth/reference_range_applications\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"high\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \"<\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 27\r\n                    },\r\n                    \"low\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \">\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 13.000001\r\n                    },\r\n                    \"text\": \"Some text\",\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"default_reference_range\",\r\n                                \"system\": \"eHealth/reference_range_types\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"нормальний\"\r\n                    }\r\n                }\r\n            ],\r\n            \"status\": \"valid\",\r\n            \"value_codeable_concept\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/LOINC/LL5900-7\",\r\n                        \"code\": \"LA13503-0\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"diagnostic_reports\": [\r\n        {\r\n            \"id\": \"{{diagnostic_report_id}}\",\r\n            \"status\": \"final\",\r\n            \"category\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnostic_report_categories\",\r\n                            \"code\": \"diagnostic_procedure\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"3c7587c8-74fb-40be-b027-b7eabd1d5ec4\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"start\": \"2025-01-20T10:45:16.000Z\",\r\n                \"end\": \"2025-01-25T11:00:00.000Z\"\r\n            },\r\n            \"issued\": \"2025-01-26T09:46:37.694Z\",\r\n            \"conclusion\": \"At risk of osteoporotic fracture SO TEST\",\r\n            \"recorded_by\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"encounter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"managing_organization\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_legal_entity}}\"\r\n                }\r\n            },\r\n            \"performer\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            },\r\n            \"results_interpreter\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3000/create-encounter-signed-content",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3000",
													"path": [
														"create-encounter-signed-content"
													]
												}
											},
											"response": []
										}
									],
									"id": "15381251-a7928a26-5a5d-45eb-a8d0-32a9670b94ac"
								},
								{
									"name": "Inpatient",
									"item": [
										{
											"name": "Encounter_MMSE",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6ec24cc7-9000-40db-a82c-470483a92913",
														"exec": [
															"const uuid = require('uuid');\r",
															"const encounterId = uuid.v4();\r",
															"const drId = uuid.v4();\r",
															"const visitId = uuid.v4();\r",
															"const observationId = uuid.v4();\r",
															"pm.globals.set(\"encounter_id\", encounterId);\r",
															"pm.globals.set(\"visit_id\", visitId);\r",
															"pm.globals.set(\"diagnostic_report_id\", drId);\r",
															"pm.globals.set(\"observation_id\", observationId)"
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "f8047aa7-3244-46b7-9ee5-d81877600896",
														"exec": [
															"const resData = pm.response.json();\r",
															"console.log('create encounter sign content', resData)\r",
															"\r",
															"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
															"    pm.expect(pm.response.code).to.eql(200);\r",
															"    pm.expect(resData).to.have.property('signed_content');\r",
															"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
															"});\r",
															"\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "15381251-ef3941b2-f0f9-4b90-8c95-d85f8d8961d7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2025-02-16T10:45:16.000Z\",\r\n            \"end\": \"2025-02-16T10:45:16.000Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"action_references\": [\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"48d193e6-27b4-41b4-99ed-87441cd3362f\"\r\n                }\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_division_id}}\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"INPATIENT\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"A02\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"D09\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                        \"code\": \"J98.9\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"text\": \"Ліва нога\",\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"left_leg\",\r\n                            \"system\": \"eHealth/body_sites\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2025-01-20T09:46:37.694Z\",\r\n            \"asserted_date\": \"2025-01-25T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/condition_stages\",\r\n                            \"code\": \"default_condition_stage\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"observations\": [\r\n        {\r\n            \"body_site\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"left_hand\",\r\n                        \"system\": \"eHealth/body_sites\"\r\n                    }\r\n                ]\r\n            },\r\n            \"categories\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"survey\",\r\n                            \"system\": \"eHealth/observation_categories\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"72106-8\",\r\n                        \"system\": \"eHealth/LOINC/observation_codes\"\r\n                    }\r\n                ]\r\n            },\r\n            \"comment\": \"Some comment\",\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"encounter\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"end\": \"2025-01-25T10:50:44Z\",\r\n                \"start\": \"2025-01-01T10:50:44Z\"\r\n            },\r\n            \"id\": \"{{observation_id}}\",\r\n            \"interpretation\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_interpretations\"\r\n                    }\r\n                ],\r\n                \"text\": \"низький\"\r\n            },\r\n            \"issued\": \"2025-01-01T10:50:44Z\",\r\n            \"method\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"default_value\",\r\n                        \"system\": \"eHealth/observation_methods\"\r\n                    }\r\n                ],\r\n                \"text\": \"метод ABC\"\r\n            },\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"employee\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"reference_ranges\": [\r\n                {\r\n                    \"age\": {\r\n                        \"high\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \"<\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 35\r\n                        },\r\n                        \"low\": {\r\n                            \"code\": null,\r\n                            \"comparator\": \">\",\r\n                            \"system\": null,\r\n                            \"unit\": \"%\",\r\n                            \"value\": 18\r\n                        }\r\n                    },\r\n                    \"applies_to\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"code\": \"default_reference_range_application\",\r\n                                    \"system\": \"eHealth/reference_range_applications\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    \"high\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \"<\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 27\r\n                    },\r\n                    \"low\": {\r\n                        \"code\": \"%\",\r\n                        \"comparator\": \">\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"unit\": \"%\",\r\n                        \"value\": 13.000001\r\n                    },\r\n                    \"text\": \"Some text\",\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"default_reference_range\",\r\n                                \"system\": \"eHealth/reference_range_types\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"нормальний\"\r\n                    }\r\n                }\r\n            ],\r\n            \"status\": \"valid\",\r\n            \"value_quantity\": {\r\n                \"value\": 27,\r\n                \"code\": \"ScoreOf\",\r\n                \"unit\": \"ScoreOf\",\r\n                \"system\": \"eHealth/ucum/units\"\r\n            }\r\n        }\r\n    ],\r\n    \"diagnostic_reports\": [\r\n        {\r\n            \"id\": \"{{diagnostic_report_id}}\",\r\n            \"status\": \"final\",\r\n            \"category\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnostic_report_categories\",\r\n                            \"code\": \"diagnostic_procedure\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"3c7587c8-74fb-40be-b027-b7eabd1d5ec4\"\r\n                }\r\n            },\r\n            \"effective_period\": {\r\n                \"start\": \"2025-01-20T10:45:16.000Z\",\r\n                \"end\": \"2025-01-25T11:00:00.000Z\"\r\n            },\r\n            \"issued\": \"2025-01-28T09:46:37.694Z\",\r\n            \"conclusion\": \"At risk of osteoporotic fracture SO TEST\",\r\n            \"recorded_by\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"encounter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"managing_organization\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_legal_entity}}\"\r\n                }\r\n            },\r\n            \"performer\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            },\r\n            \"results_interpreter\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://localhost:3000/create-encounter-signed-content",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "3000",
													"path": [
														"create-encounter-signed-content"
													]
												}
											},
											"response": []
										}
									],
									"id": "15381251-6119961a-f37c-4237-bc49-c300d6f84145"
								},
								{
									"name": "Dummy encounter with observation and immunization",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');\r",
													"const encounterId = uuid.v4();\r",
													"const visitId = uuid.v4();\r",
													"pm.globals.set(\"encounter_id\", encounterId);\r",
													"pm.globals.set(\"visit_id\", visitId);"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "76bdd611-f5a2-43a4-8ab7-4bddbe7d9449"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const resData = pm.response.json();\r",
													"console.log('create encounter sign content', resData)\r",
													"\r",
													"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
													"    pm.expect(pm.response.code).to.eql(200);\r",
													"    pm.expect(resData).to.have.property('signed_content');\r",
													"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"// if (resData.signed_content) {\r",
													"//     pm.globals.set('encounter_signed_content', resData.signed_content)\r",
													"// }\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "d52dc333-21f9-46c2-94d5-60ff0404f34a"
											}
										}
									],
									"id": "15381251-55948464-6f69-454a-9c56-2cb7f18bd1c6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2024-12-08T10:45:16.000Z\",\r\n            \"end\": \"2024-12-08T10:45:16.000Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"action_references\": [\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"7be27ed7-db47-4ef5-95da-74a60a8ffc8a\"\r\n                }\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_division_id}}\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"AMB\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"S17\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                        \"code\": \"E10.9\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/body_sites\",\r\n                            \"code\": \"pelvis\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2024-02-01T09:46:37.694Z\",\r\n            \"asserted_date\": \"2024-03-03T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/condition_stages\",\r\n                            \"code\": \"default_condition_stage\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            \"evidences\": [\r\n                {\r\n                    \"codes\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/ICPC2/reasons\",\r\n                                    \"code\": \"T90\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"observations\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"status\": \"valid\",\r\n            \"categories\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/ICF/observation_categories\",\r\n                            \"code\": \"functions\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICF/classifiers\",\r\n                        \"code\": \"b1721\"\r\n                    }\r\n                ]\r\n            },\r\n            \"components\": [\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"extent_or_magnitude_of_impairment\",\r\n                                \"system\": \"eHealth/ICF/qualifiers\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"interpretation\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/observation_interpretations\",\r\n                                \"code\": \"normal\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"reference_ranges\": [],\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"1\",\r\n                                \"system\": \"eHealth/ICF/qualifiers/extent_or_magnitude_of_impairment\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    }\r\n                }\r\n            ],\r\n            \"effective_date_time\": \"2024-09-02T10:45:16.000Z\",\r\n            \"issued\": \"2024-09-02T10:45:16.000Z\",\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Галина Олександрівна\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"comment\": \"Some comment\",\r\n            \"value_quantity\": {\r\n                \"value\": 0,\r\n                \"comparator\": \">\",\r\n                \"unit\": \"kg\",\r\n                \"system\": \"eHealth/ucum/units\",\r\n                \"code\": \"kg\"\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"immunizations\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"status\": \"completed\",\r\n            \"not_given\": false,\r\n            \"vaccine_code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/vaccine_codes\",\r\n                        \"code\": \"SarsCov2_nRVv\"\r\n                    }\r\n                ]\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"date\": \"2024-09-02T09:46:37.694Z\",\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Текст 123\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"manufacturer\": \"VacinePro Manufacturer\",\r\n            \"lot_number\": \"041A21A\",\r\n            \"expiration_date\": \"2025-10-02T09:46:37.694Z\",\r\n            \"site\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/immunization_body_sites\",\r\n                        \"code\": \"outer_surface_of_(left_shoulder)\"\r\n                    }\r\n                ]\r\n            },\r\n            \"route\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/vaccination_routes\",\r\n                        \"code\": \"intramuscularly\"\r\n                    }\r\n                ]\r\n            },\r\n            \"dose_quantity\": {\r\n                \"value\": 5,\r\n                \"unit\": \"MG\",\r\n                \"system\": \"eHealth/immunization_dosage_units\",\r\n                \"code\": \"MG\"\r\n            },\r\n            \"explanation\": {\r\n                \"reasons\": [\r\n                    {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/reason_explanations\",\r\n                                \"code\": \"immunization_by_epidemic_indicators\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Щеплення, які проводяться на ендемічних і ензоотичних територіях та за епідемічними показаннями\"\r\n                    }\r\n                ]\r\n            },\r\n            \"vaccination_protocols\": [\r\n                {\r\n                    \"dose_sequence\": 1,\r\n                    \"description\": \"Опис 123\",\r\n                    \"authority\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/vaccination_authorities\",\r\n                                \"code\": \"MoH\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"series\": \"Vaccination Series 1\",\r\n                    \"series_doses\": 1,\r\n                    \"target_diseases\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/vaccination_target_diseases\",\r\n                                    \"code\": \"COVID_19\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/create-encounter-signed-content",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"create-encounter-signed-content"
											]
										}
									},
									"response": []
								},
								{
									"name": "Dummy discharge encounter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');\r",
													"const encounterId = uuid.v4();\r",
													"const visitId = uuid.v4();\r",
													"pm.globals.set(\"encounter_id\", encounterId);\r",
													"pm.globals.set(\"visit_id\", visitId);"
												],
												"type": "text/javascript",
												"packages": {},
												"id": "8932271b-d0bf-4bd6-903d-e06e1480ef88"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"const resData = pm.response.json();\r",
													"console.log('create encounter sign content', resData)\r",
													"\r",
													"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
													"    pm.expect(pm.response.code).to.eql(200);\r",
													"    pm.expect(resData).to.have.property('signed_content');\r",
													"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"// if (resData.signed_content) {\r",
													"//     pm.globals.set('encounter_signed_content', resData.signed_content)\r",
													"// }\r",
													""
												],
												"type": "text/javascript",
												"packages": {},
												"id": "4a56a706-0eea-42e4-9724-12f9547ad43a"
											}
										}
									],
									"id": "15381251-4485bf42-e4f9-49a6-a52a-cc16f2924821",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2024-09-22T09:00:16Z\",\r\n            \"end\": \"2024-09-22T10:45:16Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"action_references\": [\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"d8a7e6e5-8d18-453e-9273-f8218f2d81a6\"\r\n                }\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_division_id}}\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"INPATIENT\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"discharge\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"S17\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\",\r\n        \"hospitalization\": {\r\n            \"admit_source\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/encounter_admit_source\",\r\n                        \"code\": \"transfer\"\r\n                    }\r\n                ]\r\n            },\r\n            \"re_admission\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/encounter_re_admission\",\r\n                        \"code\": \"no\"\r\n                    }\r\n                ]\r\n            },\r\n            \"destination\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_legal_entity}}\"\r\n                }\r\n            },\r\n            \"discharge_disposition\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/encounter_discharge_disposition\",\r\n                        \"code\": \"transfer_general\"\r\n                    }\r\n                ]\r\n            },\r\n            \"discharge_department\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/encounter_discharge_department\",\r\n                        \"code\": \"78\"\r\n                    }\r\n                ]\r\n            },\r\n            \"pre_admission_identifier\": \"12345\"\r\n        }\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                        \"code\": \"E10.02\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/body_sites\",\r\n                            \"code\": \"pelvis\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2024-02-01T09:46:37.694Z\",\r\n            \"asserted_date\": \"2024-03-03T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/condition_stages\",\r\n                            \"code\": \"default_condition_stage\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/create-encounter-signed-content",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"create-encounter-signed-content"
											]
										}
									},
									"response": []
								},
								{
									"name": "Dummy encounter with condition procedure diagnostic-report immunization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cab1e888-09db-4fb2-8e8a-47681b51ab53",
												"exec": [
													"const resData = pm.response.json();\r",
													"console.log('create encounter sign content', resData)\r",
													"\r",
													"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
													"    pm.expect(pm.response.code).to.eql(200);\r",
													"    pm.expect(resData).to.have.property('signed_content');\r",
													"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b33a3691-7b52-4fe4-af9f-c5feb11b8067",
												"exec": [
													"const uuid = require('uuid');\r",
													"const encounterId = uuid.v4();\r",
													"const visitId = uuid.v4();\r",
													"\r",
													"pm.globals.set(\"encounter_id\", encounterId);\r",
													"pm.globals.set(\"visit_id\", visitId);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-8bc80117-da3a-437a-97fd-ad465d0b0102",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2025-02-10T10:45:16.000Z\",\r\n            \"end\": \"2025-02-10T10:45:16.000Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"action_references\": [\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"7be27ed7-db47-4ef5-95da-74a60a8ffc8a\"\r\n                }\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"f40ca1ea-e169-4db5-92ec-91d6269f3795\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"AMB\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"S17\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                        \"code\": \"E10.9\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"provisional\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/body_sites\",\r\n                            \"code\": \"pelvis\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2023-02-01T09:46:37.694Z\",\r\n            \"asserted_date\": \"2023-03-03T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/condition_stages\",\r\n                            \"code\": \"default_condition_stage\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            \"evidences\": [\r\n                {\r\n                    \"codes\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/ICPC2/reasons\",\r\n                                    \"code\": \"T90\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"diagnostic_reports\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"status\": \"final\",\r\n            \"code\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"30c22c24-c8ef-410a-8c23-984da411077a\"\r\n                }\r\n            },\r\n            \"encounter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"issued\": \"2025-02-02T11:40:16.000Z\",\r\n            \"conclusion\": \"At risk of osteoporotic fracture\",\r\n            \"recorded_by\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            },\r\n            \"division\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"division\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_division_id}}\"\r\n                }\r\n            },\r\n            \"results_interpreter\": {\r\n                \"reference\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            },\r\n            \"managing_organization\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_legal_entity}}\"\r\n                }\r\n            },\r\n            \"category\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnostic_report_categories\",\r\n                            \"code\": \"diagnostic_procedure\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"procedures\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"status\": \"completed\",\r\n            \"code\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"3e2326e3-d4dd-4d36-80f0-317a6b680080\"\r\n                }\r\n            },\r\n            \"encounter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"performed_date_time\": \"2024-09-02T10:45:16.000Z\",\r\n            \"recorded_by\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Галина Олександрівна\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"division\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"division\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_division_id}}\"\r\n                }\r\n            },\r\n            \"managing_organization\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_legal_entity}}\"\r\n                }\r\n            },\r\n            \"note\": \"Додаткова інформація по процедурі\",\r\n            \"category\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/procedure_categories\",\r\n                        \"code\": \"surgical_procedure\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"immunizations\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"status\": \"completed\",\r\n            \"not_given\": false,\r\n            \"vaccine_code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/vaccine_codes\",\r\n                        \"code\": \"SarsCov2_nRVv\"\r\n                    }\r\n                ]\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"date\": \"2024-09-02T09:46:37.694Z\",\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Текст 123\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"manufacturer\": \"VacinePro Manufacturer\",\r\n            \"lot_number\": \"041A21A\",\r\n            \"expiration_date\": \"2025-10-02T09:46:37.694Z\",\r\n            \"site\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/immunization_body_sites\",\r\n                        \"code\": \"outer_surface_of_(left_shoulder)\"\r\n                    }\r\n                ]\r\n            },\r\n            \"route\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/vaccination_routes\",\r\n                        \"code\": \"intramuscularly\"\r\n                    }\r\n                ]\r\n            },\r\n            \"dose_quantity\": {\r\n                \"value\": 5,\r\n                \"unit\": \"MG\",\r\n                \"system\": \"eHealth/immunization_dosage_units\",\r\n                \"code\": \"MG\"\r\n            },\r\n            \"explanation\": {\r\n                \"reasons\": [\r\n                    {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/reason_explanations\",\r\n                                \"code\": \"immunization_by_epidemic_indicators\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Щеплення, які проводяться на ендемічних і ензоотичних територіях та за епідемічними показаннями\"\r\n                    }\r\n                ]\r\n            },\r\n            \"vaccination_protocols\": [\r\n                {\r\n                    \"dose_sequence\": 1,\r\n                    \"description\": \"Опис 123\",\r\n                    \"authority\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/vaccination_authorities\",\r\n                                \"code\": \"MoH\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"series\": \"Vaccination Series 1\",\r\n                    \"series_doses\": 1,\r\n                    \"target_diseases\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/vaccination_target_diseases\",\r\n                                    \"code\": \"COVID_19\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/create-encounter-signed-content",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"create-encounter-signed-content"
											]
										}
									},
									"response": []
								},
								{
									"name": "Dummy PHC encounter",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6ec24cc7-9000-40db-a82c-470483a92913",
												"exec": [
													"const uuid = require('uuid');\r",
													"const encounterId = uuid.v4();\r",
													"const visitId = uuid.v4();\r",
													"const observationId2 = uuid.v4();\r",
													"\r",
													"// -------------------------------------------------\r",
													"pm.globals.set(\"encounter_id\", encounterId);\r",
													"pm.globals.set(\"visit_id\", visitId);\r",
													"pm.globals.set(\"observation_id_2\", observationId2);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f8047aa7-3244-46b7-9ee5-d81877600896",
												"exec": [
													"const resData = pm.response.json();\r",
													"console.log('create encounter sign content', resData)\r",
													"\r",
													"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
													"    pm.expect(pm.response.code).to.eql(200);\r",
													"    pm.expect(resData).to.have.property('signed_content');\r",
													"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-67c136bc-726a-4154-b91e-9824eee1015e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"{{encounter_id}}\",\r\n        \"status\": \"finished\",\r\n        \"period\": {\r\n            \"start\": \"2025-07-15T10:45:16.000Z\",\r\n            \"end\": \"2025-07-15T10:45:16.000Z\"\r\n        },\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{visit_id}}\"\r\n            }\r\n        },\r\n        \"actions\": [\r\n          {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/actions\",\r\n                        \"code\": \"N47\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobEpisodeID}}\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"PHC\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"participant\": [\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"0e5a7c19-be11-444b-be3d-93186fd3f757\"\r\n                }\r\n            }\r\n        ],\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"S17\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{encounter_id}}\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/condition_codes\",\r\n                        \"code\": \"S14\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/body_sites\",\r\n                            \"code\": \"pelvis\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2024-02-01T09:46:37.694Z\",\r\n            \"asserted_date\": \"2024-03-03T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/condition_stages\",\r\n                            \"code\": \"default_condition_stage\"\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            \"evidences\": [\r\n                {\r\n                    \"codes\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/ICPC2/reasons\",\r\n                                    \"code\": \"T90\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"observations\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"status\": \"valid\",\r\n            \"categories\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/ICF/observation_categories\",\r\n                            \"code\": \"functions\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICF/classifiers\",\r\n                        \"code\": \"b1721\"\r\n                    }\r\n                ]\r\n            },\r\n            \"components\": [\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"extent_or_magnitude_of_impairment\",\r\n                                \"system\": \"eHealth/ICF/qualifiers\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"interpretation\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/observation_interpretations\",\r\n                                \"code\": \"normal\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"reference_ranges\": [],\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"1\",\r\n                                \"system\": \"eHealth/ICF/qualifiers/extent_or_magnitude_of_impairment\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    }\r\n                }\r\n            ],\r\n            \"effective_date_time\": \"2024-09-02T10:45:16.000Z\",\r\n            \"issued\": \"2024-09-02T10:45:16.000Z\",\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Галина Олександрівна\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"comment\": \"Some comment\",\r\n            \"value_quantity\": {\r\n                \"value\": 0,\r\n                \"comparator\": \">\",\r\n                \"unit\": \"kg\",\r\n                \"system\": \"eHealth/ucum/units\",\r\n                \"code\": \"kg\"\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"{{observation_id_2}}\",\r\n            \"status\": \"valid\",\r\n            \"categories\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/observation_categories\",\r\n                            \"code\": \"vital-signs\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/LOINC/observation_codes\",\r\n                        \"code\": \"2069-3\"\r\n                    }\r\n                ]\r\n            },\r\n            \"components\": [\r\n                {\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"extent_or_magnitude_of_impairment\",\r\n                                \"system\": \"eHealth/ICF/qualifiers\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"interpretation\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/observation_interpretations\",\r\n                                \"code\": \"normal\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"reference_ranges\": [],\r\n                    \"value_codeable_concept\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"1\",\r\n                                \"system\": \"eHealth/ICF/qualifiers/extent_or_magnitude_of_impairment\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    }\r\n                }\r\n            ],\r\n            \"effective_date_time\": \"2025-06-10T10:45:16.000Z\",\r\n            \"issued\": \"2025-06-15T10:45:16.000Z\",\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Галина Олександрівна\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"comment\": \"Some comment\",\r\n            \"value_quantity\": {\r\n                \"value\": 0,\r\n                \"comparator\": \">\",\r\n                \"unit\": \"kg\",\r\n                \"system\": \"eHealth/ucum/units\",\r\n                \"code\": \"kg\"\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"immunizations\": [\r\n        {\r\n            \"id\": \"{{encounter_id}}\",\r\n            \"status\": \"completed\",\r\n            \"not_given\": false,\r\n            \"vaccine_code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/vaccine_codes\",\r\n                        \"code\": \"SarsCov2_nRVv\"\r\n                    }\r\n                ]\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{encounter_id}}\"\r\n                }\r\n            },\r\n            \"date\": \"2024-09-02T09:46:37.694Z\",\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Текст 123\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"manufacturer\": \"VacinePro Manufacturer\",\r\n            \"lot_number\": \"041A21A\",\r\n            \"expiration_date\": \"2025-10-02T09:46:37.694Z\",\r\n            \"site\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/immunization_body_sites\",\r\n                        \"code\": \"outer_surface_of_(left_shoulder)\"\r\n                    }\r\n                ]\r\n            },\r\n            \"route\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/vaccination_routes\",\r\n                        \"code\": \"intramuscularly\"\r\n                    }\r\n                ]\r\n            },\r\n            \"dose_quantity\": {\r\n                \"value\": 5,\r\n                \"unit\": \"MG\",\r\n                \"system\": \"eHealth/immunization_dosage_units\",\r\n                \"code\": \"MG\"\r\n            },\r\n            \"explanation\": {\r\n                \"reasons\": [\r\n                    {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/reason_explanations\",\r\n                                \"code\": \"immunization_by_epidemic_indicators\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Щеплення, які проводяться на ендемічних і ензоотичних територіях та за епідемічними показаннями\"\r\n                    }\r\n                ]\r\n            },\r\n            \"vaccination_protocols\": [\r\n                {\r\n                    \"dose_sequence\": 1,\r\n                    \"description\": \"Опис 123\",\r\n                    \"authority\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/vaccination_authorities\",\r\n                                \"code\": \"MoH\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"series\": \"Vaccination Series 1\",\r\n                    \"series_doses\": 1,\r\n                    \"target_diseases\": [\r\n                        {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/vaccination_target_diseases\",\r\n                                    \"code\": \"COVID_19\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:3000/create-encounter-signed-content",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "3000",
											"path": [
												"create-encounter-signed-content"
											]
										}
									},
									"response": []
								},
								{
									"name": "Dummy encounter with procedure",
									"id": "15381251-3a588562-ef9d-4ab2-b924-f5910701c2c1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"encounter\": {\r\n        \"id\": \"cfb70623-00a4-41e2-9f08-e158072352b4\",\r\n        \"status\": \"finished\",\r\n        \"date\": \"2023-12-07T10:45:16.000Z\",\r\n        \"visit\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"visit\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"3ae9ad14-0376-4f6f-bb0c-a1d5b2279bd7\"\r\n            }\r\n        },\r\n        \"action_references\": [\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"48d193e6-27b4-41b4-99ed-87441cd3362f\"\r\n                }\r\n            }\r\n        ],\r\n        \"division\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"f40ca1ea-e169-4db5-92ec-91d6269f3795\"\r\n            }\r\n        },\r\n        \"episode\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"episode\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"d186ed25-aa1c-4ae0-99ae-d475ca10c6e1\"\r\n            }\r\n        },\r\n        \"class\": {\r\n            \"system\": \"eHealth/encounter_classes\",\r\n            \"code\": \"AMB\"\r\n        },\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_types\",\r\n                    \"code\": \"service_delivery_location\"\r\n                }\r\n            ]\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/encounter_priority\",\r\n                    \"code\": \"urgent\"\r\n                }\r\n            ]\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"5746e964-80fb-43d8-b388-ced55772d2f9\"\r\n            }\r\n        },\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICPC2/reasons\",\r\n                        \"code\": \"K57\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"cfb70623-00a4-41e2-9f08-e158072352b4\"\r\n                    }\r\n                },\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/diagnosis_roles\",\r\n                            \"code\": \"primary\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"rank\": 1\r\n            }\r\n        ],\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\"\r\n    },\r\n    \"conditions\": [\r\n        {\r\n            \"id\": \"cfb70623-00a4-41e2-9f08-e158072352b4\",\r\n            \"primary_source\": true,\r\n            \"asserter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Якийсь текст\"\r\n                    },\r\n                    \"value\": \"5746e964-80fb-43d8-b388-ced55772d2f9\"\r\n                }\r\n            },\r\n            \"context\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"cfb70623-00a4-41e2-9f08-e158072352b4\"\r\n                }\r\n            },\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                        \"code\": \"E10.02\"\r\n                    }\r\n                ]\r\n            },\r\n            \"clinical_status\": \"active\",\r\n            \"verification_status\": \"confirmed\",\r\n            \"severity\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/condition_severities\",\r\n                        \"code\": \"moderate\"\r\n                    }\r\n                ]\r\n            },\r\n            \"body_sites\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/body_sites\",\r\n                            \"code\": \"pelvis\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"onset_date\": \"2023-04-20T09:46:37.694Z\",\r\n            \"asserted_date\": \"2023-04-27T09:46:37.694Z\",\r\n            \"stage\": {\r\n                \"summary\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/condition_stages\",\r\n                            \"code\": \"default_condition_stage\"\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"procedures\": [\r\n        {\r\n            \"id\": \"1013f2cd-cd19-46c4-922c-d36fd11e84a6\",\r\n            \"status\": \"completed\",\r\n            \"code\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"3e2326e3-d4dd-4d36-80f0-317a6b680080\"\r\n                }\r\n            },\r\n            \"encounter\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"encounter\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"cfb70623-00a4-41e2-9f08-e158072352b4\"\r\n                }\r\n            },\r\n            \"performed_date_time\": \"2023-12-08T10:45:16.000Z\",\r\n            \"recorded_by\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"5746e964-80fb-43d8-b388-ced55772d2f9\"\r\n                }\r\n            },\r\n            \"primary_source\": true,\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"Галина Олександрівна\"\r\n                    },\r\n                    \"value\": \"5746e964-80fb-43d8-b388-ced55772d2f9\"\r\n                }\r\n            },\r\n            \"division\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"division\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"f40ca1ea-e169-4db5-92ec-91d6269f3795\"\r\n                }\r\n            },\r\n            \"managing_organization\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"legal_entity\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"0dccb76f-3ed0-40f4-8f73-e95e2f91ea29\"\r\n                }\r\n            },\r\n            \"note\": \"Додаткова інформація по процедурі\",\r\n            \"category\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/procedure_categories\",\r\n                        \"code\": \"surgical_procedure\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": ""
										}
									},
									"response": []
								}
							],
							"id": "15381251-679d593a-f029-4ae6-aa17-aa9390df1475"
						},
						{
							"name": "Submit encounter datapackage",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "25234da7-aaba-4070-a8bb-856be5bce6d7",
										"exec": [
											"// Helper function: Capitalize and format path segment to Title Case\r",
											"function formatEntityTitle(pathSegment) {\r",
											"    if (!pathSegment) return 'Job';\r",
											"    return pathSegment\r",
											"        .split('_')\r",
											"        .map(part => part.charAt(0).toUpperCase() + part.slice(1))\r",
											"        .join(' ');\r",
											"}\r",
											"\r",
											"// Get dynamic entity name from URL path (e.g., 'encounters', 'device_dispenses')\r",
											"const resourceType = pm.request.url.path[3]; // Dynamically detects resource\r",
											"const resourceLabel = formatEntityTitle(resourceType);\r",
											"\r",
											"// 🔧 Display JSON in Visualizer\r",
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Parse initial response\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"console.log(pm.request.url.path[3])\r",
											"\r",
											"// ⛔ Show error if initial response has it\r",
											"if (resData && resData.error) {\r",
											"    displayResponse(`${resourceLabel} Response Error Details`, resData.error);\r",
											"}\r",
											"\r",
											"// Extract Job ID from href\r",
											"const href = resData.data.links[0].href;\r",
											"const jobId = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted jobId:\", jobId);\r",
											"\r",
											"// Init retry counter\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// 🔄 Check job status recursively\r",
											"function checkJobStatus(jobId) {\r",
											"    const url = `${pm.globals.get('host')}/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3;\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': `Bearer ${pm.environment.get('access_token')}`,\r",
											"            'api-key': `${pm.environment.get('mis_client_secret')}`,\r",
											"            'X-Custom-PSK': `${pm.globals.get('x-custom-psk')}`\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"        pm.test(`${resourceLabel} job check response is 200 or 303`, function () {\r",
											"            pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse(`${resourceLabel} Job Request Error`, { error: err.message });\r",
											"            return;\r",
											"        }\r",
											"\r",
											"        const responseBody = res.json();\r",
											"        const jobStatus = responseBody.data.status;\r",
											"        console.log(`${resourceLabel} Job Status:`, jobStatus);\r",
											"\r",
											"        if (jobStatus === 'processed') {\r",
											"            // ✅ Success\r",
											"            pm.test(`${resourceLabel} Job Processed (303 expected)`, function () {\r",
											"                pm.expect(res.code).to.eql(303);\r",
											"            });\r",
											"\r",
											"          // Set global vars for result links (only the ID part)\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    const parts = link.href.split('/');\r",
											"                    const id = parts[parts.length - 1]; // extract only the last part (ID)\r",
											"                    acc[link.entity] = acc[link.entity] || [];\r",
											"                    acc[link.entity].push(id);\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                Object.entries(links).forEach(([entity, ids]) => {\r",
											"                    ids.forEach((id, index) => {\r",
											"                        const capitalizedEntity = entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '');\r",
											"                        const globalName = ids.length === 1\r",
											"                            ? `job${capitalizedEntity}ID`\r",
											"                            : `job${capitalizedEntity}ID_${index + 1}`;\r",
											"                        pm.globals.set(globalName, id);\r",
											"                    });\r",
											"                });\r",
											"\r",
											"            displayResponse(`${resourceLabel} Job Response Details`, responseBody.data);\r",
											"        } else {\r",
											"            // 🔁 Retry if not yet processed\r",
											"            let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"            if (retryCount < maxRetries) {\r",
											"                retryCount++;\r",
											"                pm.environment.set('retryCount', retryCount);\r",
											"                console.log(`Retrying ${resourceLabel} job... Attempt ${retryCount}`);\r",
											"                setTimeout(() => checkJobStatus(jobId), 1000);\r",
											"\r",
											"                displayResponse(`${resourceLabel} Job Status Pending`, responseBody.data);\r",
											"            } else {\r",
											"                console.warn(`❌ Max retries reached for ${resourceLabel} job.`);\r",
											"                const finalTitle = responseBody.data.error\r",
											"                    ? `${resourceLabel} Job Error Details`\r",
											"                    : `Final ${resourceLabel} Job Status Check`;\r",
											"                displayResponse(finalTitle, responseBody.data);\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// ▶️ Trigger job check\r",
											"checkJobStatus(jobId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6fe1623-c08c-4dcb-a7f7-2b104cddf028",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-ce1e1d8f-da1e-46c7-9f93-17a5e6f7ecdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visit\": {\n    \"id\": \"{{visit_id}}\",\n    \"period\": {\n      \"start\": \"2024-09-03T10:42:16.000Z\",\n      \"end\": \"2024-09-03T11:46:17.000Z\"\n    }\n  },\n  \"signed_data\": \"{{encounter_signed_content}}\"\n  \n}\n"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/encounter_package",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"encounter_package"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dummy cancel encounter",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"const encounterId = uuid.v4();\r",
											"const visitId = uuid.v4();\r",
											"pm.globals.set(\"encounter_id\", encounterId);\r",
											"pm.globals.set(\"visit_id\", visitId);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "0dbfa391-519d-4aaa-b778-67111cb76218"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resData = pm.response.json();\r",
											"console.log('create encounter sign content', resData)\r",
											"\r",
											"pm.test(`Encounter content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('encounter_signed_content', resData.signed_content);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// if (resData.signed_content) {\r",
											"//     pm.globals.set('encounter_signed_content', resData.signed_content)\r",
											"// }\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "c9f570e2-c96b-442e-9665-085179a637ac"
									}
								}
							],
							"id": "15381251-cfe8d87d-7182-4992-8d38-5fe529ed75f6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"encounter\": {\r\n        \"action_references\": [],\r\n        \"actions\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"T47\",\r\n                        \"system\": \"eHealth/ICPC2/actions\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"T50\",\r\n                        \"system\": \"eHealth/ICPC2/actions\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            }\r\n        ],\r\n        \"cancellation_reason\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/cancellation_reasons\",\r\n                    \"code\": \"typo\"\r\n                }\r\n            ]\r\n        },\r\n        \"class\": {\r\n            \"code\": \"PHC\",\r\n            \"system\": \"eHealth/encounter_classes\"\r\n        },\r\n        \"period\": {\r\n            \"end\": \"2024-09-03T10:45:16Z\",\r\n            \"start\": \"2024-09-03T10:45:16Z\"\r\n        },\r\n        \"diagnoses\": [\r\n            {\r\n                \"condition\": {\r\n                    \"display_value\": null,\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"code\": \"condition\",\r\n                                    \"system\": \"eHealth/resources\"\r\n                                }\r\n                            ],\r\n                            \"text\": null\r\n                        },\r\n                        \"value\": \"0ea83f29-b52d-4f71-b709-274b98bf7ed8\"\r\n                    }\r\n                },\r\n                \"rank\": 1,\r\n                \"role\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"primary\",\r\n                            \"system\": \"eHealth/diagnosis_roles\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                }\r\n            }\r\n        ],\r\n        \"division\": null,\r\n        \"episode\": {\r\n            \"display_value\": null,\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"episode\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"db89594e-39fd-48c8-93f0-7d1fddacd840\"\r\n            }\r\n        },\r\n        \"explanatory_letter\": \"Я, Шевченко Наталія Олександрівна, 20.07.2018 здійснила механічну помилку при внесенні обстеження до системи.\",\r\n        \"hospitalization\": {\r\n            \"admit_source\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"transfer\",\r\n                        \"system\": \"eHealth/encounter_admit_source\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            \"destination\": {\r\n                \"display_value\": null,\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"code\": \"legal_entity\",\r\n                                \"system\": \"eHealth/resources\"\r\n                            }\r\n                        ],\r\n                        \"text\": null\r\n                    },\r\n                    \"value\": \"26fc5dfe-1bea-440f-a290-48df6f0546ab\"\r\n                }\r\n            },\r\n            \"discharge_department\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"78\",\r\n                        \"system\": \"eHealth/encounter_discharge_department\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            \"discharge_disposition\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"transfer_general\",\r\n                        \"system\": \"eHealth/encounter_discharge_disposition\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            \"pre_admission_identifier\": \"12345\",\r\n            \"re_admission\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"no\",\r\n                        \"system\": \"eHealth/encounter_re_admission\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            }\r\n        },\r\n        \"id\": \"0ea83f29-b52d-4f71-b709-274b98bf7ed8\",\r\n        \"origin_episode\": null,\r\n        \"paper_referral\": null,\r\n        \"performer\": {\r\n            \"display_value\": \"Сергій Вікторович Куриленко\",\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"employee\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"37cdecbf-fbb2-43c6-a231-19a333668003\"\r\n            }\r\n        },\r\n        \"priority\": {\r\n            \"coding\": [\r\n                {\r\n                    \"code\": \"urgent\",\r\n                    \"system\": \"eHealth/encounter_priority\"\r\n                }\r\n            ],\r\n            \"text\": null\r\n        },\r\n        \"prescriptions\": \"Дієта №3, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня\",\r\n        \"reasons\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"S17\",\r\n                        \"system\": \"eHealth/ICPC2/reasons\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            }\r\n        ],\r\n        \"status\": \"entered_in_error\",\r\n        \"supporting_info\": [],\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"code\": \"home\",\r\n                    \"system\": \"eHealth/encounter_types\"\r\n                }\r\n            ],\r\n            \"text\": null\r\n        },\r\n        \"visit\": {\r\n            \"display_value\": null,\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"visit\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"ca48ba8f-8597-424b-8f77-250010702012\"\r\n            }\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-encounter-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-encounter-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Encounter Package",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "aa3d5421-8e9e-4475-a927-45e4e37a9a02",
										"exec": [
											"// const personFromEpisode = pm.globals.get('patient_id_from_episode'); //або підставте id потрібного пацієнта!!!!\r",
											"// const xCustomPsk = pm.globals.get('x-custom-psk');\r",
											"// const host = pm.globals.get('host');\r",
											"// const accessToken = pm.environment.get('access_token');\r",
											"\r",
											"// // Змінні для ідентифікаторів ЕМЗ\r",
											"// const ENCOUNTER_ID = \"4aa01cc2-b7c8-4ad1-9232-e6551a2cf797\";\r",
											"// const CONDITION_ID = \"4aa01cc2-b7c8-4ad1-9232-e6551a2cf797\";\r",
											"// const OBSERVATION_ID = \"\";\r",
											"// const IMMUNIZATION_ID = \"\";\r",
											"\r",
											"// function sendRequest(url, callback) {\r",
											"//     pm.sendRequest({\r",
											"//         url: url,\r",
											"//         method: \"GET\",\r",
											"//         header: {\r",
											"//             \"Content-Type\": \"application/json\",\r",
											"//             \"api-key\": \"30276e63617461a185ec\",\r",
											"//             \"Authorization\": `Bearer ${accessToken}`,\r",
											"//             \"X-Custom-PSK\": `${xCustomPsk}`\r",
											"//         }\r",
											"//     }, callback);\r",
											"// }\r",
											"\r",
											"\r",
											"\r",
											"// function cleanEncounterData(data) {\r",
											"//     // Видаляємо поле `code` з кожного об'єкта в `diagnoses`\r",
											"//     if (Array.isArray(data.diagnoses)) {\r",
											"//         data.diagnoses = data.diagnoses.map(({ code, ...rest }) => rest);\r",
											"//     }\r",
											"//     // Видаляємо `hospitalization`\r",
											"//     delete data?.hospitalization;\r",
											"//     // Видаляємо `incoming_referral`\r",
											"//     delete data?.incoming_referral;\r",
											"//     // Видаляємо `inserted_at`\r",
											"//     delete data?.inserted_at;\r",
											"//     // Видаляємо `updated_at`\r",
											"//     delete data?.updated_at;\r",
											"\r",
											"//     // Add `status_reason` field\r",
											"//     data.cancellation_reason = {\r",
											"//         \"coding\": [\r",
											"//             {\r",
											"//                 \"system\": \"eHealth/cancellation_reasons\",\r",
											"//                 \"code\": \"typo\"\r",
											"//             }\r",
											"//         ]\r",
											"//     };\r",
											"\r",
											"//     // Add `explanatory_letter` field\r",
											"//     data.explanatory_letter = \"Я, Шевченко Наталія Олександрівна, 20.07.2018 здійснила механічну помилку при внесенні обстеження до системи.\";\r",
											"\r",
											"//     data.status = \"entered_in_error\";\r",
											"\r",
											"//     return data;\r",
											"// }\r",
											"\r",
											"// function cleanConditionData(condition) {\r",
											"//     if (Array.isArray(condition.data)) {\r",
											"//         condition.data = condition.data.map(({ updated_at, inserted_at, ...rest }) => ({\r",
											"//             ...rest,\r",
											"//             verification_status: \"entered_in_error\"\r",
											"//         }));\r",
											"//     } else {\r",
											"//         const { updated_at, inserted_at, ...cleanedCondition } = condition.data;\r",
											"//         condition.data = { ...cleanedCondition, verification_status: \"entered_in_error\" };\r",
											"//     }\r",
											"//     return condition;\r",
											"// }\r",
											"\r",
											"// function cleanObservationData(observation) {\r",
											"\r",
											"//     if (observation && observation.data) {\r",
											"//         // Видаляємо `inserted_at`, `updated_at` та `interpretation`\r",
											"//         const { inserted_at, updated_at, interpretation, ...cleanedObservation } = observation.data;\r",
											"\r",
											"//         // Додаємо статус\r",
											"//         cleanedObservation.status = \"entered_in_error\";\r",
											"\r",
											"//         return { data: cleanedObservation };\r",
											"//     }\r",
											"//     return null;\r",
											"// }\r",
											"\r",
											"// function cleanImmunizationData(immunization) {\r",
											"//     if (immunization && immunization.data) {\r",
											"//         // Видаляємо `inserted_at`, `updated_at` та `reactions`\r",
											"//         const { inserted_at, updated_at, reactions, ...cleanedImmunization } = immunization.data;\r",
											"\r",
											"//         // Додаємо статус\r",
											"//         cleanedImmunization.status = \"entered_in_error\";\r",
											"\r",
											"//         return { data: cleanedImmunization };\r",
											"//     }\r",
											"//     return null;\r",
											"// }\r",
											"\r",
											"\r",
											"// function displayResponse(title, data) {\r",
											"//     console.log(title, data);\r",
											"//     const html = `\r",
											"//         <h1>${title}</h1>\r",
											"//         <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"//     pm.visualizer.set(html);\r",
											"// }\r",
											"\r",
											"\r",
											"\r",
											"// // Отримуємо дані з глобальних змінних або ініціалізуємо порожнім об'єктом\r",
											"\r",
											"// let encounterData = null;\r",
											"// let conditionData = null;\r",
											"// let observationData = null;\r",
											"// let immunizationData = null;\r",
											"\r",
											"// function tryDisplayCombinedData() {\r",
											"//     const displayValue = {\r",
											"//         encounter: encounterData,\r",
											"//         conditions: Array.isArray(conditionData?.data) ? conditionData.data : [conditionData?.data]\r",
											"//     };\r",
											"\r",
											"//     if (observationData) {\r",
											"//         displayValue.observations = Array.isArray(observationData?.data) ? observationData.data : [observationData?.data];\r",
											"//     }\r",
											"\r",
											"//     if (immunizationData) {\r",
											"//         displayValue.immunizations = Array.isArray(immunizationData?.data) ? immunizationData.data : [immunizationData?.data];\r",
											"//     }\r",
											"\r",
											"//     pm.globals.set(\"Display_Value\", JSON.stringify(displayValue));\r",
											"//     displayResponse('Combined Data', displayValue);\r",
											"// }\r",
											"\r",
											"// // Отримання Encounter\r",
											"// sendRequest(`${host}/api/patients/${personFromEpisode}/encounters/${ENCOUNTER_ID}`, function (err, res) {\r",
											"//     if (err) {\r",
											"//         displayResponse('Error get Encounter', err);\r",
											"//         console.error(\"Error get Encounter:\", err);\r",
											"//         return;\r",
											"//     }\r",
											"\r",
											"//     try {\r",
											"//         encounterData = cleanEncounterData(res.json().data);\r",
											"//         tryDisplayCombinedData();\r",
											"//     } catch (parseError) {\r",
											"//         console.error(\"Response parsing error (Encounter). Raw body:\", res.text());\r",
											"//     }\r",
											"// });\r",
											"\r",
											"// // Отримання Condition\r",
											"// sendRequest(`${host}/api/patients/${personFromEpisode}/conditions/${CONDITION_ID}`, function (condErr, condRes) {\r",
											"//     if (condErr) {\r",
											"//         displayResponse('Error get Condition', condErr);\r",
											"//         console.error(\"Request Error:\", condErr);\r",
											"//         return;\r",
											"//     }\r",
											"\r",
											"//     try {\r",
											"//         conditionData = cleanConditionData(condRes.json());\r",
											"//         tryDisplayCombinedData();\r",
											"//     } catch (parseError) {\r",
											"//         console.error(\"Response parsing error (Condition). Raw body:\", condRes.text());\r",
											"//     }\r",
											"// });\r",
											"\r",
											"// // Отримання Observation\r",
											"// if (OBSERVATION_ID) {\r",
											"// sendRequest(`${host}/api/patients/${personFromEpisode}/observations/${OBSERVATION_ID}`, function (obsErr, obsRes) {\r",
											"\r",
											"//      // Handle 403 Forbidden status\r",
											"//     if (obsRes.code === 403) {\r",
											"//         console.error('Observation request! Access forbidden. Please check your API key or access token.', obsRes);\r",
											"//         return;\r",
											"//     }\r",
											"\r",
											"//     // If no valid data or another error occurs\r",
											"//     if (obsErr || obsRes.code !== 200 ) {\r",
											"//         console.error('No valid observation data or error occurred.', obsRes);\r",
											"//         tryDisplayCombinedData();\r",
											"//         return;\r",
											"//     }\r",
											"\r",
											"//     try {\r",
											"//         observationData = cleanObservationData(obsRes.json());\r",
											"//         tryDisplayCombinedData();\r",
											"//     } catch (err) {\r",
											"//        console.error(\"Response parsing error (Observation). Raw body:\", obsRes.text());\r",
											"//         console.error(\"Error stack:\", err);\r",
											"//     }\r",
											"// });\r",
											"// }\r",
											"\r",
											"// // Отримання Immunizations (тільки якщо IMMUNIZATION_ID не порожній)\r",
											"// if (IMMUNIZATION_ID) {\r",
											"//     sendRequest(`${host}/api/patients/${personFromEpisode}/immunizations/${IMMUNIZATION_ID}`, function (immErr, immRes) {\r",
											"//         if (immRes.code === 403) {\r",
											"//             console.error('Immunizations request! Access forbidden. Please check your API key or access token.', immRes);\r",
											"//             return;\r",
											"//         }\r",
											"\r",
											"//         if (immErr || immRes.code !== 200) {\r",
											"//             console.error('Immunizations request! No valid immunization data or error occurred.', immRes);\r",
											"//             tryDisplayCombinedData();\r",
											"//             return;\r",
											"//         }\r",
											"\r",
											"//         try {\r",
											"//             immunizationData = cleanImmunizationData(immRes.json());\r",
											"//             tryDisplayCombinedData();\r",
											"//         } catch (parseError) {\r",
											"//             console.error(\"Response parsing error (Immunizations). Raw body:\", immRes.text());\r",
											"//         }\r",
											"//     });\r",
											"// } else {\r",
											"//     console.log(\"Skipping immunization request because IMMUNIZATION_ID is empty.\");\r",
											"// }\r",
											"// ✅ Enhanced Script to Cancel Encounter with All Related Resources\r",
											"\r",
											"\r",
											"\r",
											"const personFromEpisode = pm.globals.get('patient_id_from_episode') || \"\";//або підставте id потрібного пацієнта!!!!\r",
											"const xCustomPsk = pm.globals.get('x-custom-psk');\r",
											"const apiKey = pm.environment.get('mis_client_secret');\r",
											"const host = pm.globals.get('host');\r",
											"const accessToken = pm.environment.get('access_token');\r",
											"\r",
											"const ENCOUNTER_ID = \"0af81b01-0fbb-4829-885a-37058d38b27f\";\r",
											"\r",
											"const RESOURCE_IDS = {\r",
											"    conditions: [\"\"],\r",
											"    observations: [\"\"],\r",
											"    allergy_intolerances: [\"\"],\r",
											"    immunizations: [\"\"],\r",
											"    risk_assessments: [\"\"],\r",
											"    devices: [\"\"],\r",
											"    medication_statements: [\"\"],\r",
											"    medication_administrations: [\"\"],\r",
											"    diagnostic_reports: [\"\"],\r",
											"    procedures: [\"\"],\r",
											"    clinical_impressions: [\"\"],\r",
											"    specimens: [\"\"],\r",
											"    device_dispenses: [\"\"],\r",
											"    device_associations: [\"\"],\r",
											"    detected_issues: [\"\"]\r",
											"};\r",
											"\r",
											"function sendRequest(url, callback) {\r",
											"    pm.sendRequest({\r",
											"        url,\r",
											"        method: \"GET\",\r",
											"        header: {\r",
											"            \"Content-Type\": \"application/json\",\r",
											"            \"api-key\": apiKey,\r",
											"            \"Authorization\": `Bearer ${accessToken}`,\r",
											"            \"X-Custom-PSK\": xCustomPsk\r",
											"        }\r",
											"    }, callback);\r",
											"}\r",
											"\r",
											"function cleanResourceByType(type, resource) {\r",
											"    const { inserted_at, updated_at, ...base } = resource.data;\r",
											"\r",
											"    switch (type) {\r",
											"        case \"conditions\":\r",
											"            // Треба залишити verification_status і оновити його значення\r",
											"            return {\r",
											"                data: {\r",
											"                    ...base,\r",
											"                    verification_status: \"entered_in_error\"\r",
											"                }\r",
											"            };\r",
											"        case \"observations\":\r",
											"            delete base.interpretation; \r",
											"            delete base.verification_status; \r",
											"            return {\r",
											"                data: {\r",
											"                    ...base,\r",
											"                    status: \"entered_in_error\"\r",
											"                }\r",
											"            };\r",
											"        case \"immunizations\":\r",
											"            delete base.reactions;\r",
											"            delete base.verification_status;\r",
											"            return {\r",
											"                data: {\r",
											"                    ...base,\r",
											"                    status: \"entered_in_error\"\r",
											"                }\r",
											"            };\r",
											"        case \"procedures\":\r",
											"            return {\r",
											"                data: {\r",
											"                    ...base,\r",
											"                    status: \"entered_in_error\"\r",
											"                }\r",
											"            };    \r",
											"        default:\r",
											"            return {\r",
											"                data: {\r",
											"                    ...base,\r",
											"                    status: \"entered_in_error\"\r",
											"                }\r",
											"            };\r",
											"    }\r",
											"}\r",
											"\r",
											"function getResourceUrl(resourceTypePlural, id) {\r",
											"    return `${host}/api/patients/${personFromEpisode}/${resourceTypePlural}/${id}`;\r",
											"}\r",
											"\r",
											"function buildDisplayOutput(encounter, relatedResources) {\r",
											"    const output = {\r",
											"        encounter,\r",
											"        ...relatedResources\r",
											"    };\r",
											"    pm.globals.set(\"Encounter_Full_Cancellation_Body\", JSON.stringify(output));\r",
											"    displayResponse(\"🧾 Combined Encounter Cancellation Body\", output);\r",
											"}\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"    <h1>${title}</h1>\r",
											"    <pre>${JSON.stringify(data, null, 2)}</pre>\r",
											"  `;\r",
											"    pm.visualizer.set(html);\r",
											"    console.log(title, data);\r",
											"}\r",
											"\r",
											"let encounterCleaned = null;\r",
											"const cleanedResources = {};\r",
											"let pendingCount = 1;\r",
											"\r",
											"function checkAllDone() {\r",
											"    if (--pendingCount === 0) {\r",
											"        buildDisplayOutput(encounterCleaned, cleanedResources);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Get Encounter\r",
											"sendRequest(getResourceUrl(\"encounters\", ENCOUNTER_ID), (err, res) => {\r",
											"    if (!err && res.code === 200) {\r",
											"        const data = res.json().data;\r",
											"        const { hospitalization, incoming_referral, inserted_at, updated_at, diagnoses, ...rest } = data;\r",
											"        rest.diagnoses = Array.isArray(diagnoses)\r",
											"            ? diagnoses.map(({ code, ...diagRest }) => diagRest)\r",
											"            : [];\r",
											"        encounterCleaned = {\r",
											"            ...rest,\r",
											"            status: \"entered_in_error\",\r",
											"            cancellation_reason: {\r",
											"                coding: [\r",
											"                    {\r",
											"                        system: \"eHealth/cancellation_reasons\",\r",
											"                        code: \"typo\"\r",
											"                    }\r",
											"                ]\r",
											"            },\r",
											"            explanatory_letter: \"Manual entry error occurred.\"\r",
											"        };\r",
											"    } else {\r",
											"        console.error(\"❌ Failed to fetch Encounter\", err);\r",
											"    }\r",
											"    checkAllDone();\r",
											"});\r",
											"\r",
											"// Related Resources\r",
											"Object.entries(RESOURCE_IDS).forEach(([pluralType, ids]) => {\r",
											"    ids.forEach(id => {\r",
											"        if (!id) return;\r",
											"        pendingCount++;\r",
											"        sendRequest(getResourceUrl(pluralType, id), (err, res) => {\r",
											"            if (!err && res.code === 200) {\r",
											"                const cleaned = cleanResourceByType(pluralType, res.json());\r",
											"                cleanedResources[pluralType] = cleanedResources[pluralType] || [];\r",
											"                cleanedResources[pluralType].push(cleaned.data);\r",
											"            } else {\r",
											"                console.warn(`⚠️ Skipped ${pluralType} (${id})`, err);\r",
											"            }\r",
											"            checkAllDone();\r",
											"        });\r",
											"    });\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "96ab5350-7f9c-49d1-bc5e-c2e5a527c729",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-2fa1e8f4-8932-4031-9021-8618d5f78ca2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/encounter_package",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"encounter_package"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get async Job processing details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript",
										"id": "d9092b3d-0022-4dfb-b30b-f4508de728ee"
									}
								}
							],
							"id": "15381251-6a1ec600-0cc1-4ea1-85e9-5c5a6a821a26",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "30276e63617461a185ec"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/jobs/66bde96fda308c0042c9e2d0",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"jobs",
										"66bde96fda308c0042c9e2d0"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-b64c5027-4a32-44c1-866a-f3ac55304965"
				},
				{
					"name": "Encounter",
					"item": [
						{
							"name": "Get encounter by id",
							"id": "15381251-6d03ff16-cc97-4e29-ac89-863252fce365",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/encounters/a612c781-18d4-4eb4-8571-6c28e1306ad1",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"encounters",
										"a612c781-18d4-4eb4-8571-6c28e1306ad1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Encounters by search params",
							"id": "15381251-be4e023e-4c0b-43d9-a029-10b945879cfa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/4e1085a4-fa48-4926-8e55-2e86e49c4934/encounters?managing_organization_id={{user_legal_entity}}",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"4e1085a4-fa48-4926-8e55-2e86e49c4934",
										"encounters"
									],
									"query": [
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										},
										{
											"key": "date_from",
											"value": "2022-10-20",
											"disabled": true
										},
										{
											"key": "date_to",
											"value": "2022-10-30",
											"disabled": true
										},
										{
											"key": "origin_episode_id",
											"value": "455ad865-6d60-49da-922c-132c799bffcc",
											"disabled": true
										},
										{
											"key": "managing_organization_id",
											"value": "{{user_legal_entity}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Encounter context",
							"id": "15381251-d8685523-7f9e-4335-9da9-508a02c8c0ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/8f4924d7-365c-4675-af24-743ed22e37ae/encounters/71e901de-d7ca-433b-826f-0c767ba4a7d8/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"8f4924d7-365c-4675-af24-743ed22e37ae",
										"encounters",
										"71e901de-d7ca-433b-826f-0c767ba4a7d8",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-e0717c5c-bf63-4ce9-b59f-b40cc32bdc9f"
				},
				{
					"name": "Conditions",
					"item": [
						{
							"name": "Get Condition by id",
							"id": "15381251-2aff8b97-f21d-41bf-8d62-96502c7f9762",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/{{patient_id_from_episode}}/conditions/03e68f2f-79e7-43e9-9256-7871da8772af",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"conditions",
										"03e68f2f-79e7-43e9-9256-7871da8772af"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Conditions by search paramss Copy",
							"id": "15381251-d94e91ef-7dca-454b-b757-efe8d27b2d1e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/b0efddfe-cde2-4faf-839e-9f0fc4a68c23/conditions?managing_organization_id={{user_legal_entity}}",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"b0efddfe-cde2-4faf-839e-9f0fc4a68c23",
										"conditions"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										},
										{
											"key": "code",
											"value": "A20",
											"disabled": true
										},
										{
											"key": "encounter_id",
											"value": "f9d7c18f-97c2-466c-8809-59f90b70f560",
											"disabled": true
										},
										{
											"key": "episode_id",
											"value": "3d15bc95-6872-47f1-a84c-0e8ca15c4eb8",
											"disabled": true
										},
										{
											"key": "onset_date_from",
											"value": "2022-10-20",
											"disabled": true
										},
										{
											"key": "onset_date_to",
											"value": "2022-10-30",
											"disabled": true
										},
										{
											"key": "managing_organization_id",
											"value": "{{user_legal_entity}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Condition context",
							"id": "15381251-eadaaae4-6df7-4a96-9e2b-c7be45f1a012",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/11d112b8-9d01-4857-8c9d-0eafa50c34a4/conditions/6b9ce042-1252-427a-95e9-703b6793f2e0/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"11d112b8-9d01-4857-8c9d-0eafa50c34a4",
										"conditions",
										"6b9ce042-1252-427a-95e9-703b6793f2e0",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-b1891df3-045f-4603-98b3-edd17e15faa0"
				},
				{
					"name": "Observations",
					"item": [
						{
							"name": "Get Observation by id",
							"id": "15381251-0a7614d9-843f-490e-ad07-f4b67cee01d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/{{patient_id_from_episode}}/observations/4572e1d8-808b-4f71-b3c7-7917f718883e",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"observations",
										"4572e1d8-808b-4f71-b3c7-7917f718883e"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Observations by searсh params",
							"id": "15381251-fb1823fa-1dc2-44d4-b4c4-70e560bfd941",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/b0efddfe-cde2-4faf-839e-9f0fc4a68c23/observations?managing_organization_id={{user_legal_entity}}",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"b0efddfe-cde2-4faf-839e-9f0fc4a68c23",
										"observations"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										},
										{
											"key": "code",
											"value": "10569-2",
											"disabled": true
										},
										{
											"key": "encounter_id",
											"value": "c6218ce3-99fd-49c9-9e79-ce7339a8709d",
											"disabled": true
										},
										{
											"key": "diagnostic_report_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9",
											"disabled": true
										},
										{
											"key": "episode_id",
											"value": "f48d1b6c-a021-4d6a-a5a4-aee93e152ecc",
											"disabled": true
										},
										{
											"key": "issued_from",
											"value": "1990-01-01",
											"disabled": true
										},
										{
											"key": "issued_to",
											"value": "2000-01-01",
											"disabled": true
										},
										{
											"key": "managing_organization_id",
											"value": "{{user_legal_entity}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Observation contexts",
							"id": "15381251-7b891a6f-0823-4860-a030-264aae5d4af3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/observations/observation_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"observations",
										"observation_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-fef69edc-66d3-4bfe-8698-f5d3e9d2acd6"
				},
				{
					"name": "Allergy Intolerance",
					"item": [
						{
							"name": "Get Allergy Intolerance by id",
							"id": "15381251-173f1642-dc25-4103-b094-7b8bcca10d07",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/allergy_intolerances/allergy_intolerance_id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"allergy_intolerances",
										"allergy_intolerance_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Allergy Intolerances by search params",
							"id": "15381251-29dd9b5f-1e32-447d-89a0-89e9ab63cd7c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/allergy_intolerances?page=2&page_size=50&code=227493005&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&episode_id=f48d1b6c-a021-4d6a-a5a4-aee93e152ecc&onset_date_time_from=1990-01-01&onset_date_time_to=2000-01-01",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"allergy_intolerances"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "code",
											"value": "227493005"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "episode_id",
											"value": "f48d1b6c-a021-4d6a-a5a4-aee93e152ecc"
										},
										{
											"key": "onset_date_time_from",
											"value": "1990-01-01"
										},
										{
											"key": "onset_date_time_to",
											"value": "2000-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Allergy Intolerance context",
							"id": "15381251-65ec8541-de5f-47e1-a60d-35292a507b7e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/allergy_intolerances/allergy_intolerance_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"allergy_intolerances",
										"allergy_intolerance_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-455bbd69-07e3-4879-95bf-45db1941f4a5"
				},
				{
					"name": "Immunization",
					"item": [
						{
							"name": "Get Immunization by id",
							"id": "15381251-ac3c1d30-4777-48b3-9cd7-63a66d0cf5a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/immunizations/713b07c8-67ec-4a96-b7a0-cb6331a3c727",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"immunizations",
										"713b07c8-67ec-4a96-b7a0-cb6331a3c727"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Immunizations by search params",
							"id": "15381251-d78019ec-f37d-4845-823c-ec0e73dff324",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/immunizations?page=2&page_size=50&vaccine_code=wex-10&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&episode_id=f48d1b6c-a021-4d6a-a5a4-aee93e152ecc&date_from=1990-01-01&date_to=2000-01-01",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"immunizations"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "vaccine_code",
											"value": "wex-10"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "episode_id",
											"value": "f48d1b6c-a021-4d6a-a5a4-aee93e152ecc"
										},
										{
											"key": "date_from",
											"value": "1990-01-01"
										},
										{
											"key": "date_to",
											"value": "2000-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Immunization context",
							"id": "15381251-cc20b092-b67f-41ec-ab49-0fb08c7669d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/immunizations/immunization_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"immunizations",
										"immunization_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-35697ec3-7376-46ab-9983-2e7d74e9f079"
				},
				{
					"name": "Risk Assessment",
					"item": [
						{
							"name": "Get Risk Assessment by id",
							"id": "15381251-86cbf1f4-9f03-42d0-9ca1-d915c47f5856",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/risk_assessments/risk_assessment_id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"risk_assessments",
										"risk_assessment_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Risk Assessments by search params",
							"id": "15381251-0688f1b4-fa06-4c8d-bb41-bb5b0b71952d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/risk_assessments?page=2&page_size=50&code=R80&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&episode_id=f48d1b6c-a021-4d6a-a5a4-aee93e152ecc&asserted_date_from=1990-01-01&asserted_date_to=2000-01-01",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"risk_assessments"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "code",
											"value": "R80"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "episode_id",
											"value": "f48d1b6c-a021-4d6a-a5a4-aee93e152ecc"
										},
										{
											"key": "asserted_date_from",
											"value": "1990-01-01"
										},
										{
											"key": "asserted_date_to",
											"value": "2000-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Risk Assessment context",
							"id": "15381251-291655b4-4b84-49b7-9eb3-d6785e351375",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/risk_assessments/risk_assessment_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"risk_assessments",
										"risk_assessment_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-338ba52c-7e95-45cf-a9bc-158156426adb"
				},
				{
					"name": "Device",
					"item": [
						{
							"name": "Get Device by id",
							"id": "15381251-99ca5569-bd23-4699-bf96-e0347d41550e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/devices/device_id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"devices",
										"device_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Devices by search params",
							"id": "15381251-be6a9ab9-2cd4-4a33-84a8-bde4e674b872",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/devices?page=2&page_size=50&type=1234&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&episode_id=f48d1b6c-a021-4d6a-a5a4-aee93e152ecc&definition=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&model_number=NSPX30&manufacturer=GlobalMed%2C%20Inc&name=name&recorder=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&recorder_legal_entity_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&status=active&serial_number=NSPX30&inserted_at_from=1990-01-01&inserted_at_to=2000-01-01",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"devices"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "type",
											"value": "1234"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "episode_id",
											"value": "f48d1b6c-a021-4d6a-a5a4-aee93e152ecc"
										},
										{
											"key": "definition",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "model_number",
											"value": "NSPX30"
										},
										{
											"key": "manufacturer",
											"value": "GlobalMed%2C%20Inc"
										},
										{
											"key": "name",
											"value": "name"
										},
										{
											"key": "recorder",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "recorder_legal_entity_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "serial_number",
											"value": "NSPX30"
										},
										{
											"key": "inserted_at_from",
											"value": "1990-01-01"
										},
										{
											"key": "inserted_at_to",
											"value": "2000-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device context",
							"id": "15381251-5a55ba36-7dc0-4ee6-bf82-969eb5501d65",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patients/patient_id/devices/device_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patients",
										"patient_id",
										"devices",
										"device_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-b7d89d39-b718-417e-923d-ab886800f332"
				},
				{
					"name": "Device Association",
					"item": [
						{
							"name": "Get Device Association by id",
							"id": "15381251-53ef93f1-d47f-481f-9bca-155cdfbc15ff",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/device_associations/device_association_id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"device_associations",
										"device_association_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device Associations by search params",
							"id": "15381251-4bb67b82-8466-4fdf-8723-adad26271736",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/device_associations?page=2&page_size=50&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&episode_id=f48d1b6c-a021-4d6a-a5a4-aee93e152ecc&recorder=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&recorder_legal_entity_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&status=active&inserted_at_from=1990-01-01&inserted_at_to=2000-01-01&body_site=head&device_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&association_date_from=1990-01-01&association_date_to=2000-01-01",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"device_associations"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "episode_id",
											"value": "f48d1b6c-a021-4d6a-a5a4-aee93e152ecc"
										},
										{
											"key": "recorder",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "recorder_legal_entity_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "inserted_at_from",
											"value": "1990-01-01"
										},
										{
											"key": "inserted_at_to",
											"value": "2000-01-01"
										},
										{
											"key": "body_site",
											"value": "head"
										},
										{
											"key": "device_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "association_date_from",
											"value": "1990-01-01"
										},
										{
											"key": "association_date_to",
											"value": "2000-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device Association context",
							"id": "15381251-685ae24c-64ba-403e-8822-d3e9cbdf21ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/device_associations/device_association_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"device_associations",
										"device_association_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-368c03eb-0112-4076-83d3-b68cf5a80b06"
				},
				{
					"name": "Detected Issue",
					"item": [
						{
							"name": "Get Detected Issue by id",
							"id": "15381251-d2ae6e01-3963-46bf-b31f-a675d341fee9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/detected_issues/detected_issue_id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"detected_issues",
										"detected_issue_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Detected Issues by search params",
							"id": "15381251-589fca78-51e3-4cad-a113-7dec7bdb7c3b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/detected_issues?page=2&page_size=50&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&episode_id=f48d1b6c-a021-4d6a-a5a4-aee93e152ecc&recorder=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&recorder_legal_entity_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&status=active&device_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&inserted_at_from=1990-01-01&inserted_at_to=2000-01-01&identified_date_time_from=2021-01-01T00%3A00%3A00.000Z&identified_date_time_to=2021-01-01T00%3A00%3A00.000Z",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"detected_issues"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "episode_id",
											"value": "f48d1b6c-a021-4d6a-a5a4-aee93e152ecc"
										},
										{
											"key": "recorder",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "recorder_legal_entity_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "device_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "inserted_at_from",
											"value": "1990-01-01"
										},
										{
											"key": "inserted_at_to",
											"value": "2000-01-01"
										},
										{
											"key": "identified_date_time_from",
											"value": "2021-01-01T00%3A00%3A00.000Z"
										},
										{
											"key": "identified_date_time_to",
											"value": "2021-01-01T00%3A00%3A00.000Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Detected Issue context",
							"id": "15381251-9ddf601a-efc1-4bbc-917b-294962f391c8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/detected_issues/detected_issue_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"detected_issues",
										"detected_issue_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-19e832a8-9973-40e7-87f2-334df19d8d8f"
				},
				{
					"name": "Medication Statement",
					"item": [
						{
							"name": "Get Medication Statement by id",
							"id": "15381251-0138d57d-bc57-4847-905e-601b4dba8372",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/medication_statements/medication_statement_id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"medication_statements",
										"medication_statement_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication Statement by search params",
							"id": "15381251-1f10a0f0-9981-4d50-9672-41ea54e7254d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/medication_statements/?page=2&page_size=50&medication_code=spine_board&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&episode_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&asserted_date_from=1990-01-01&asserted_date_to=2000-01-01",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"medication_statements",
										""
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "medication_code",
											"value": "spine_board"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "episode_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "asserted_date_from",
											"value": "1990-01-01"
										},
										{
											"key": "asserted_date_to",
											"value": "2000-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication Statement context",
							"id": "15381251-2e690114-7054-4c71-807a-40b3c2277c21",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/medication_statements/medication_statement_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"medication_statements",
										"medication_statement_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-8afa90f8-123b-4a4d-82f3-934b8989389c"
				},
				{
					"name": "Medication Administration",
					"item": [
						{
							"name": "Get Medication Administration by id",
							"id": "15381251-8fcf9ffe-7f50-4106-8d99-4bef998586c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/medication_administrations/medication_administration_id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"medication_administrations",
										"medication_administration_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication Administration by search params",
							"id": "15381251-57ee2db5-c3aa-4325-92e4-06903c6f99f6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/medication_administrations/?page=2&page_size=50&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&episode_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"medication_administrations",
										""
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "episode_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication Administration context",
							"id": "15381251-a4873734-00af-4c93-98a7-ca0fa7187c02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/medication_administrations/medication_administration_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"medication_administrations",
										"medication_administration_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-c99b9e53-3af4-4c73-bd8a-9862e4f86978"
				},
				{
					"name": "Clinical Impressions",
					"item": [
						{
							"name": "Get Clinical Impression by id",
							"id": "15381251-e7e3c9f5-53ce-445c-b2a8-512f9f6fa5ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/f32392dc-57d0-40ce-abce-983eb504618a/clinical_impressions/abd18092-17ed-4976-bdc7-6a6eb2b66c95",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"f32392dc-57d0-40ce-abce-983eb504618a",
										"clinical_impressions",
										"abd18092-17ed-4976-bdc7-6a6eb2b66c95"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Clinical Impression by search params",
							"id": "15381251-df606a9c-ceac-412a-bacb-2ac0e8a9b18c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/clinical_impressions?encounter_id=7c3da506-804d-4550-8993-bf17f9ee0400&episode_id=f48d1b6c-a021-4d6a-a5a4-aee93e152ecc&code=insulin_1&status=completed&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"clinical_impressions"
									],
									"query": [
										{
											"key": "encounter_id",
											"value": "7c3da506-804d-4550-8993-bf17f9ee0400"
										},
										{
											"key": "episode_id",
											"value": "f48d1b6c-a021-4d6a-a5a4-aee93e152ecc"
										},
										{
											"key": "code",
											"value": "insulin_1"
										},
										{
											"key": "status",
											"value": "completed"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Clinical Impression context",
							"id": "15381251-0fedafa1-05ef-4633-8d28-3c1957fca625",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/6fafd4bc-fd09-49cc-8b85-a74797ca6252/clinical_impressions/ab3a7960-72b3-43d1-a4ac-fc9564c67c03/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"6fafd4bc-fd09-49cc-8b85-a74797ca6252",
										"clinical_impressions",
										"ab3a7960-72b3-43d1-a4ac-fc9564c67c03",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-ab11bcb8-f873-4e30-b7c7-c51e261a6b83"
				},
				{
					"name": "Diagnostic Report Data Package",
					"item": [
						{
							"name": "Dummy Submit Diagnostic Report Package",
							"id": "15381251-e79a9d22-ff27-4099-bc11-f47b1a7e90e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"diagnostic_report\": {\r\n    \"id\": \"90a9e15b-b71b-4caf-8f2e-ff247e8a5600\",\r\n    \"based_on\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"service_request\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"paper_referral\": {\r\n      \"requisition\": \"1111-2222-3333-4444\",\r\n      \"requester_legal_entity_name\": \"Some clinic\",\r\n      \"requester_legal_entity_edrpou\": \"12345678\",\r\n      \"requester_employee_name\": \"John\",\r\n      \"service_request_date\": \"2018-10-08\",\r\n      \"note\": \"Some notes\"\r\n    },\r\n    \"status\": \"final\",\r\n    \"code\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"service\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"category\": [\r\n      {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/diagnostic_report_categories\",\r\n            \"code\": \"diagnostic_procedure\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"effective_date_time\": \"2018-08-02T10:45:16.000Z\",\r\n    \"issued\": \"2018-10-08T09:46:37.694Z\",\r\n    \"conclusion\": \"At risk of osteoporotic fracture\",\r\n    \"conclusion_code\": {\r\n      \"coding\": [\r\n        {\r\n          \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n          \"code\": \"H04.2\"\r\n        }\r\n      ]\r\n    },\r\n    \"recorded_by\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"employee\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"specimens\": [\r\n      {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"specimen\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      }\r\n    ],\r\n    \"used_references\": [\r\n      {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"equipment\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      }\r\n    ],\r\n    \"primary_source\": true,\r\n    \"performer\": {\r\n      \"reference\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"97d57238-ffbe-4335-92ea-28d4de117ea2\"\r\n        }\r\n      }\r\n    },\r\n    \"managing_organization\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"legal_enity\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"division\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"division\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"results_interpreter\": {\r\n      \"reference\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"97d57238-ffbe-4335-92ea-28d4de117ea2\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Dummy Submit Diagnostic Report Package with Observations",
							"id": "15381251-29a30d77-7566-4eac-ac98-d09d9d477670",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"diagnostic_report\": {\r\n    \"id\": \"90a9e15b-b71b-4caf-8f2e-ff247e8a5600\",\r\n    \"based_on\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"service_request\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"paper_referral\": {\r\n      \"requisition\": \"1111-2222-3333-4444\",\r\n      \"requester_legal_entity_name\": \"Some clinic\",\r\n      \"requester_legal_entity_edrpou\": \"12345678\",\r\n      \"requester_employee_name\": \"John\",\r\n      \"service_request_date\": \"2018-10-08\",\r\n      \"note\": \"Some notes\"\r\n    },\r\n    \"status\": \"final\",\r\n    \"code\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"service\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"category\": [\r\n      {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/diagnostic_report_categories\",\r\n            \"code\": \"diagnostic_procedure\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"effective_date_time\": \"2018-08-02T10:45:16.000Z\",\r\n    \"issued\": \"2018-10-08T09:46:37.694Z\",\r\n    \"conclusion\": \"At risk of osteoporotic fracture\",\r\n    \"conclusion_code\": {\r\n      \"coding\": [\r\n        {\r\n          \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n          \"code\": \"H04.2\"\r\n        }\r\n      ]\r\n    },\r\n    \"recorded_by\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"employee\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"specimens\": [\r\n      {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"specimen\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      }\r\n    ],\r\n    \"used_references\": [\r\n      {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"equipment\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      }\r\n    ],\r\n    \"primary_source\": true,\r\n    \"performer\": {\r\n      \"reference\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"97d57238-ffbe-4335-92ea-28d4de117ea2\"\r\n        }\r\n      }\r\n    },\r\n    \"managing_organization\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"legal_enity\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"division\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"division\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"results_interpreter\": {\r\n      \"reference\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"97d57238-ffbe-4335-92ea-28d4de117ea2\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"observations\": [\r\n    {\r\n      \"id\": \"90a9e15b-b71b-4caf-8f2e-ff247e8a5600\",\r\n      \"status\": \"valid\",\r\n      \"diagnostic_report\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"diagnostic_report\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      },\r\n      \"categories\": [\r\n        {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/observation_categories\",\r\n              \"code\": \"vital_signs\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"code\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/LOINC/observation_codes\",\r\n            \"code\": \"10569-2\"\r\n          }\r\n        ]\r\n      },\r\n      \"effective_date_time\": \"2018-08-02T10:45:16.000Z\",\r\n      \"issued\": \"2018-08-02T10:45:16.000Z\",\r\n      \"primary_source\": true,\r\n      \"performer\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      },\r\n      \"interpretation\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/observation_interpretations\",\r\n            \"code\": \"L\"\r\n          }\r\n        ]\r\n      },\r\n      \"comment\": \"Some comment\",\r\n      \"body_site\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/body_sites\",\r\n            \"code\": \"head\"\r\n          }\r\n        ]\r\n      },\r\n      \"method\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/observation_methods\",\r\n            \"code\": \"anamnesis\"\r\n          }\r\n        ]\r\n      },\r\n      \"value_quantity\": {\r\n        \"value\": 0,\r\n        \"comparator\": \">\",\r\n        \"unit\": \"kg\",\r\n        \"system\": \"eHealth/ucum/units\",\r\n        \"code\": \"kg\"\r\n      },\r\n      \"reference_ranges\": [\r\n        {\r\n          \"low\": {\r\n            \"value\": 0,\r\n            \"comparator\": \">\",\r\n            \"unit\": \"kg\",\r\n            \"system\": \"eHealth/ucum/units\",\r\n            \"code\": \"kg\"\r\n          },\r\n          \"high\": {\r\n            \"value\": 0,\r\n            \"comparator\": \"<\",\r\n            \"unit\": \"kg\",\r\n            \"system\": \"eHealth/ucum/units\",\r\n            \"code\": \"kg\"\r\n          },\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/reference_range_types\",\r\n                \"code\": \"normal\"\r\n              }\r\n            ]\r\n          },\r\n          \"applies_to\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/reference_range_applications\",\r\n                \"code\": \"male\"\r\n              }\r\n            ]\r\n          },\r\n          \"age\": {\r\n            \"low\": {\r\n              \"value\": 18,\r\n              \"comparator\": \">\",\r\n              \"unit\": \"years\"\r\n            },\r\n            \"high\": {\r\n              \"value\": 35,\r\n              \"comparator\": \"<\",\r\n              \"unit\": \"years\"\r\n            }\r\n          },\r\n          \"text\": \"Some text\"\r\n        }\r\n      ],\r\n      \"reaction_on\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"immunization\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      },\r\n      \"components\": [\r\n        {\r\n          \"code\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"patient\"\r\n              }\r\n            ]\r\n          },\r\n          \"value_string\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\r\n          \"interpretation\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/observation_interpretations\",\r\n                \"code\": \"L\"\r\n              }\r\n            ]\r\n          },\r\n          \"reference_ranges\": [\r\n            {\r\n              \"low\": {\r\n                \"value\": 0,\r\n                \"comparator\": \">\",\r\n                \"unit\": \"kg\",\r\n                \"system\": \"eHealth/ucum/units\",\r\n                \"code\": \"kg\"\r\n              },\r\n              \"high\": {\r\n                \"value\": 0,\r\n                \"comparator\": \"<\",\r\n                \"unit\": \"kg\",\r\n                \"system\": \"eHealth/ucum/units\",\r\n                \"code\": \"kg\"\r\n              },\r\n              \"type\": {\r\n                \"coding\": [\r\n                  {\r\n                    \"system\": \"eHealth/reference_range_types\",\r\n                    \"code\": \"normal\"\r\n                  }\r\n                ]\r\n              },\r\n              \"applies_to\": {\r\n                \"coding\": [\r\n                  {\r\n                    \"system\": \"eHealth/reference_range_applications\",\r\n                    \"code\": \"male\"\r\n                  }\r\n                ]\r\n              },\r\n              \"age\": {\r\n                \"low\": {\r\n                  \"value\": 18,\r\n                  \"comparator\": \">\",\r\n                  \"unit\": \"years\"\r\n                },\r\n                \"high\": {\r\n                  \"value\": 35,\r\n                  \"comparator\": \"<\",\r\n                  \"unit\": \"years\"\r\n                }\r\n              },\r\n              \"text\": \"Some text\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"specimen\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"specimen\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      },\r\n      \"device\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"equipment\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Submit Diagnostic Report Package",
							"id": "15381251-855d6f0d-333e-4861-a82c-021808d17a06",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/87841aa5-2f3d-4f18-bf15-0639f37b9fd2/diagnostic_report_package",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"87841aa5-2f3d-4f18-bf15-0639f37b9fd2",
										"diagnostic_report_package"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dummy Cancel Diagnostic Report Package",
							"id": "15381251-f9cf782d-bbd6-44f8-9872-c65a7fc42ab4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"diagnostic_report\": {\r\n    \"id\": \"90a9e15b-b71b-4caf-8f2e-ff247e8a5600\",\r\n    \"based_on\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"service_request\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"paper_referral\": {\r\n      \"requisition\": \"1111-2222-3333-4444\",\r\n      \"requester_legal_entity_name\": \"Some clinic\",\r\n      \"requester_legal_entity_edrpou\": \"12345678\",\r\n      \"requester_employee_name\": \"John\",\r\n      \"service_request_date\": \"2018-10-08\",\r\n      \"note\": \"Some notes\"\r\n    },\r\n    \"status\": \"final\",\r\n    \"code\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"service\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"category\": [\r\n      {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/diagnostic_report_categories\",\r\n            \"code\": \"diagnostic_procedure\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"effective_date_time\": \"2018-08-02T10:45:16.000Z\",\r\n    \"issued\": \"2018-10-08T09:46:37.694Z\",\r\n    \"conclusion\": \"At risk of osteoporotic fracture\",\r\n    \"conclusion_code\": {\r\n      \"coding\": [\r\n        {\r\n          \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n          \"code\": \"H04.2\"\r\n        }\r\n      ]\r\n    },\r\n    \"recorded_by\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"employee\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"specimens\": [\r\n      {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"specimen\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      }\r\n    ],\r\n    \"used_references\": [\r\n      {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"equipment\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      }\r\n    ],\r\n    \"primary_source\": true,\r\n    \"performer\": {\r\n      \"reference\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ],\r\n            \"text\": \"Галина Олександрівна\"\r\n          },\r\n          \"value\": \"97d57238-ffbe-4335-92ea-28d4de117ea2\"\r\n        }\r\n      }\r\n    },\r\n    \"managing_organization\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"legal_enity\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"division\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"division\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    },\r\n    \"results_interpreter\": {\r\n      \"reference\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"97d57238-ffbe-4335-92ea-28d4de117ea2\"\r\n        }\r\n      }\r\n    },\r\n    \"explanatory_letter\": \"Звіт був відмінений у зв'язку з помилкою при виборі пацієнта\",\r\n    \"cancellation_reason\": {\r\n      \"coding\": [\r\n        {\r\n          \"system\": \"eHealth/cancellation_reasons\",\r\n          \"code\": \"misspelling\"\r\n        }\r\n      ],\r\n      \"text\": \"\"\r\n    }\r\n  },\r\n  \"observations\": [\r\n    {\r\n      \"id\": \"90a9e15b-b71b-4caf-8f2e-ff247e8a5600\",\r\n      \"status\": \"valid\",\r\n      \"diagnostic_report\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"diagnostic_report\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      },\r\n      \"categories\": [\r\n        {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/observation_categories\",\r\n              \"code\": \"vital_signs\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"code\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/LOINC/observation_codes\",\r\n            \"code\": \"10569-2\"\r\n          }\r\n        ]\r\n      },\r\n      \"effective_date_time\": \"2018-08-02T10:45:16.000Z\",\r\n      \"issued\": \"2018-08-02T10:45:16.000Z\",\r\n      \"primary_source\": true,\r\n      \"performer\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      },\r\n      \"interpretation\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/observation_interpretations\",\r\n            \"code\": \"L\"\r\n          }\r\n        ]\r\n      },\r\n      \"comment\": \"Some comment\",\r\n      \"body_site\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/body_sites\",\r\n            \"code\": \"head\"\r\n          }\r\n        ]\r\n      },\r\n      \"method\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/observation_methods\",\r\n            \"code\": \"anamnesis\"\r\n          }\r\n        ]\r\n      },\r\n      \"value_quantity\": {\r\n        \"value\": 0,\r\n        \"comparator\": \">\",\r\n        \"unit\": \"kg\",\r\n        \"system\": \"eHealth/ucum/units\",\r\n        \"code\": \"kg\"\r\n      },\r\n      \"reference_ranges\": [\r\n        {\r\n          \"low\": {\r\n            \"value\": 0,\r\n            \"comparator\": \">\",\r\n            \"unit\": \"kg\",\r\n            \"system\": \"eHealth/ucum/units\",\r\n            \"code\": \"kg\"\r\n          },\r\n          \"high\": {\r\n            \"value\": 0,\r\n            \"comparator\": \"<\",\r\n            \"unit\": \"kg\",\r\n            \"system\": \"eHealth/ucum/units\",\r\n            \"code\": \"kg\"\r\n          },\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/reference_range_types\",\r\n                \"code\": \"normal\"\r\n              }\r\n            ]\r\n          },\r\n          \"applies_to\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/reference_range_applications\",\r\n                \"code\": \"male\"\r\n              }\r\n            ]\r\n          },\r\n          \"age\": {\r\n            \"low\": {\r\n              \"value\": 18,\r\n              \"comparator\": \">\",\r\n              \"unit\": \"years\"\r\n            },\r\n            \"high\": {\r\n              \"value\": 35,\r\n              \"comparator\": \"<\",\r\n              \"unit\": \"years\"\r\n            }\r\n          },\r\n          \"text\": \"Some text\"\r\n        }\r\n      ],\r\n      \"reaction_on\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"immunization\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      },\r\n      \"components\": [\r\n        {\r\n          \"code\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"patient\"\r\n              }\r\n            ]\r\n          },\r\n          \"value_string\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\r\n          \"interpretation\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/observation_interpretations\",\r\n                \"code\": \"L\"\r\n              }\r\n            ]\r\n          },\r\n          \"reference_ranges\": [\r\n            {\r\n              \"low\": {\r\n                \"value\": 0,\r\n                \"comparator\": \">\",\r\n                \"unit\": \"kg\",\r\n                \"system\": \"eHealth/ucum/units\",\r\n                \"code\": \"kg\"\r\n              },\r\n              \"high\": {\r\n                \"value\": 0,\r\n                \"comparator\": \"<\",\r\n                \"unit\": \"kg\",\r\n                \"system\": \"eHealth/ucum/units\",\r\n                \"code\": \"kg\"\r\n              },\r\n              \"type\": {\r\n                \"coding\": [\r\n                  {\r\n                    \"system\": \"eHealth/reference_range_types\",\r\n                    \"code\": \"normal\"\r\n                  }\r\n                ]\r\n              },\r\n              \"applies_to\": {\r\n                \"coding\": [\r\n                  {\r\n                    \"system\": \"eHealth/reference_range_applications\",\r\n                    \"code\": \"male\"\r\n                  }\r\n                ]\r\n              },\r\n              \"age\": {\r\n                \"low\": {\r\n                  \"value\": 18,\r\n                  \"comparator\": \">\",\r\n                  \"unit\": \"years\"\r\n                },\r\n                \"high\": {\r\n                  \"value\": 35,\r\n                  \"comparator\": \"<\",\r\n                  \"unit\": \"years\"\r\n                }\r\n              },\r\n              \"text\": \"Some text\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"specimen\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"specimen\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        }\r\n      },\r\n      \"device\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"equipment\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n        },\r\n        \"display_value\": \"null\"\r\n      }\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Cancel Diagnostic Report Package",
							"id": "15381251-826dc7de-a254-456f-b8f0-781410b8d0da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/05a9a2c3-61e4-4dcd-ae34-af141a7edaa0/diagnostic_report_package",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"05a9a2c3-61e4-4dcd-ae34-af141a7edaa0",
										"diagnostic_report_package"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-fe52731b-a6a3-472c-b537-062cf93b4ef1"
				},
				{
					"name": "Diagnostic Report",
					"item": [
						{
							"name": "Get Diagnostic Report by id",
							"id": "15381251-b59ccdba-5637-48b3-8941-0d8e19c7d569",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/diagnostic_reports/diagnostic_report_id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"diagnostic_reports",
										"diagnostic_report_id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Diagnostic Report by search params",
							"id": "15381251-101fcd91-70e6-4740-975a-e6d6ec3a2983",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/diagnostic_reports/?page=2&page_size=50&code=12345&encounter_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&context_episode_id=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&issued_from=1990-01-01&issued_to=2000-01-02",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"diagnostic_reports",
										""
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										},
										{
											"key": "code",
											"value": "12345"
										},
										{
											"key": "encounter_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "context_episode_id",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "issued_from",
											"value": "1990-01-01"
										},
										{
											"key": "issued_to",
											"value": "2000-01-02"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Short Diagnostic Reports by Service Groups",
							"id": "15381251-b348cb86-a190-43b1-85f5-ddc0771c5533",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/service_groups/diagnostic_reports?service_group_id=90dc3ed7-2169-45d8-8fa3-d918c6839b21&code=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&status=final&category=diagnostic_procedure&issued_from=1990-01-01&issued_to=2000-01-01&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"service_groups",
										"diagnostic_reports"
									],
									"query": [
										{
											"key": "service_group_id",
											"value": "90dc3ed7-2169-45d8-8fa3-d918c6839b21"
										},
										{
											"key": "code",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "status",
											"value": "final"
										},
										{
											"key": "category",
											"value": "diagnostic_procedure"
										},
										{
											"key": "issued_from",
											"value": "1990-01-01"
										},
										{
											"key": "issued_to",
											"value": "2000-01-01"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Approved Diagnostic Reports",
							"id": "15381251-e60ef9c0-3d38-4dcb-b7ed-6b82b0d17e4a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/diagnostic_reports/approved?code=09dc3ed7-2169-45d8-8fa3-d918c6839bf9&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"diagnostic_reports",
										"approved"
									],
									"query": [
										{
											"key": "code",
											"value": "09dc3ed7-2169-45d8-8fa3-d918c6839bf9"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Diagnostic Report contexts",
							"id": "15381251-b11f7115-2659-48e5-b4f2-367dfdda1300",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/diagnostic_reports/diagnostic_report_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"diagnostic_reports",
										"diagnostic_report_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-5ae70ba1-22a9-4d5e-8b80-76258603259f"
				},
				{
					"name": "Procedure",
					"item": [
						{
							"name": "Dummy create procedure",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "bc9c0bca-60af-43a4-92b3-b0a865dcf7af",
										"exec": [
											"const uuid = require('uuid');\r",
											"const procedureId = uuid.v4();\r",
											"\r",
											"pm.globals.set(\"procedure_id\", procedureId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73a22131-8d5f-4eb3-854e-17b759b2be24",
										"exec": [
											"const resData = pm.response.json();\r",
											"console.log('create procedure sign content', resData)\r",
											"\r",
											"pm.test(`Procedure content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('procedure_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-7a832249-188e-410e-a0f0-1b8aec9331c4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{procedure_id}}\",\r\n    \"status\": \"completed\",\r\n    \"based_on\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"service_request\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{JobSericeRequestID}}\"\r\n        }\r\n    },\r\n    \"code\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"service\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"40b2dfdf-7623-4fa5-bbfb-58a6b651ff0c\"\r\n        }\r\n    },\r\n    \"performed_period\": {\r\n      \"start\": \"2025-03-05T10:45:16.000Z\",\r\n      \"end\": \"2025-03-10T10:45:16.000Z\"\r\n    },\r\n    \"recorded_by\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"primary_source\": true,\r\n    \"performer\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ],\r\n                \"text\": \"Галина Олександрівна\"\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"division\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"division\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_division_id}}\"\r\n        }\r\n    },\r\n    \"managing_organization\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"legal_entity\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_legal_entity}}\"\r\n        }\r\n    },\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"eHealth/procedure_categories\",\r\n                \"code\": \"procedure\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/procedure-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"procedure-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create procedure",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "228a35be-a305-43d8-80f4-cd9d9305845f",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"pm.test(\"Create Procedures Response status code is 202\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(202);\r",
											"});\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Create Procedures Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"            pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                 pm.test(`Create Procedures Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    // Extract the part after \"/api/\"\r",
											"                    const href = link.href.replace('/api/', '');\r",
											"\r",
											"                    // Set the link entity to global variables\r",
											"                    acc[link.entity] = href;\r",
											"\r",
											"                    if (href.includes('procedures/')) {\r",
											"                        console.log('dsasdasdasdasssadasdds',href, acc[link.entity] )\r",
											"                        const activityId = href.split('/')[3]; // Extract the Proceduress ID\r",
											"                        acc['createProcedure'] = activityId;\r",
											"                    }\r",
											"\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, value]) => {\r",
											"                    const globalName = `${entity.charAt(0).toUpperCase() + entity.slice(1)}ID`;\r",
											"                    pm.globals.set(globalName, value);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Create Procedures Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Create Procedures Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Create Procedures Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e497c45a-5c4d-4751-b888-e365b56cb85c",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-4bc8ebda-b7e9-48a3-8967-16daba6c90f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/procedures",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"procedures"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Procedure",
							"id": "15381251-3fdc35f4-9598-4478-9b4d-43a8397e14a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n  \"signed_data\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/cda00e44-b276-47e5-8045-dfccd18c1750/procedures/1013f2cd-cd19-46c4-922c-d36fd11e84a6/actions/cancel",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"cda00e44-b276-47e5-8045-dfccd18c1750",
										"procedures",
										"1013f2cd-cd19-46c4-922c-d36fd11e84a6",
										"actions",
										"cancel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Procedures by ID",
							"id": "15381251-2c7e5201-5775-4a79-a367-fbc855559cec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/procedures/{{CreateProcedureID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"procedures",
										"{{CreateProcedureID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Procedures by ID",
							"id": "15381251-846db920-cfc6-4ab4-b47e-e248c5d58a43",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/c9e1fc8b-e446-4131-a710-1694c6049bf4/procedures/fc3e79eb-9455-4d64-9e15-4c204d55bea6",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"c9e1fc8b-e446-4131-a710-1694c6049bf4",
										"procedures",
										"fc3e79eb-9455-4d64-9e15-4c204d55bea6"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-e472e41f-4903-4ecc-ba96-6a724ad7abb1"
				},
				{
					"name": "Diagnostic Report",
					"item": [
						{
							"name": "Dummy Submit Diagnostic Report Package",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"const diagnosticReportId = uuid.v4();\r",
											"\r",
											"pm.globals.set(\"diagnostic_report_id\", diagnosticReportId);"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "da5049a7-1d9e-4c7e-ae52-1219ebd6d92d"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resData = pm.response.json();\r",
											"console.log('create diagnostic report sign content', resData)\r",
											"\r",
											"pm.test(`Diagnostic report content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('diagnostic_report_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"id": "bda0982d-7348-4573-8753-abca74e123a1"
									}
								}
							],
							"id": "15381251-6839b5f5-0d08-41d0-ba08-04d095667241",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"diagnostic_report\": {\r\n    \"id\": \"{{diagnostic_report_id}}\",\r\n    \"status\": \"final\",\r\n    \"code\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"service\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"30c22c24-c8ef-410a-8c23-984da411077a\"\r\n      }\r\n    },\r\n    \"category\": [\r\n      {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/diagnostic_report_categories\",\r\n            \"code\": \"diagnostic_procedure\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"issued\": \"2024-09-03T11:40:16.000Z\",\r\n    \"conclusion\": \"At risk of osteoporotic fracture\",\r\n    \"recorded_by\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"employee\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"{{user_id}}\"\r\n      }\r\n    },\r\n    \"primary_source\": true,\r\n    \"performer\": {\r\n      \"reference\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"{{user_id}}\"\r\n        }\r\n      }\r\n    },\r\n    \"managing_organization\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"legal_entity\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"{{user_legal_entity}}\"\r\n      }\r\n    },\r\n    \"division\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"division\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"{{user_division_id}}\"\r\n      }\r\n    },\r\n    \"results_interpreter\": {\r\n      \"reference\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"employee\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"{{user_id}}\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/diagnostic-report-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"diagnostic-report-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Diagnostic Report by search params",
							"id": "15381251-6b39d56e-4a92-48cc-869d-5e7eae1d58c8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/2c46cd1d-3e28-4f8c-a35c-645019b27c3b/diagnostic_reports/?page=1&encounter_id=c6218ce3-99fd-49c9-9e79-ce7339a8709d&context_episode_id=dc40dfb2-2c33-449e-b25d-d58403f150ba",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"2c46cd1d-3e28-4f8c-a35c-645019b27c3b",
										"diagnostic_reports",
										""
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										},
										{
											"key": "code",
											"value": "12345",
											"disabled": true
										},
										{
											"key": "encounter_id",
											"value": "c6218ce3-99fd-49c9-9e79-ce7339a8709d"
										},
										{
											"key": "context_episode_id",
											"value": "dc40dfb2-2c33-449e-b25d-d58403f150ba"
										},
										{
											"key": "issued_from",
											"value": "1990-01-01",
											"disabled": true
										},
										{
											"key": "issued_to",
											"value": "2000-01-01",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Submit Diagnostic Report Package",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Diagnostic Report Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"            pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Diagnostic Report Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    acc[link.entity] = link.href.replace('/api/', '');\r",
											"                    acc[link.entity] = href.includes('diagnostic_reports/') ? href.split('diagnostic_reports/')[3] : href;\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, href]) => {\r",
											"                    const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
											"                    pm.globals.set(globalName, href);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Diagnostic Report Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Diagnostic Report Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Diagnostic Report Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "646a7862-549c-435f-8124-930d0a0a0dea"
									}
								}
							],
							"id": "15381251-29a9b43b-bac9-41ad-837b-210a1c9eb3d5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/ada5d0c6-805b-4e5a-871a-cd84569f3bd1/diagnostic_report_package",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"ada5d0c6-805b-4e5a-871a-cd84569f3bd1",
										"diagnostic_report_package"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-43952797-871f-4b00-8232-a36e8a2157ef"
				},
				{
					"name": "Service Requests",
					"item": [
						{
							"name": "Get Service Requests by search params",
							"id": "15381251-eac7378f-31c1-49d7-bfd4-0028a8b7a962",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/2c46cd1d-3e28-4f8c-a35c-645019b27c3b/service_requests?episode_id=dc40dfb2-2c33-449e-b25d-d58403f150ba&status=active&care_plan_id=e87d92b2-1b55-46df-9096-801381e9b638",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"2c46cd1d-3e28-4f8c-a35c-645019b27c3b",
										"service_requests"
									],
									"query": [
										{
											"key": "episode_id",
											"value": "dc40dfb2-2c33-449e-b25d-d58403f150ba"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "requester_legal_entity",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5",
											"disabled": true
										},
										{
											"key": "used_by_legal_entity",
											"value": "8075e0e2-6b57-47fd-aff7-324806efa7e6",
											"disabled": true
										},
										{
											"key": "code",
											"value": "9075e0e2-6b57-47fd-aff7-324806efa7e6",
											"disabled": true
										},
										{
											"key": "care_plan_id",
											"value": "e87d92b2-1b55-46df-9096-801381e9b638"
										},
										{
											"key": "based_on",
											"value": "ef30f210-5328-4f48-bfe6-c7150d4737a6",
											"disabled": true
										},
										{
											"key": "managing_organization_id",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5",
											"disabled": true
										},
										{
											"key": "encounter_id",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-879222d8-7c70-4121-920f-9b6b5144fe22"
				},
				{
					"name": "Specimen",
					"item": [
						{
							"name": "Dummy create Specimen",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c0485432-51cd-4bb0-8c0f-f376d5b523a6",
										"exec": [
											"const uuid = require('uuid');\r",
											"const id = uuid.v4();\r",
											"pm.globals.set(\"specimen_id\", id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e9212780-8cc0-476a-b057-0db737d58161",
										"exec": [
											"const resData = pm.response.json();\r",
											"console.log('create Specimen sign content', resData)\r",
											"\r",
											"pm.test(`Specimen content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('specimen_signed_content', resData.signed_content);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-f19f5a84-71a5-413a-8916-ba81a1b5260e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"{{specimen_id}}\",\r\n  \"status\": \"available\",\r\n  \"type\": {\r\n    \"coding\": [\r\n      {\r\n        \"system\": \"specimen_types\",\r\n        \"code\": \"default\"\r\n      }\r\n    ]\r\n  },\r\n  \"condition\": {\r\n    \"coding\": [\r\n      {\r\n        \"system\": \"specimen_conditions\",\r\n        \"code\": \"default\"\r\n      }\r\n    ]\r\n  },\r\n  \"note\": \"Some notes\",\r\n  \"managing_organization\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"legal_entity\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"{{user_legal_entity}}\"\r\n    }\r\n  },\r\n  \"registered_by\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"employee\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"{{user_id}}\"\r\n    }\r\n  },\r\n  \"collection\": {\r\n    \"collector\": {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"employee\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"{{user_id}}\"\r\n      }\r\n    },\r\n    \"collected_date_time\": \"2025-04-21T19:14:13Z\",\r\n    \"duration\": {\r\n      \"value\": 5,\r\n      \"system\": \"eHealth/ucum/units\",\r\n      \"code\": \"min\",\r\n      \"comparator\": \">\"\r\n    },\r\n    \"quantity\": {\r\n      \"value\": 20,\r\n      \"system\": \"eHealth/ucum/units\",\r\n      \"code\": \"g\"\r\n    },\r\n    \"method\": {\r\n      \"coding\": [\r\n        {\r\n          \"system\": \"specimen_collection_methods\",\r\n          \"code\": \"default\"\r\n        }\r\n      ]\r\n    },\r\n    \"body_site\": {\r\n      \"coding\": [\r\n        {\r\n          \"system\": \"eHealth/body_sites\",\r\n          \"code\": \"head\"\r\n        }\r\n      ]\r\n    },\r\n    \"fasting_status_codeable_concept\": {\r\n      \"coding\": [\r\n        {\r\n          \"system\": \"fasting_statuses\",\r\n          \"code\": \"default\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"container\": [\r\n    {\r\n      \"identifier\": \"1-3244-ABC\",\r\n      \"description\": \"Some container description\",\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"specimen_container_types\",\r\n            \"code\": \"default\"\r\n          }\r\n        ]\r\n      },\r\n      \"capacity\": {\r\n        \"value\": 30000,\r\n        \"system\": \"eHealth/ucum/units\",\r\n        \"code\": \"mg\"\r\n      },\r\n      \"specimen_quantity\": {\r\n        \"value\": 20,\r\n        \"system\": \"eHealth/ucum/units\",\r\n        \"code\": \"g\"\r\n      },\r\n      \"additive_codeable_concept\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"specimen_container_additives\",\r\n            \"code\": \"default\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-specimen-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-specimen-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Specimen",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "228a35be-a305-43d8-80f4-cd9d9305845f",
										"exec": [
											"// function displayResponse(title, data) {\r",
											"//     const html = `\r",
											"//         <h1>${title}</h1>\r",
											"//         <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"//     pm.visualizer.set(html);\r",
											"// }\r",
											"\r",
											"// pm.test(\"Create Procedures Response status code is 202\", function () {\r",
											"//     pm.expect(pm.response.code).to.eql(202);\r",
											"// });\r",
											"\r",
											"// // Get the response body from the main request\r",
											"// const resBody = pm.response.text();\r",
											"// const resData = JSON.parse(resBody);\r",
											"\r",
											"// if (resData && resData.error) {\r",
											"//     displayResponse('Create Procedures Response Error Details', resData.error);\r",
											"// }\r",
											"\r",
											"// const href = resData.data.links[0].href;\r",
											"// console.log(\"Extracted href:\", href);\r",
											"\r",
											"// // Extract the job ID from the href\r",
											"// const number = href.split('/jobs/')[1];\r",
											"// console.log(\"Extracted number:\", number);\r",
											"\r",
											"// // Initialize retry counter in the environment\r",
											"// pm.environment.set('retryCount', 0);\r",
											"\r",
											"// // Function to check job status\r",
											"// function checkJobStatus(jobId) {\r",
											"\r",
											"//     const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"//     const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"//     pm.sendRequest({\r",
											"//         method: 'GET',\r",
											"//         url: url,\r",
											"//         header: {\r",
											"//             'Content-Type': 'application/json',\r",
											"//             'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"//             'api-key': '30276e63617461a185ec',\r",
											"//             'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"//         }\r",
											"//     }, function (err, res) {\r",
											"\r",
											"//         pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"//             pm.expect([200, 303]).to.include(res.code);\r",
											"//         });\r",
											"\r",
											"//         if (err) {\r",
											"//             displayResponse('Request Error', { error: err.message });\r",
											"//             console.error('Error checking job status:', err);\r",
											"//         } else {\r",
											"\r",
											"//             const responseBody = res.json();\r",
											"//             console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"//             if (responseBody.data.status === 'processed') {\r",
											"\r",
											"//                  pm.test(`Create Procedures Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"//                     pm.expect(res.code).to.eql(303);\r",
											"//                 });\r",
											"\r",
											"//                 const links = responseBody.data.links.reduce((acc, link) => {\r",
											"//                     // Extract the part after \"/api/\"\r",
											"//                     const href = link.href.replace('/api/', '');\r",
											"\r",
											"//                     // Set the link entity to global variables\r",
											"//                     acc[link.entity] = href;\r",
											"\r",
											"//                     if (href.includes('procedures/')) {\r",
											"//                         console.log('dsasdasdasdasssadasdds',href, acc[link.entity] )\r",
											"//                         const activityId = href.split('/')[3]; // Extract the Proceduress ID\r",
											"//                         acc['createProcedure'] = activityId;\r",
											"//                     }\r",
											"\r",
											"//                     return acc;\r",
											"//                 }, {});\r",
											"\r",
											"//                 // Iterate over the links object and set globals dynamically\r",
											"//                 Object.entries(links).forEach(([entity, value]) => {\r",
											"//                     const globalName = `${entity.charAt(0).toUpperCase() + entity.slice(1)}ID`;\r",
											"//                     pm.globals.set(globalName, value);\r",
											"//                 });\r",
											"\r",
											"\r",
											"//                 displayResponse('Create Procedures Job Response Details', responseBody.data);\r",
											"//             } else {\r",
											"\r",
											"//                 // Retrieve the current retry count\r",
											"//                 let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"//                 if (retryCount < maxRetries) {\r",
											"//                     // Increment the retry count and set it back to the environment\r",
											"//                     retryCount++;\r",
											"//                     pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"//                     console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"//                     setTimeout(() => {\r",
											"//                         checkJobStatus(jobId);\r",
											"//                     }, 1000);\r",
											"\r",
											"//                     displayResponse('Create Procedures Job Response Details2', responseBody.data);\r",
											"\r",
											"//                 } else {\r",
											"//                     console.log('Maximum retry limit reached.');\r",
											"//                     displayResponse(responseBody.data.error ? 'Create Procedures Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"//                 }\r",
											"//             }\r",
											"//         }\r",
											"//     });\r",
											"// }\r",
											"\r",
											"// // Call the function with the job ID\r",
											"// checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e497c45a-5c4d-4751-b888-e365b56cb85c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-3e436634-e93c-449a-a3dc-22c73283ba35",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\r\n{\r\n  \"signed_data\": \"{{specimen_signed_content}}\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/specimens",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"specimens"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Specimen details",
							"id": "15381251-e76a5859-1e66-4db8-a0aa-f6a829487387",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "x-custom-psk",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/specimens/ef33d17a-cbb7-4e4e-a8e7-e9a2b130a0c1",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"specimens",
										"ef33d17a-cbb7-4e4e-a8e7-e9a2b130a0c1"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-154c3e27-114f-47ff-81db-f865cfedaa16"
				},
				{
					"name": "sign documents",
					"id": "15381251-e64b75bf-533e-41ca-b84d-8a210e58c274",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "image/jpeg",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "'0JTQvtC60YPQvNC10L3Rgg=='"
						},
						"url": {
							"raw": "https://storage-demo.ehealth.gov.ua/person-requests/85/e9/4b/80/ad/85cb7d61-e9d7-4bc6-80e5-ad7482bf4b89/person_request_person.PASSPORT.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Expires=7200&X-Amz-SignedHeaders=host&X-Amz-Credential=UW2KVTMKINLYBM0A%2F20240808%2Fs3-demo%2Fs3%2Faws4_request&X-Amz-Date=20240808T105633Z&X-Amz-Signature=63ea23a5e4ceaad386df2012a373b88e00fcb4aa8a39fd589719b782ffc25d47",
							"protocol": "https",
							"host": [
								"storage-demo",
								"ehealth",
								"gov",
								"ua"
							],
							"path": [
								"person-requests",
								"85",
								"e9",
								"4b",
								"80",
								"ad",
								"85cb7d61-e9d7-4bc6-80e5-ad7482bf4b89",
								"person_request_person.PASSPORT.jpeg"
							],
							"query": [
								{
									"key": "X-Amz-Algorithm",
									"value": "AWS4-HMAC-SHA256"
								},
								{
									"key": "X-Amz-Expires",
									"value": "7200"
								},
								{
									"key": "X-Amz-SignedHeaders",
									"value": "host"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								},
								{
									"key": "X-Amz-Credential",
									"value": "UW2KVTMKINLYBM0A%2F20240808%2Fs3-demo%2Fs3%2Faws4_request"
								},
								{
									"key": "X-Amz-Date",
									"value": "20240808T105633Z"
								},
								{
									"key": "X-Amz-Signature",
									"value": "63ea23a5e4ceaad386df2012a373b88e00fcb4aa8a39fd589719b782ffc25d47"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-e6f89521-11a9-4da9-bb10-1b8e156cfa83"
		},
		{
			"name": "Care Plan",
			"item": [
				{
					"name": "Care Plan Activity",
					"item": [
						{
							"name": "Get Care Plan Activity by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "591b7c7c-78cd-40b4-9a5a-56371db3c2ce",
										"exec": [
											"const resData = pm.response.json().data;\r",
											"\r",
											"// Копія з оновленим статус різоном всередині detail\r",
											"const finalJson = {\r",
											"  ...resData,\r",
											"  detail: {\r",
											"    ...resData.detail,\r",
											"    status_reason: {\r",
											"      coding: [\r",
											"        {\r",
											"          system: \"eHealth/care_plan_activity_cancel_reasons\",\r",
											"          code: \"entered_in_error\"\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  }\r",
											"};\r",
											"\r",
											"pm.visualizer.set(`\r",
											"  <style>\r",
											"    pre {\r",
											"      background-color: #f6f8fa;\r",
											"      padding: 16px;\r",
											"      border-radius: 5px;\r",
											"      font-family: monospace;\r",
											"      white-space: pre-wrap;\r",
											"      max-height: 500px;\r",
											"      overflow: auto;\r",
											"    }\r",
											"    button {\r",
											"      margin-bottom: 10px;\r",
											"      padding: 5px 10px;\r",
											"      border-radius: 4px;\r",
											"      border: 1px solid #ccc;\r",
											"      background-color: #e0e0e0;\r",
											"      cursor: pointer;\r",
											"    }\r",
											"    button:hover {\r",
											"      background-color: #d0d0d0;\r",
											"    }\r",
											"  </style>\r",
											"  <h3>Згенерований JSON для скасування активності плану лікування</h3>\r",
											"  <button onclick=\"copyToClipboard()\">Скопіювати JSON</button>\r",
											"  <pre id=\"jsonOutput\">{{json}}</pre>\r",
											"  <script>\r",
											"    function copyToClipboard() {\r",
											"      const text = document.getElementById('jsonOutput').innerText;\r",
											"      const textArea = document.createElement('textarea');\r",
											"      textArea.value = text;\r",
											"      document.body.appendChild(textArea);\r",
											"      textArea.select();\r",
											"      try {\r",
											"        document.execCommand('copy');\r",
											"        alert('JSON скопійовано!');\r",
											"      } catch (err) {\r",
											"        alert('Помилка копіювання: ' + err);\r",
											"      }\r",
											"      document.body.removeChild(textArea);\r",
											"    }\r",
											"  </script>\r",
											"`, {\r",
											"  json: JSON.stringify(finalJson, null, 2)\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "62f85035-74d4-4e2d-afcd-2e0b3fc8590d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-0402273e-f00c-4277-be8e-8de641a7c61c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}/activities/{{JobActivityID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"care_plans",
										"{{jobCareplanID}}",
										"activities",
										"{{JobActivityID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "PreQualify SR Care Plan Activity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c34c44d6-0c67-4089-8a86-3237dfae4237",
										"exec": [
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobConditionID');\r",
											"\r",
											"// Check if the URL is defined and contains the expected format\r",
											"if (url && url.includes('conditions/')) {\r",
											"    // Extract the ID after 'conditions/'\r",
											"    const parts = url.split('conditions/');\r",
											"    if (parts.length > 1) {\r",
											"        const jobConditionID = parts[1];\r",
											"        \r",
											"        // Log the extracted ID to the console (for debugging purposes)\r",
											"        console.log('Extracted jobConditionID:', jobConditionID);\r",
											"        \r",
											"        // Optionally, set the extracted ID as an environment variable\r",
											"        pm.globals.set('condition_extracted_id', jobConditionID);\r",
											"    } else {\r",
											"        console.error('The URL does not contain the expected format.');\r",
											"    }\r",
											"} else {\r",
											"    console.error('The global variable jobConditionID is not defined or does not contain the expected format.');\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4a38f0e1-3013-4d10-9346-32c166fe6495",
										"exec": [
											"pm.test(\"PreQualify Care Plan Activity Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"PreQualify Care Plan Activity status is VALID\", function () {\r",
											"   const resData = pm.response.json();\r",
											"    console.log(resData.data[0].status)\r",
											"    const status = resData.data[0].status;\r",
											"    pm.expect(status).to.eql(\"VALID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-5d2e4b2b-68ab-4f1a-9bfc-b70cd9d868b9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"activity\": {\r\n        \"author\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"care_plan\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"care_plan\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobCareplanID}}\"\r\n            }\r\n        },\r\n        \"detail\": {\r\n            \"kind\": \"service_request\",\r\n            \"product_reference\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"service\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"\"\r\n                    },\r\n                    \"value\": \"2a3bdbc7-98d7-4892-8f82-6572f67d3bc9\"\r\n                }\r\n            },\r\n            \"reason_code\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                            \"code\": \"E00.0\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"reason_reference\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{condition_extracted_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"goal\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/care_plan_activity_goals\",\r\n                            \"code\": \"default\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"quantity\": {\r\n                \"value\": 56,\r\n                \"system\": \"SERVICE_UNIT\",\r\n                \"code\": \"PIECE\"\r\n            },\r\n            \"scheduled_period\": {\r\n                \"start\": \"2025-06-22T10:45:16.000Z\",\r\n                \"end\": \"2025-06-25T11:00:00.000Z\"\r\n            },\r\n            \"location\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"division\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_division_id}}\"\r\n                }\r\n            },\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"daily_amount\": {\r\n                \"value\": 1.0,\r\n                \"system\": \"SERVICE_UNIT\",\r\n                \"code\": \"PIECE\"\r\n            },\r\n            \"description\": \"Some activity description\",\r\n            \"do_not_perform\": false,\r\n            \"status\": \"scheduled\"\r\n        }\r\n    },\r\n    \"programs\": [\r\n        {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"medical_program\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"0eb268fa-ab21-4df9-8d58-1bc85e393533\"\r\n            }\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}/activities/prequalify",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"care_plans",
										"{{jobCareplanID}}",
										"activities",
										"prequalify"
									]
								}
							},
							"response": []
						},
						{
							"name": "PreQualify MR Care Plan Activity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c34c44d6-0c67-4089-8a86-3237dfae4237",
										"exec": [
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobConditionID');\r",
											"\r",
											"// Check if the URL is defined and contains the expected format\r",
											"if (url && url.includes('conditions/')) {\r",
											"    // Extract the ID after 'conditions/'\r",
											"    const parts = url.split('conditions/');\r",
											"    if (parts.length > 1) {\r",
											"        const jobConditionID = parts[1];\r",
											"        \r",
											"        // Log the extracted ID to the console (for debugging purposes)\r",
											"        console.log('Extracted jobConditionID:', jobConditionID);\r",
											"        \r",
											"        // Optionally, set the extracted ID as an environment variable\r",
											"        pm.globals.set('condition_extracted_id', jobConditionID);\r",
											"    } else {\r",
											"        console.error('The URL does not contain the expected format.');\r",
											"    }\r",
											"} else {\r",
											"    console.error('The global variable jobConditionID is not defined or does not contain the expected format.');\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4a38f0e1-3013-4d10-9346-32c166fe6495",
										"exec": [
											"pm.test(\"PreQualify Care Plan Activity Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"PreQualify Care Plan Activity status is VALID\", function () {\r",
											"   const resData = pm.response.json();\r",
											"    console.log(resData.data[0].status)\r",
											"    const status = resData.data[0].status;\r",
											"    pm.expect(status).to.eql(\"VALID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-8e5998c8-b68d-423c-a6d0-ad42d0941a3d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"activity\": {\r\n        \"author\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"care_plan\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"care_plan\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{jobCareplanID}}\"\r\n            }\r\n        },\r\n        \"detail\": {\r\n            \"kind\": \"medication_request\",\r\n            \"product_reference\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"medication\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"\"\r\n                    },\r\n                    \"value\": \"1878478f-fe16-4290-b2c4-8e87ff0fec15\"\r\n                }\r\n            },\r\n            \"reason_code\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                            \"code\": \"E10.9\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"reason_reference\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"condition\"\r\n                                }\r\n                            ]\r\n                        },\r\n                        \"value\": \"{{condition_extracted_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"goal\": [\r\n                {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/care_plan_activity_goals\",\r\n                            \"code\": \"default\"\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"quantity\": {\r\n                \"value\": 10,\r\n                \"system\": \"MEDICATION_UNIT\",\r\n                \"code\": \"PIECE\"\r\n            },\r\n            \"scheduled_period\": {\r\n                \"start\": \"2025-05-01T10:00:00.000Z\",\r\n                \"end\": \"2025-05-01T10:05:00.000Z\"\r\n            },\r\n            \"location\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"division\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_division_id}}\"\r\n                }\r\n            },\r\n            \"performer\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            },\r\n            \"daily_amount\": {\r\n                \"value\": 3.5,\r\n                \"system\": \"MEDICATION_UNIT\",\r\n                \"code\": \"PIECE\"\r\n            },\r\n            \"description\": \"Some activity description\",\r\n            \"do_not_perform\": false,\r\n            \"status\": \"scheduled\"\r\n        }\r\n    },\r\n    \"programs\": [\r\n        {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"medical_program\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"f01d0d8c-bccb-4bde-a6c6-f4b873a005c2\"\r\n            }\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}/activities/prequalify",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"care_plans",
										"{{jobCareplanID}}",
										"activities",
										"prequalify"
									]
								}
							},
							"response": []
						},
						{
							"name": "SR_Dummy_care_plan_activity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "da777cdb-92a6-423d-bfd3-e52397b83433",
										"exec": [
											"const uuid = require('uuid');\r",
											"const caraPlanActivityId = uuid.v4();\r",
											"\r",
											"pm.globals.set(\"care_plan_activity_id\", caraPlanActivityId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73dbfc2f-f87a-4965-bb6e-3d4bdc5deb85",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(`Care Plan Activity content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('care_plan_activity_signed_content', resData.signed_content);\r",
											"});\r",
											"\r",
											"\r",
											"// if(resData.signed_content){\r",
											"//     pm.globals.set('care_plan_activity_signed_content', resData.signed_content)\r",
											"// }"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-8dcee2ee-f1e9-472a-b616-cdb5344c2b63",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{care_plan_activity_id}}\",\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"care_plan\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"care_plan\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{jobCareplanID}}\"\r\n        }\r\n    },\r\n    \"detail\": {\r\n        \"kind\": \"service_request\",\r\n        \"product_reference\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"service\"\r\n                        }\r\n                    ],\r\n                    \"text\": \"\"\r\n                },\r\n                \"value\": \"2a3bdbc7-98d7-4892-8f82-6572f67d3bc9\"\r\n            }\r\n        },\r\n        \"reason_code\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                        \"code\": \"E10.9\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"reason_reference\": [\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"condition\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{condition_extracted_id}}\"\r\n                }\r\n            }\r\n        ],\r\n        \"goal\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/care_plan_activity_goals\",\r\n                        \"code\": \"default\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"quantity\": {\r\n            \"value\": 56,\r\n            \"system\": \"SERVICE_UNIT\",\r\n            \"code\": \"PIECE\"\r\n        },\r\n        \"scheduled_period\": {\r\n            \"start\": \"2025-06-22T10:45:16.000Z\",\r\n            \"end\": \"2025-06-25T11:00:00.000Z\"\r\n        },\r\n        \"location\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_division_id}}\"\r\n            }\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"description\": \"Some activity description 123\",\r\n        \"do_not_perform\": false,\r\n        \"program\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"medical_program\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"0eb268fa-ab21-4df9-8d58-1bc85e393533\"\r\n            }\r\n        },\r\n        \"status\": \"scheduled\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-care-plan-activity-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-care-plan-activity-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "MR_Dummy_care_plan_activity",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');\r",
											"const caraPlanActivityId = uuid.v4();\r",
											"\r",
											"pm.globals.set(\"care_plan_activity_id\", caraPlanActivityId);"
										],
										"type": "text/javascript",
										"id": "e12dec60-3ac2-43c0-ad9f-8d0f19bf302b"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const resData = JSON.parse(responseBody);\r",
											"\r",
											"if(resData.signed_content){\r",
											"    pm.globals.set('care_plan_activity_signed_content', resData.signed_content)\r",
											"}"
										],
										"type": "text/javascript",
										"id": "bfe67303-d9dc-4611-964f-1a8beb280cb5"
									}
								}
							],
							"id": "15381251-81e16424-7acc-4487-87df-0f142ed99906",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{care_plan_activity_id}}\",\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"care_plan\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"care_plan\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{jobCareplanID}}\"\r\n        }\r\n    },\r\n    \"detail\": {\r\n        \"kind\": \"medication_request\",\r\n        \"product_reference\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"medication\"\r\n                        }\r\n                    ],\r\n                    \"text\": \"Тестовий текст\"\r\n                },\r\n                \"value\": \"00016d96-2638-4128-9484-a3ff1fe745df\"\r\n            }\r\n        },\r\n        \"reason_code\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                        \"code\": \"E10.9\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"reason_reference\": [\r\n            {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"condition\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"value\": \"{{condition_extracted_id}}\"\r\n                }\r\n            }\r\n        ],\r\n        \"goal\": [\r\n            {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/care_plan_activity_goals\",\r\n                        \"code\": \"default\"\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"quantity\": {\r\n            \"value\": 56,\r\n            \"code\": \"PIECE\",\r\n            \"system\": \"MEDICATION_UNIT\"\r\n        },\r\n        \"scheduled_period\": {\r\n            \"start\": \"2024-06-20T10:45:16.000Z\",\r\n            \"end\": \"2024-06-24T11:00:00.000Z\"\r\n        },\r\n        \"location\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"division\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"f40ca1ea-e169-4db5-92ec-91d6269f3795\"\r\n            }\r\n        },\r\n        \"performer\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"daily_amount\": {\r\n            \"value\": 1.0,\r\n            \"system\": \"MEDICATION_UNIT\",\r\n            \"code\": \"PIECE\"\r\n        },\r\n        \"description\": \"Some activity description 123\",\r\n        \"do_not_perform\": false,\r\n        \"program\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"medical_program\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"1318eabc-1a1a-42f6-8450-61e11c19eede\"\r\n            }\r\n        },\r\n        \"status\": \"scheduled\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-care-plan-activity-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-care-plan-activity-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Care Plan Activity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6b6a9b64-e27e-4641-8248-5c47242c6550",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"pm.test(\"Care Plan Activity Response status code is 202\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(202);\r",
											"});\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Care Plan Activity Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"            pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                 pm.test(`Care Plan Activity Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    // Extract the part after \"/api/\"\r",
											"                    const href = link.href.replace('/api/', '');\r",
											"\r",
											"                    // Set the link entity to global variables\r",
											"                    acc[link.entity] = href;\r",
											"\r",
											"                    if (href.includes('activities/')) {\r",
											"                        const activityId = href.split('/')[5]; // Extract the activity ID\r",
											"                        acc['jobActivity'] = activityId;\r",
											"                    }\r",
											"\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, value]) => {\r",
											"                    const globalName = `${entity.charAt(0).toUpperCase() + entity.slice(1)}ID`;\r",
											"                    pm.globals.set(globalName, value);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Care Plan Activity Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Care Plan Activity Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Care Plan Activity Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "09695b0f-99c8-429f-9464-575da3128696",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-36aa3fb7-a61b-4469-bc40-1b1575f08489",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"{{care_plan_activity_signed_content}}\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}/activities",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"care_plans",
										"{{jobCareplanID}}",
										"activities"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Care Plan Activity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d396dd81-df0b-4ae4-af69-4258748073ea",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Cancel Care Plan Activity Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"           pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Cancel Care Plan Activity Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    acc[link.entity] = link.href.replace('/api/', '');\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, href]) => {\r",
											"                    const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
											"                    pm.globals.set(globalName, href);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Cancel Care Plan Activity Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Cancel Care Plan Activity Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Cancel Care Plan Activity Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2b9e7b16-dd0e-416e-89c9-9a7e32b9be07",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-a3f5b2a9-5078-4400-83a5-0c6c6bc30880",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}/activities/{{JobActivityID}}/actions/cancel",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"care_plans",
										"{{jobCareplanID}}",
										"activities",
										"{{JobActivityID}}",
										"actions",
										"cancel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete Care Plan Activity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d396dd81-df0b-4ae4-af69-4258748073ea",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Encounter Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"           pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Encounter Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    acc[link.entity] = link.href.replace('/api/', '');\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, href]) => {\r",
											"                    const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
											"                    pm.globals.set(globalName, href);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Encounter Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Encounter Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Encounter Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2b9e7b16-dd0e-416e-89c9-9a7e32b9be07",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-47f0f742-9fd7-4c23-b815-36382c2a07cc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}/activities/{{JobActivityID}}/actions/complete",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"care_plans",
										"{{jobCareplanID}}",
										"activities",
										"{{JobActivityID}}",
										"actions",
										"complete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Care Plan activities",
							"id": "15381251-70cd750b-531c-4b83-a14b-300c8e8e4bcc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}/activities",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"care_plans",
										"{{jobCareplanID}}",
										"activities"
									],
									"query": [
										{
											"key": "author",
											"value": "9183a36b-4d45-4244-9339-63d81cd08d9c",
											"disabled": true
										},
										{
											"key": "kind",
											"value": "service_request",
											"disabled": true
										},
										{
											"key": "status",
											"value": "scheduled",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "5",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-056a7075-57b4-479b-96fd-2fc4138184ec"
				},
				{
					"name": "Care_plan_dummy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid');\r",
									"const carePlanId = uuid.v4();\r",
									"\r",
									"pm.globals.set(\"care_plan_id\", carePlanId);\r",
									"\r",
									"\r",
									"// Retrieve the URL from the global variable\r",
									"const url = pm.globals.get('jobEncounterID');\r",
									"\r",
									"// Check if the URL is defined and contains the expected format\r",
									"if (url && url.includes('encounters/')) {\r",
									"    // Extract the ID after 'encounters/'\r",
									"    const parts = url.split('encounters/');\r",
									"    if (parts.length > 1) {\r",
									"        const jobEncounterID = parts[1];\r",
									"        \r",
									"        // Log the extracted ID to the console (for debugging purposes)\r",
									"        console.log('Extracted jobEncounterID:', jobEncounterID);\r",
									"        \r",
									"        // Optionally, set the extracted ID as an environment variable\r",
									"        pm.globals.set('encounter_extracted_id', jobEncounterID);\r",
									"    } else {\r",
									"        console.error('The URL does not contain the expected format.');\r",
									"    }\r",
									"} else {\r",
									"    console.error('The global variable jobEncounterID is not defined or does not contain the expected format.');\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"id": "4143da1f-aaad-4977-bbdf-0ae8bf3d5c86"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resData = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(`Care Plan content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"    pm.expect(resData).to.have.property('signed_content');\r",
									"    pm.globals.set('care_plan_signed_content', resData.signed_content);\r",
									"});\r",
									"\r",
									"\r",
									"// if(resData.signed_content){\r",
									"//     pm.globals.set('care_plan_signed_content', resData.signed_content)\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {},
								"id": "a4ba6ebe-13d9-460e-92fe-c5d3679c90bd"
							}
						}
					],
					"id": "15381251-b28989fb-34c1-4af1-91d6-86af98ae99dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{care_plan_id}}\",\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"eHealth/care_plan_categories\",\r\n                \"code\": \"class_4\"\r\n            }\r\n        ]\r\n    },\r\n    \"title\": \"План Лікуваня\",\r\n    \"description\": \"123\",\r\n    \"period\": {\r\n        \"start\": \"2024-10-09T08:45:16.000Z\",\r\n        \"end\": \"2024-10-19T11:00:00.000Z\"\r\n    },\r\n    \"note\": \"123\",\r\n    \"intent\": \"order\",\r\n    \"encounter\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{encounter_extracted_id}}\"\r\n        }\r\n    },\r\n    \"addresses\": [\r\n        {\r\n            \"coding\": [\r\n                {\r\n                   \"system\": \"eHealth/ICD10_AM/condition_codes\",\r\n                        \"code\": \"E10.9\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"terms_of_service\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"PROVIDING_CONDITION\",\r\n                \"code\": \"OUTPATIENT\"\r\n            }\r\n        ]\r\n    },\r\n    \"status\": \"new\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/create-care-plan-signed-content",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"create-care-plan-signed-content"
							]
						}
					},
					"response": []
				},
				{
					"name": "Care_plan_dummy_PHC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4143da1f-aaad-4977-bbdf-0ae8bf3d5c86",
								"exec": [
									"const uuid = require('uuid');\r",
									"const carePlanId = uuid.v4();\r",
									"\r",
									"pm.globals.set(\"care_plan_id\", carePlanId);\r",
									"\r",
									"\r",
									"// Retrieve the URL from the global variable\r",
									"const url = pm.globals.get('jobEncounterID');\r",
									"\r",
									"// Check if the URL is defined and contains the expected format\r",
									"if (url && url.includes('encounters/')) {\r",
									"    // Extract the ID after 'encounters/'\r",
									"    const parts = url.split('encounters/');\r",
									"    if (parts.length > 1) {\r",
									"        const jobEncounterID = parts[1];\r",
									"        \r",
									"        // Log the extracted ID to the console (for debugging purposes)\r",
									"        console.log('Extracted jobEncounterID:', jobEncounterID);\r",
									"        \r",
									"        // Optionally, set the extracted ID as an environment variable\r",
									"        pm.globals.set('encounter_extracted_id', jobEncounterID);\r",
									"    } else {\r",
									"        console.error('The URL does not contain the expected format.');\r",
									"    }\r",
									"} else {\r",
									"    console.error('The global variable jobEncounterID is not defined or does not contain the expected format.');\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a4ba6ebe-13d9-460e-92fe-c5d3679c90bd",
								"exec": [
									"const resData = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(`Care Plan content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"    pm.expect(resData).to.have.property('signed_content');\r",
									"    pm.globals.set('care_plan_signed_content', resData.signed_content);\r",
									"});\r",
									"\r",
									"\r",
									"// if(resData.signed_content){\r",
									"//     pm.globals.set('care_plan_signed_content', resData.signed_content)\r",
									"// }"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-80e5bd08-429c-42d5-a06b-b24ccc7d9ff3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{care_plan_id}}\",\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"eHealth/care_plan_categories\",\r\n                \"code\": \"class_19\"\r\n            }\r\n        ]\r\n    },\r\n    \"title\": \"План Лікуваня\",\r\n    \"description\": \"123\",\r\n    \"period\": {\r\n        \"start\": \"2025-06-21T08:45:16.000Z\",\r\n        \"end\": \"2025-06-29T11:00:00.000Z\"\r\n    },\r\n    \"note\": \"123\",\r\n    \"intent\": \"order\",\r\n    \"encounter\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{jobEncounterID}}\"\r\n        }\r\n    },\r\n    \"addresses\": [\r\n        {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/ICPC2/condition_codes\",\r\n                    \"code\": \"S14\"\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"terms_of_service\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"PROVIDING_CONDITION\",\r\n                \"code\": \"OUTPATIENT\"\r\n            }\r\n        ]\r\n    },\r\n    \"status\": \"new\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/create-care-plan-signed-content",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"create-care-plan-signed-content"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Care Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1fcebe9b-868e-4dd5-8a07-eb23cb408dd5",
								"exec": [
									"// 🔠 Format entity name from path segment (e.g., care_plans → Care Plans)\r",
									"function formatEntityTitle(pathSegment) {\r",
									"    if (!pathSegment) return 'Job';\r",
									"    return pathSegment\r",
									"        .split('_')\r",
									"        .map(part => part.charAt(0).toUpperCase() + part.slice(1))\r",
									"        .join(' ');\r",
									"}\r",
									"\r",
									"// 🧠 Determine resource label dynamically (e.g., care_plans, service_requests, etc.)\r",
									"const resourceType = pm.request.url.path[3];\r",
									"const resourceLabel = formatEntityTitle(resourceType);\r",
									"\r",
									"// 📊 Helper to show formatted JSON in Postman visualizer\r",
									"function displayResponse(title, data) {\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"// ✅ Basic test\r",
									"pm.test(`${resourceLabel} initial response is 202`, function () {\r",
									"    pm.expect(pm.response.code).to.eql(202);\r",
									"});\r",
									"\r",
									"// 📦 Parse response\r",
									"const resData = pm.response.json();\r",
									"if (resData && resData.error) {\r",
									"    displayResponse(`${resourceLabel} Response Error Details`, resData.error);\r",
									"    return;\r",
									"}\r",
									"\r",
									"// 🔗 Get job ID from href\r",
									"const href = resData.data.links?.[0]?.href || '';\r",
									"const jobId = href.split('/jobs/')[1];\r",
									"console.log(\"Extracted jobId:\", jobId);\r",
									"pm.environment.set('retryCount', 0);\r",
									"\r",
									"// 🔁 Recursive job checker\r",
									"function checkJobStatus(jobId) {\r",
									"    const url = `${pm.globals.get('host')}/api/jobs/${jobId}`;\r",
									"    const maxRetries = 3;\r",
									"\r",
									"    pm.sendRequest({\r",
									"        method: 'GET',\r",
									"        url: url,\r",
									"        header: {\r",
									"            'Content-Type': 'application/json',\r",
									"            'Authorization': `Bearer ${pm.environment.get('access_token')}`,\r",
									"            'api-key': `${pm.environment.get('mis_client_secret')}`,\r",
									"            'X-Custom-PSK': `${pm.globals.get('x-custom-psk')}`\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"        pm.test(`${resourceLabel} job status response is 200 or 303`, function () {\r",
									"            pm.expect([200, 303]).to.include(res.code);\r",
									"        });\r",
									"\r",
									"        if (err) {\r",
									"            displayResponse(`${resourceLabel} Job Request Error`, { error: err.message });\r",
									"            return;\r",
									"        }\r",
									"\r",
									"        const responseBody = res.json();\r",
									"        const jobStatus = responseBody.data.status;\r",
									"        console.log(`${resourceLabel} Job Status:`, jobStatus);\r",
									"\r",
									"        if (jobStatus === 'processed') {\r",
									"            // 🟢 Final test\r",
									"            pm.test(`${resourceLabel} Job Processed (303 expected)`, function () {\r",
									"                pm.expect(res.code).to.eql(303);\r",
									"            });\r",
									"\r",
									"            // 💾 Save job-related resource IDs to globals\r",
									"            const links = responseBody.data.links.reduce((acc, link) => {\r",
									"                const id = link.href.split('/').pop();\r",
									"                acc[link.entity] = acc[link.entity] || [];\r",
									"                acc[link.entity].push(id);\r",
									"                return acc;\r",
									"            }, {});\r",
									"\r",
									"            Object.entries(links).forEach(([entity, ids]) => {\r",
									"                ids.forEach((id, index) => {\r",
									"                    const capitalized = entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '');\r",
									"                    const varName = ids.length === 1\r",
									"                        ? `job${capitalized}ID`\r",
									"                        : `job${capitalized}ID_${index + 1}`;\r",
									"                    pm.globals.set(varName, id);\r",
									"                });\r",
									"            });\r",
									"\r",
									"            displayResponse(`${resourceLabel} Job Response Details`, responseBody.data);\r",
									"        } else {\r",
									"            // 🔄 Retry until limit reached\r",
									"            let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
									"\r",
									"            if (retryCount < maxRetries) {\r",
									"                retryCount++;\r",
									"                pm.environment.set('retryCount', retryCount);\r",
									"                console.log(`Retrying ${resourceLabel} job... Attempt ${retryCount}`);\r",
									"                setTimeout(() => checkJobStatus(jobId), 1000);\r",
									"\r",
									"                displayResponse(`${resourceLabel} Job Status Pending`, responseBody.data);\r",
									"            } else {\r",
									"                console.warn(`❌ Max retries reached for ${resourceLabel} job.`);\r",
									"                const title = responseBody.data.error\r",
									"                    ? `${resourceLabel} Job Error Details`\r",
									"                    : `Final ${resourceLabel} Job Status Check`;\r",
									"                displayResponse(title, responseBody.data);\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"// ▶️ Start job polling\r",
									"checkJobStatus(jobId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "03851666-afd2-4531-bc08-728bb23d2043",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-5a8d5c14-42d3-49e4-b4a8-ab6ddee7372e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"signed_data\": \"{{care_plan_signed_content}}\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"care_plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Care Plan by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a639bef-50d4-435e-8dc8-292e4472acf7",
								"exec": [
									"const resData = pm.response.json().data;\r",
									"\r",
									"// Копія всіх полів з респонсу\r",
									"const finalJson = {\r",
									"  ...resData,\r",
									"  status: \"new\", // змінено статус\r",
									"  status_reason: {\r",
									"    coding: [\r",
									"      {\r",
									"        system: \"eHealth/care_plan_cancel_reasons\",\r",
									"        code: \"entered_in_error\"\r",
									"      }\r",
									"    ]\r",
									"  }\r",
									"};\r",
									"\r",
									"pm.visualizer.set(`\r",
									"  <style>\r",
									"    pre {\r",
									"      background-color: #f6f8fa;\r",
									"      padding: 16px;\r",
									"      border-radius: 5px;\r",
									"      font-family: monospace;\r",
									"      white-space: pre-wrap;\r",
									"      max-height: 500px;\r",
									"      overflow: auto;\r",
									"    }\r",
									"    button {\r",
									"      margin-bottom: 10px;\r",
									"      padding: 5px 10px;\r",
									"      border-radius: 4px;\r",
									"      border: 1px solid #ccc;\r",
									"      background-color: #e0e0e0;\r",
									"      cursor: pointer;\r",
									"    }\r",
									"    button:hover {\r",
									"      background-color: #d0d0d0;\r",
									"    }\r",
									"  </style>\r",
									"  <h3>Згенерований JSON</h3>\r",
									"  <button onclick=\"copyToClipboard()\">Скопіювати JSON</button>\r",
									"  <pre id=\"jsonOutput\">{{json}}</pre>\r",
									"  <script>\r",
									"    function copyToClipboard() {\r",
									"      const text = document.getElementById('jsonOutput').innerText;\r",
									"      const textArea = document.createElement('textarea');\r",
									"      textArea.value = text;\r",
									"      document.body.appendChild(textArea);\r",
									"      textArea.select();\r",
									"      try {\r",
									"        document.execCommand('copy');\r",
									"        alert('JSON скопійовано!');\r",
									"      } catch (err) {\r",
									"        alert('Помилка копіювання: ' + err);\r",
									"      }\r",
									"      document.body.removeChild(textArea);\r",
									"    }\r",
									"  </script>\r",
									"`, {\r",
									"  json: JSON.stringify(finalJson, null, 2)\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1e1cac5b-d073-4673-93cf-2264a4ad8de4",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "15381251-09669746-8123-4884-a8a9-25c17f5775e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"care_plans",
								"{{jobCareplanID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get medication requests by search params",
					"id": "15381251-7fe39319-d2e3-4061-932d-966b9819afb7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/persons/6a524088-c3f6-44ef-bcea-12a8e2900431/medication_requests?legal_entity_id=0dccb76f-3ed0-40f4-8f73-e95e2f91ea29&page=1&page_size=50&care_plan_id=eb487aaa-cfba-4c5a-bbbd-17117d30fe78",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"persons",
								"6a524088-c3f6-44ef-bcea-12a8e2900431",
								"medication_requests"
							],
							"query": [
								{
									"key": "legal_entity_id",
									"value": "0dccb76f-3ed0-40f4-8f73-e95e2f91ea29"
								},
								{
									"key": "employee_id",
									"value": "7124259c-eeb1-4cbb-acac-ada2162675d1",
									"disabled": true
								},
								{
									"key": "status",
									"value": "ACTIVE",
									"disabled": true
								},
								{
									"key": "request_number",
									"value": "0000-243P-1X53-EH38",
									"disabled": true
								},
								{
									"key": "created_from",
									"value": "2017-08-17",
									"disabled": true
								},
								{
									"key": "created_to",
									"value": "2017-08-30",
									"disabled": true
								},
								{
									"key": "medication_id",
									"value": "b075f148-7f93-4fc2-b2ec-2d81b19a9b5b",
									"disabled": true
								},
								{
									"key": "intent",
									"value": "order",
									"disabled": true
								},
								{
									"key": "encounter_id",
									"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5",
									"disabled": true
								},
								{
									"key": "episode_id",
									"value": "6f305d0e-1758-4920-9167-d4f97225ad7e",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "care_plan_id",
									"value": "eb487aaa-cfba-4c5a-bbbd-17117d30fe78"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Care Plans by requisition",
					"id": "15381251-3b341890-58b9-445f-bce7-fc95ebed32e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/care_plans?requisition=4596-9721-7334-3969",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"care_plans"
							],
							"query": [
								{
									"key": "requisition",
									"value": "4596-9721-7334-3969"
								},
								{
									"key": "status",
									"value": "active",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Care Plans by search params",
					"id": "15381251-5765d007-7f2a-4fa9-b097-e47123588a9e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host_demo}}/api/patients/{{patient_id_from_episode}}/care_plans",
							"host": [
								"{{host_demo}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"care_plans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Care Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e30bb3c-46e8-4256-87ba-e60d8d009c3d",
								"exec": [
									"function displayResponse(title, data) {\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"// Get the response body from the main request\r",
									"const resBody = pm.response.text();\r",
									"const resData = JSON.parse(resBody);\r",
									"\r",
									"if (resData && resData.error) {\r",
									"    displayResponse('Encounter Response Error Details', resData.error);\r",
									"}\r",
									"\r",
									"const href = resData.data.links[0].href;\r",
									"console.log(\"Extracted href:\", href);\r",
									"\r",
									"// Extract the job ID from the href\r",
									"const number = href.split('/jobs/')[1];\r",
									"console.log(\"Extracted number:\", number);\r",
									"\r",
									"// Initialize retry counter in the environment\r",
									"pm.environment.set('retryCount', 0);\r",
									"\r",
									"// Function to check job status\r",
									"function checkJobStatus(jobId) {\r",
									"\r",
									"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
									"    const maxRetries = 3; // Set the maximum number of retries\r",
									"\r",
									"    pm.sendRequest({\r",
									"        method: 'GET',\r",
									"        url: url,\r",
									"        header: {\r",
									"            'Content-Type': 'application/json',\r",
									"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
									"            'api-key': '30276e63617461a185ec',\r",
									"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"\r",
									"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
									"           pm.expect([200, 303]).to.include(res.code);\r",
									"        });\r",
									"\r",
									"        if (err) {\r",
									"            displayResponse('Request Error', { error: err.message });\r",
									"            console.error('Error checking job status:', err);\r",
									"        } else {\r",
									"\r",
									"            const responseBody = res.json();\r",
									"            console.log('Job Status:', responseBody.data.status);\r",
									"\r",
									"            if (responseBody.data.status === 'processed') {\r",
									"\r",
									"                pm.test(`Encounter Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
									"                    pm.expect(res.code).to.eql(303);\r",
									"                });\r",
									"\r",
									"                const links = responseBody.data.links.reduce((acc, link) => {\r",
									"                    acc[link.entity] = link.href.replace('/api/', '');\r",
									"                    return acc;\r",
									"                }, {});\r",
									"\r",
									"                // Iterate over the links object and set globals dynamically\r",
									"                Object.entries(links).forEach(([entity, href]) => {\r",
									"                    const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
									"                    pm.globals.set(globalName, href);\r",
									"                });\r",
									"\r",
									"\r",
									"                displayResponse('Encounter Job Response Details', responseBody.data);\r",
									"            } else {\r",
									"\r",
									"                // Retrieve the current retry count\r",
									"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
									"\r",
									"                if (retryCount < maxRetries) {\r",
									"                    // Increment the retry count and set it back to the environment\r",
									"                    retryCount++;\r",
									"                    pm.environment.set('retryCount', retryCount);\r",
									"\r",
									"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
									"\r",
									"                    setTimeout(() => {\r",
									"                        checkJobStatus(jobId);\r",
									"                    }, 1000);\r",
									"\r",
									"                    displayResponse('Encounter Job Response Details2', responseBody.data);\r",
									"\r",
									"                } else {\r",
									"                    console.log('Maximum retry limit reached.');\r",
									"                    displayResponse(responseBody.data.error ? 'Encounter Error Details' : 'Final Job Status Check', responseBody.data);\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"// Call the function with the job ID\r",
									"checkJobStatus(number);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "230ad0b0-4575-4a55-8ca0-d04b9cb5a807",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "15381251-0814dfda-85f0-4201-897f-23441015ddba",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/care_plans/{{jobCareplanID}}/actions/cancel",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"care_plans",
								"{{jobCareplanID}}",
								"actions",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Complete Care Plan",
					"id": "15381251-0bf37ba3-9fe1-49b0-9754-28b3a3163a35",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status_reason\": {\r\n    \"coding\": [\r\n      {\r\n        \"system\": \"eHealth/care_plan_complete_reasons\",\r\n        \"code\": \"some code\"\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/patients/87841aa5-2f3d-4f18-bf15-0639f37b9fd2/care_plans/fb8e0af4-b58a-4ee2-8101-72c60f593af4/actions/complete",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"87841aa5-2f3d-4f18-bf15-0639f37b9fd2",
								"care_plans",
								"fb8e0af4-b58a-4ee2-8101-72c60f593af4",
								"actions",
								"complete"
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-02331f35-0cdb-4c9d-9074-59c1b85f82df"
		},
		{
			"name": "Approvals",
			"item": [
				{
					"name": "Create approval",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8c074e00-cae0-468f-b715-083eb923758f",
								"exec": [
									"const patientId = pm.globals.get('patient_id_from_episode');\r",
									"const url = `https://api-demo.ehealth.gov.ua/api/persons/${patientId}/authentication_methods`;\r",
									"const accessToken = pm.environment.get('access_token');\r",
									"\r",
									"function displayResponse(title, data) {\r",
									"    console.log(title, data)\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: url,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"        'Authorization': `Bearer ${accessToken}`,\r",
									"        'api-key': '30276e63617461a185ec',\r",
									"        'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err) {\r",
									"        console.error('Error in request:', err);\r",
									"    } else {\r",
									"        console.log('Response Status:', res.status);\r",
									"        console.log('Response Body:', res.text());\r",
									"\r",
									"        // Optional: Process the response data if needed\r",
									"        try {\r",
									"            const responseData = res.json();\r",
									"\r",
									"            // Extract the ID from the response data\r",
									"            if (responseData.data && responseData.data.length > 0) {\r",
									"                const id = responseData.data[0].id;\r",
									"\r",
									"                // Set the extracted ID in the Postman globals\r",
									"                pm.globals.set('patient_authentication_methods_in_approval', id);\r",
									"\r",
									"                displayResponse('Patient authentication methods in approval details', responseData)\r",
									"                console.log('Global Variable \"authenticationMethodID\" set to:', id);\r",
									"            } else {\r",
									"                console.log('No data found in response.');\r",
									"            }\r",
									"\r",
									"            console.log('Parsed Response Data:', responseData.data);\r",
									"        } catch (parseError) {\r",
									"            console.error('Error parsing response JSON:', parseError);\r",
									"        }\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8dbd2333-f871-44ca-885d-625a46fa89bf",
								"exec": [
									"function displayResponse(title, data) {\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.test(\"Approval Response status code is 202\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(202);\r",
									"});\r",
									"\r",
									"// Get the response body from the main request\r",
									"const resBody = pm.response.text();\r",
									"const resData = JSON.parse(resBody);\r",
									"\r",
									"if (resData && resData.error) {\r",
									"    displayResponse('Create Approval Response Error Details', resData.error);\r",
									"}\r",
									"\r",
									"const href = resData.data.links[0].href;\r",
									"console.log(\"Extracted href:\", href);\r",
									"\r",
									"// Extract the job ID from the href\r",
									"const number = href.split('/jobs/')[1];\r",
									"console.log(\"Extracted number:\", number);\r",
									"\r",
									"// Initialize retry counter in the environment\r",
									"pm.environment.set('retryCount', 0);\r",
									"\r",
									"// Function to check job status\r",
									"function checkJobStatus(jobId) {\r",
									"\r",
									"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
									"    const maxRetries = 3; // Set the maximum number of retries\r",
									"\r",
									"    pm.sendRequest({\r",
									"        method: 'GET',\r",
									"        url: url,\r",
									"        header: {\r",
									"            'Content-Type': 'application/json',\r",
									"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
									"            'api-key': '30276e63617461a185ec',\r",
									"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"\r",
									"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
									"            pm.expect([200, 303]).to.include(res.code);\r",
									"        });\r",
									"\r",
									"        if (err) {\r",
									"            displayResponse('Request Error', { error: err.message });\r",
									"            console.error('Error checking job status:', err);\r",
									"        } else {\r",
									"\r",
									"            const responseBody = res.json();\r",
									"            console.log('Job Status:', responseBody.data.status);\r",
									"\r",
									"            if (responseBody.data.status === 'processed') {\r",
									"\r",
									"                // const links = responseBody.data.links.reduce((acc, link) => {\r",
									"                //     acc[link.entity] = link.href.replace('/api/', '');\r",
									"                //     return acc;\r",
									"                // }, {});\r",
									"\r",
									"                // // Iterate over the links object and set globals dynamically\r",
									"                // Object.entries(links).forEach(([entity, href]) => {\r",
									"                //     const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
									"                //     pm.globals.set(globalName, href);\r",
									"                // });\r",
									"                pm.test(`Approval Job Success. Response status is 200 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
									"                    pm.expect(res.code).to.eql(200);\r",
									"                });\r",
									"\r",
									"                const approvalId = responseBody.data.response_data.id\r",
									"                console.log(approvalId)\r",
									"\r",
									"                pm.globals.set('jobApprovalID', approvalId);\r",
									"                displayResponse('Create Approval Job Response Details', responseBody.data);\r",
									"            } else {\r",
									"\r",
									"                // Retrieve the current retry count\r",
									"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
									"\r",
									"                if (retryCount < maxRetries) {\r",
									"                    // Increment the retry count and set it back to the environment\r",
									"                    retryCount++;\r",
									"                    pm.environment.set('retryCount', retryCount);\r",
									"\r",
									"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
									"\r",
									"                    setTimeout(() => {\r",
									"                        checkJobStatus(jobId);\r",
									"                    }, 1000);\r",
									"\r",
									"                    displayResponse('Create Approval Job Response Details2', responseBody.data);\r",
									"\r",
									"                } else {\r",
									"                    console.log('Maximum retry limit reached.');\r",
									"                    displayResponse(responseBody.data.error ? 'Create Approval Error Details' : 'Final Job Status Check', responseBody.data);\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"// Call the function with the job ID\r",
									"checkJobStatus(number);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-5e27ddeb-d83e-4541-b98d-f6ee4f2da352",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resources\": [\r\n        {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"care_plan\"\r\n                        }\r\n                    ],\r\n                    \"text\": \"\"\r\n                },\r\n                \"value\": \"{{jobCareplanID}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"granted_to\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"access_level\": \"write\",\r\n    \"authorize_with\": \"{{patient_authentication_methods_in_approval}}\"\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/approvals",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"approvals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create approval by service request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var job_id=jsonData.data.links[0].href.substring(6);",
									"pm.environment.set(\"job_id\", job_id);"
								],
								"type": "text/javascript",
								"id": "5a78959a-76f5-4275-bffe-8ad3e5c36f58"
							}
						}
					],
					"id": "15381251-7e8f736b-9057-4702-849e-e835080b1cf1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{doctor_access_token}}",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"service_request\": {\n      \"identifier\": {\n        \"type\": {\n          \"coding\": [\n            {\n              \"system\": \"eHealth/resources\",\n              \"code\": \"service_request\"\n            }\n          ]\n        },\n        \"value\": \"{{service_request_id}}\"\n      }\n    },\n  \"granted_to\": {\n    \"identifier\": {\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"eHealth/resources\",\n            \"code\": \"employee\"\n          }\n        ]\n      },\n      \"value\": \"{{doctor_id}}\"\n    }\n  },\n  \"access_level\": \"read\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id}}/approvals",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id}}",
								"approvals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create approval by DR Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"",
									"//pm.environment.set(\"job_id\", jsonData.data.id);",
									"var job_id=jsonData.data.links[0].href.substring(6);",
									"pm.environment.set(\"job_id\", job_id);"
								],
								"type": "text/javascript",
								"id": "f757975c-c441-4223-9006-5b4191cc6209"
							}
						}
					],
					"id": "15381251-91726ecb-7e2d-4e5e-8b65-3aa804e4e787",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer aFg0aE1VbTI5N0FaWG9OQ1hycDBrdz09",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resources\": [{\n      \"identifier\": {\n        \"type\": {\n          \"coding\": [\n            {\n              \"system\": \"eHealth/resources\",\n              \"code\": \"diagnostic_report\"\n            }\n          ]\n        },\n        \"value\": \"{{dr_id_1}}\"\n      }\n    }],\n  \"granted_to\": {\n    \"identifier\": {\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"eHealth/resources\",\n            \"code\": \"employee\"\n          }\n        ]\n      },\n      \"value\": \"29acd474-f9d7-4a44-be19-f456924aca62\"\n    }\n  },\n  \"access_level\": \"read\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id}}/approvals",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id}}",
								"approvals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify approval",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ddaa497e-5a40-4530-a1df-37124c2dc5c1",
								"exec": [
									"pm.test(\"Verify Approval is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4eb191c7-8abe-4695-89bf-2d6c94067c91",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-d1bca5b9-2fd5-4a9b-85eb-f11e72a9c15c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": 9378\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/patients/520e6f47-f137-4053-9d75-b9246a538906/approvals/{{jobApprovalID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"520e6f47-f137-4053-9d75-b9246a538906",
								"approvals",
								"{{jobApprovalID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get approval details",
					"id": "15381251-04c3dce8-03a1-422c-876c-d0c7f309d71a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/approvals/{{jobApprovalID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"approvals",
								"{{jobApprovalID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get approvals",
					"id": "15381251-c4646cef-ce01-4bff-b756-2ca45dcc3b61",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/patients/421c3318-f783-4883-a030-f0c63aa7e0bf/approvals?granted_resource_type=person",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"421c3318-f783-4883-a030-f0c63aa7e0bf",
								"approvals"
							],
							"query": [
								{
									"key": "granted_to",
									"value": "7c3da506-804d-4550-8993-bf17f9ee0402",
									"disabled": true
								},
								{
									"key": "granted_resources",
									"value": "4e1085a4-fa48-4926-8e55-2e86e49c4934",
									"disabled": true
								},
								{
									"key": "granted_resource_type",
									"value": "person"
								},
								{
									"key": "reason",
									"value": "7c3da506-804d-4550-8993-bf17f9ee0401",
									"disabled": true
								},
								{
									"key": "access_level",
									"value": "read",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								},
								{
									"key": "status",
									"value": "active",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel approval",
					"id": "15381251-50cbf42d-6cdd-4239-a569-a48ee8f6b8c6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/approvals/{{jobApprovalID}}/actions/cancel",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"approvals",
								"{{jobApprovalID}}",
								"actions",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "on patient",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d2cc4b21-8f84-4f7b-8133-41cd60bb4491",
								"exec": [
									"const patientId = pm.globals.get('patient_id_from_episode');\r",
									"const url = `https://api-demo.ehealth.gov.ua/api/persons/${patientId}/authentication_methods`;\r",
									"const accessToken = pm.environment.get('access_token');\r",
									"\r",
									"function displayResponse(title, data) {\r",
									"    console.log(title, data)\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: url,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"        'Authorization': `Bearer ${accessToken}`,\r",
									"        'api-key': '30276e63617461a185ec',\r",
									"        'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err) {\r",
									"        console.error('Error in request:', err);\r",
									"    } else {\r",
									"        console.log('Response Status:', res.status);\r",
									"        console.log('Response Body:', res.text());\r",
									"\r",
									"        // Optional: Process the response data if needed\r",
									"        try {\r",
									"            const responseData = res.json();\r",
									"\r",
									"            // Extract the ID from the response data\r",
									"            if (responseData.data && responseData.data.length > 0) {\r",
									"                const id = responseData.data[0].id;\r",
									"\r",
									"                // Set the extracted ID in the Postman globals\r",
									"                pm.globals.set('patient_authentication_methods_in_approval', id);\r",
									"\r",
									"                displayResponse('Patient authentication methods in approval details', responseData)\r",
									"                console.log('Global Variable \"authenticationMethodID\" set to:', id);\r",
									"            } else {\r",
									"                console.log('No data found in response.');\r",
									"            }\r",
									"\r",
									"            console.log('Parsed Response Data:', responseData.data);\r",
									"        } catch (parseError) {\r",
									"            console.error('Error parsing response JSON:', parseError);\r",
									"        }\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ca39db6e-b9bf-49bc-8a52-66d15cfef2a0",
								"exec": [
									"function displayResponse(title, data) {\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.test(\"Approval Response status code is 202\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(202);\r",
									"});\r",
									"\r",
									"// Get the response body from the main request\r",
									"const resBody = pm.response.text();\r",
									"const resData = JSON.parse(resBody);\r",
									"\r",
									"if (resData && resData.error) {\r",
									"    displayResponse('Create Approval Response Error Details', resData.error);\r",
									"}\r",
									"\r",
									"const href = resData.data.links[0].href;\r",
									"console.log(\"Extracted href:\", href);\r",
									"\r",
									"// Extract the job ID from the href\r",
									"const number = href.split('/jobs/')[1];\r",
									"console.log(\"Extracted number:\", number);\r",
									"\r",
									"// Initialize retry counter in the environment\r",
									"pm.environment.set('retryCount', 0);\r",
									"\r",
									"// Function to check job status\r",
									"function checkJobStatus(jobId) {\r",
									"\r",
									"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
									"    const maxRetries = 3; // Set the maximum number of retries\r",
									"\r",
									"    pm.sendRequest({\r",
									"        method: 'GET',\r",
									"        url: url,\r",
									"        header: {\r",
									"            'Content-Type': 'application/json',\r",
									"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
									"            'api-key': '30276e63617461a185ec',\r",
									"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"\r",
									"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
									"            pm.expect([200, 303]).to.include(res.code);\r",
									"        });\r",
									"\r",
									"        if (err) {\r",
									"            displayResponse('Request Error', { error: err.message });\r",
									"            console.error('Error checking job status:', err);\r",
									"        } else {\r",
									"\r",
									"            const responseBody = res.json();\r",
									"            console.log('Job Status:', responseBody.data.status);\r",
									"\r",
									"            if (responseBody.data.status === 'processed') {\r",
									"\r",
									"                // const links = responseBody.data.links.reduce((acc, link) => {\r",
									"                //     acc[link.entity] = link.href.replace('/api/', '');\r",
									"                //     return acc;\r",
									"                // }, {});\r",
									"\r",
									"                // // Iterate over the links object and set globals dynamically\r",
									"                // Object.entries(links).forEach(([entity, href]) => {\r",
									"                //     const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
									"                //     pm.globals.set(globalName, href);\r",
									"                // });\r",
									"                pm.test(`Approval Job Success. Response status is 200 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
									"                    pm.expect(res.code).to.eql(200);\r",
									"                });\r",
									"\r",
									"                const approvalId = responseBody.data.response_data.id\r",
									"                console.log(approvalId)\r",
									"\r",
									"                pm.globals.set('jobApprovalID', approvalId);\r",
									"                displayResponse('Create Approval Job Response Details', responseBody.data);\r",
									"            } else {\r",
									"\r",
									"                // Retrieve the current retry count\r",
									"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
									"\r",
									"                if (retryCount < maxRetries) {\r",
									"                    // Increment the retry count and set it back to the environment\r",
									"                    retryCount++;\r",
									"                    pm.environment.set('retryCount', retryCount);\r",
									"\r",
									"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
									"\r",
									"                    setTimeout(() => {\r",
									"                        checkJobStatus(jobId);\r",
									"                    }, 1000);\r",
									"\r",
									"                    displayResponse('Create Approval Job Response Details2', responseBody.data);\r",
									"\r",
									"                } else {\r",
									"                    console.log('Maximum retry limit reached.');\r",
									"                    displayResponse(responseBody.data.error ? 'Create Approval Error Details' : 'Final Job Status Check', responseBody.data);\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"// Call the function with the job ID\r",
									"checkJobStatus(number);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-4541f783-cd8b-41f8-8542-edf8642bd8c3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"patient\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"patient\"\r\n                    }\r\n                ],\r\n                \"text\": \"\"\r\n            },\r\n            \"value\": \"00dca5c5-3068-411e-879f-0458586e862b\"\r\n        }\r\n    },\r\n    \"granted_to\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"created_by\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"access_level\": \"read\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/patients/00dca5c5-3068-411e-879f-0458586e862b/approvals",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"00dca5c5-3068-411e-879f-0458586e862b",
								"approvals"
							]
						}
					},
					"response": []
				},
				{
					"name": "on person",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d2cc4b21-8f84-4f7b-8133-41cd60bb4491",
								"exec": [
									"const patientId = pm.globals.get('patient_id_from_episode');\r",
									"const url = `https://api-demo.ehealth.gov.ua/api/persons/${patientId}/authentication_methods`;\r",
									"const accessToken = pm.environment.get('access_token');\r",
									"\r",
									"function displayResponse(title, data) {\r",
									"    console.log(title, data)\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: url,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"        'Authorization': `Bearer ${accessToken}`,\r",
									"        'api-key': '30276e63617461a185ec',\r",
									"        'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err) {\r",
									"        console.error('Error in request:', err);\r",
									"    } else {\r",
									"        console.log('Response Status:', res.status);\r",
									"        console.log('Response Body:', res.text());\r",
									"\r",
									"        // Optional: Process the response data if needed\r",
									"        try {\r",
									"            const responseData = res.json();\r",
									"\r",
									"            // Extract the ID from the response data\r",
									"            if (responseData.data && responseData.data.length > 0) {\r",
									"                const id = responseData.data[0].id;\r",
									"\r",
									"                // Set the extracted ID in the Postman globals\r",
									"                pm.globals.set('patient_authentication_methods_in_approval', id);\r",
									"\r",
									"                displayResponse('Patient authentication methods in approval details', responseData)\r",
									"                console.log('Global Variable \"authenticationMethodID\" set to:', id);\r",
									"            } else {\r",
									"                console.log('No data found in response.');\r",
									"            }\r",
									"\r",
									"            console.log('Parsed Response Data:', responseData.data);\r",
									"        } catch (parseError) {\r",
									"            console.error('Error parsing response JSON:', parseError);\r",
									"        }\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ca39db6e-b9bf-49bc-8a52-66d15cfef2a0",
								"exec": [
									"function displayResponse(title, data) {\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.test(\"Approval Response status code is 202\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(202);\r",
									"});\r",
									"\r",
									"// Get the response body from the main request\r",
									"const resBody = pm.response.text();\r",
									"const resData = JSON.parse(resBody);\r",
									"\r",
									"if (resData && resData.error) {\r",
									"    displayResponse('Create Approval Response Error Details', resData.error);\r",
									"}\r",
									"\r",
									"const href = resData.data.links[0].href;\r",
									"console.log(\"Extracted href:\", href);\r",
									"\r",
									"// Extract the job ID from the href\r",
									"const number = href.split('/jobs/')[1];\r",
									"console.log(\"Extracted number:\", number);\r",
									"\r",
									"// Initialize retry counter in the environment\r",
									"pm.environment.set('retryCount', 0);\r",
									"\r",
									"// Function to check job status\r",
									"function checkJobStatus(jobId) {\r",
									"\r",
									"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
									"    const maxRetries = 3; // Set the maximum number of retries\r",
									"\r",
									"    pm.sendRequest({\r",
									"        method: 'GET',\r",
									"        url: url,\r",
									"        header: {\r",
									"            'Content-Type': 'application/json',\r",
									"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
									"            'api-key': '30276e63617461a185ec',\r",
									"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"\r",
									"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
									"            pm.expect([200, 303]).to.include(res.code);\r",
									"        });\r",
									"\r",
									"        if (err) {\r",
									"            displayResponse('Request Error', { error: err.message });\r",
									"            console.error('Error checking job status:', err);\r",
									"        } else {\r",
									"\r",
									"            const responseBody = res.json();\r",
									"            console.log('Job Status:', responseBody.data.status);\r",
									"\r",
									"            if (responseBody.data.status === 'processed') {\r",
									"\r",
									"                // const links = responseBody.data.links.reduce((acc, link) => {\r",
									"                //     acc[link.entity] = link.href.replace('/api/', '');\r",
									"                //     return acc;\r",
									"                // }, {});\r",
									"\r",
									"                // // Iterate over the links object and set globals dynamically\r",
									"                // Object.entries(links).forEach(([entity, href]) => {\r",
									"                //     const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
									"                //     pm.globals.set(globalName, href);\r",
									"                // });\r",
									"                pm.test(`Approval Job Success. Response status is 200 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
									"                    pm.expect(res.code).to.eql(200);\r",
									"                });\r",
									"\r",
									"                const approvalId = responseBody.data.response_data.id\r",
									"                console.log(approvalId)\r",
									"\r",
									"                pm.globals.set('jobApprovalID', approvalId);\r",
									"                displayResponse('Create Approval Job Response Details', responseBody.data);\r",
									"            } else {\r",
									"\r",
									"                // Retrieve the current retry count\r",
									"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
									"\r",
									"                if (retryCount < maxRetries) {\r",
									"                    // Increment the retry count and set it back to the environment\r",
									"                    retryCount++;\r",
									"                    pm.environment.set('retryCount', retryCount);\r",
									"\r",
									"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
									"\r",
									"                    setTimeout(() => {\r",
									"                        checkJobStatus(jobId);\r",
									"                    }, 1000);\r",
									"\r",
									"                    displayResponse('Create Approval Job Response Details2', responseBody.data);\r",
									"\r",
									"                } else {\r",
									"                    console.log('Maximum retry limit reached.');\r",
									"                    displayResponse(responseBody.data.error ? 'Create Approval Error Details' : 'Final Job Status Check', responseBody.data);\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"// Call the function with the job ID\r",
									"checkJobStatus(number);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-1c7d68d4-b895-428d-b767-9a047fd13e3b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"person\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"person\"\r\n                    }\r\n                ],\r\n                \"text\": \"\"\r\n            },\r\n            \"value\": \"520e6f47-f137-4053-9d75-b9246a538906\"\r\n        }\r\n    },\r\n    \"granted_to\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"created_by\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"access_level\": \"read\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/patients/520e6f47-f137-4053-9d75-b9246a538906/approvals",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"520e6f47-f137-4053-9d75-b9246a538906",
								"approvals"
							]
						}
					},
					"response": []
				},
				{
					"name": "by_composition",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9f2948f5-9b86-4dda-aa4e-139a5467a36e",
								"exec": [
									"const patientId = pm.globals.get('patient_id_from_episode');\r",
									"const url = `https://api-demo.ehealth.gov.ua/api/persons/${patientId}/authentication_methods`;\r",
									"const accessToken = pm.environment.get('access_token');\r",
									"\r",
									"function displayResponse(title, data) {\r",
									"    console.log(title, data)\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: url,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"        'Authorization': `Bearer ${accessToken}`,\r",
									"        'api-key': '30276e63617461a185ec',\r",
									"        'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err) {\r",
									"        console.error('Error in request:', err);\r",
									"    } else {\r",
									"        console.log('Response Status:', res.status);\r",
									"        console.log('Response Body:', res.text());\r",
									"\r",
									"        // Optional: Process the response data if needed\r",
									"        try {\r",
									"            const responseData = res.json();\r",
									"\r",
									"            // Extract the ID from the response data\r",
									"            if (responseData.data && responseData.data.length > 0) {\r",
									"                const id = responseData.data[0].id;\r",
									"\r",
									"                // Set the extracted ID in the Postman globals\r",
									"                pm.globals.set('patient_authentication_methods_in_approval', id);\r",
									"\r",
									"                displayResponse('Patient authentication methods in approval details', responseData)\r",
									"                console.log('Global Variable \"authenticationMethodID\" set to:', id);\r",
									"            } else {\r",
									"                console.log('No data found in response.');\r",
									"            }\r",
									"\r",
									"            console.log('Parsed Response Data:', responseData.data);\r",
									"        } catch (parseError) {\r",
									"            console.error('Error parsing response JSON:', parseError);\r",
									"        }\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0c2de553-eebc-4c33-917d-9e44f2c8196f",
								"exec": [
									"function displayResponse(title, data) {\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.test(\"Approval Response status code is 202\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(202);\r",
									"});\r",
									"\r",
									"// Get the response body from the main request\r",
									"const resBody = pm.response.text();\r",
									"const resData = JSON.parse(resBody);\r",
									"\r",
									"if (resData && resData.error) {\r",
									"    displayResponse('Create Approval Response Error Details', resData.error);\r",
									"}\r",
									"\r",
									"const href = resData.data.links[0].href;\r",
									"console.log(\"Extracted href:\", href);\r",
									"\r",
									"// Extract the job ID from the href\r",
									"const number = href.split('/jobs/')[1];\r",
									"console.log(\"Extracted number:\", number);\r",
									"\r",
									"// Initialize retry counter in the environment\r",
									"pm.environment.set('retryCount', 0);\r",
									"\r",
									"// Function to check job status\r",
									"function checkJobStatus(jobId) {\r",
									"\r",
									"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
									"    const maxRetries = 3; // Set the maximum number of retries\r",
									"\r",
									"    pm.sendRequest({\r",
									"        method: 'GET',\r",
									"        url: url,\r",
									"        header: {\r",
									"            'Content-Type': 'application/json',\r",
									"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
									"            'api-key': '30276e63617461a185ec',\r",
									"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"\r",
									"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
									"            pm.expect([200, 303]).to.include(res.code);\r",
									"        });\r",
									"\r",
									"        if (err) {\r",
									"            displayResponse('Request Error', { error: err.message });\r",
									"            console.error('Error checking job status:', err);\r",
									"        } else {\r",
									"\r",
									"            const responseBody = res.json();\r",
									"            console.log('Job Status:', responseBody.data.status);\r",
									"\r",
									"            if (responseBody.data.status === 'processed') {\r",
									"\r",
									"                // const links = responseBody.data.links.reduce((acc, link) => {\r",
									"                //     acc[link.entity] = link.href.replace('/api/', '');\r",
									"                //     return acc;\r",
									"                // }, {});\r",
									"\r",
									"                // // Iterate over the links object and set globals dynamically\r",
									"                // Object.entries(links).forEach(([entity, href]) => {\r",
									"                //     const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
									"                //     pm.globals.set(globalName, href);\r",
									"                // });\r",
									"                pm.test(`Approval Job Success. Response status is 200 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
									"                    pm.expect(res.code).to.eql(200);\r",
									"                });\r",
									"\r",
									"                const approvalId = responseBody.data.response_data.id\r",
									"                console.log(approvalId)\r",
									"\r",
									"                pm.globals.set('jobApprovalID', approvalId);\r",
									"                displayResponse('Create Approval Job Response Details', responseBody.data);\r",
									"            } else {\r",
									"\r",
									"                // Retrieve the current retry count\r",
									"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
									"\r",
									"                if (retryCount < maxRetries) {\r",
									"                    // Increment the retry count and set it back to the environment\r",
									"                    retryCount++;\r",
									"                    pm.environment.set('retryCount', retryCount);\r",
									"\r",
									"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
									"\r",
									"                    setTimeout(() => {\r",
									"                        checkJobStatus(jobId);\r",
									"                    }, 1000);\r",
									"\r",
									"                    displayResponse('Create Approval Job Response Details2', responseBody.data);\r",
									"\r",
									"                } else {\r",
									"                    console.log('Maximum retry limit reached.');\r",
									"                    displayResponse(responseBody.data.error ? 'Create Approval Error Details' : 'Final Job Status Check', responseBody.data);\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"// Call the function with the job ID\r",
									"checkJobStatus(number);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-b881606f-0283-4f1e-af8a-a343ca51d0a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"composition\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"composition\"\r\n                    }\r\n                ],\r\n                \"text\": \"\"\r\n            },\r\n            \"value\": \"56b80b1f-04af-4c37-985a-80f6ad9b6d72\"\r\n        }\r\n    },\r\n    \"granted_to\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"created_by\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"access_level\": \"read\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/approvals",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"approvals"
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-986736ed-fd98-4cfe-b60c-dd00528b23a8"
		},
		{
			"name": "Service Requests",
			"item": [
				{
					"name": "Manage Service Requests in patient context",
					"item": [
						{
							"name": "PreQualify Service Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "590a556b-5c31-41dd-a839-4c3861f99177",
										"exec": [
											"pm.test(\"PreQualify Service Request Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"PreQualify Service Request status is VALID\", function () {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.data[0].status)\r",
											"    const status = resData.data[0].status;\r",
											"    pm.expect(status).to.eql(\"VALID\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5ebf5904-1fc4-4e9a-8523-3e795f145e79",
										"exec": [
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Check if the URL is defined and contains the expected format\r",
											"if (url && url.includes('encounters/')) {\r",
											"    // Extract the ID after 'encounters/'\r",
											"    const parts = url.split('encounters/');\r",
											"    if (parts.length > 1) {\r",
											"        const jobEncounterID = parts[1];\r",
											"        \r",
											"        // Log the extracted ID to the console (for debugging purposes)\r",
											"        console.log('Extracted jobEncounterID:', jobEncounterID);\r",
											"        \r",
											"        // Optionally, set the extracted ID as an environment variable\r",
											"        pm.globals.set('encounter_extracted_id', jobEncounterID);\r",
											"    } else {\r",
											"        console.error('The URL does not contain the expected format.');\r",
											"    }\r",
											"} else {\r",
											"    console.error('The global variable jobEncounterID is not defined or does not contain the expected format.');\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-8a0dba94-b730-4b29-a30d-dfd148bb61fa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"service_request\": {\r\n        \"status\": \"active\",\r\n        \"intent\": \"order\",\r\n        \"priority\": \"routine\",\r\n        \"category\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/SNOMED/service_request_categories\",\r\n                    \"code\": \"procedure\"\r\n                }\r\n            ]\r\n        },\r\n        \"code\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"service\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"40b2dfdf-7623-4fa5-bbfb-58a6b651ff0c\"\r\n            }\r\n        },\r\n        \"context\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"encounter\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{encounter_extracted_id}}\"\r\n            }\r\n        },\r\n        \"occurrence_period\": {\r\n            \"start\": \"2025-06-20T10:45:16.000Z\",\r\n            \"end\": \"2025-06-29T11:00:00.000Z\"\r\n        },\r\n        \"requester_employee\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"employee\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_id}}\"\r\n            }\r\n        },\r\n        \"requester_legal_entity\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"legal_entity\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{user_legal_entity}}\"\r\n            }\r\n        }\r\n    },\r\n    \"programs\": [\r\n        {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"medical_program\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"963b1410-17e8-4407-b700-044c9fc555ca\"\r\n            }\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/service_requests/prequalify",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"service_requests",
										"prequalify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dummy Service Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "af857292-d65f-4309-bf8e-6d97716b71d2",
										"exec": [
											"const uuid = require('uuid');\r",
											"const serviceRequestId = uuid.v4();\r",
											"\r",
											"pm.globals.set(\"service_request_id\", serviceRequestId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3f4f5c4e-8b95-4460-b6c5-f4661d6b1466",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(`Service Request content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('service_request_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-a55c9460-c855-4d5a-832d-d679a67bf92b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{service_request_id}}\",\r\n    \"status\": \"active\",\r\n    \"intent\": \"order\",\r\n    \"priority\": \"routine\",\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"eHealth/SNOMED/service_request_categories\",\r\n                \"code\": \"procedure\"\r\n            }\r\n        ]\r\n    },\r\n    \"code\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"service\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"40b2dfdf-7623-4fa5-bbfb-58a6b651ff0c\"\r\n        }\r\n    },\r\n    \"context\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{encounter_extracted_id}}\"\r\n        }\r\n    },\r\n    \"occurrence_period\": {\r\n        \"start\": \"2025-06-20T10:45:16.000Z\",\r\n        \"end\": \"2025-06-29T11:00:00.000Z\"\r\n    },\r\n    \"requester_employee\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"requester_legal_entity\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"legal_entity\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_legal_entity}}\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-service-request-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-service-request-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Service Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "276e56c7-4dea-4369-9c86-acfb6258f987",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"pm.test(\"Create Service Request Response status code is 202\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(202);\r",
											"});\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Create Service Request Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"            pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                 pm.test(`Create Service Request Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    // Extract the part after \"/api/\"\r",
											"                    const href = link.href.replace('/api/', '');\r",
											"\r",
											"                    // Set the link entity to global variables\r",
											"                    acc[link.entity] = href;\r",
											"\r",
											"                    if (href.includes('service_requests/')) {\r",
											"                        const activityId = href.split('/')[5]; // Extract the service requests ID\r",
											"                        acc['jobSericeRequest'] = activityId;\r",
											"                    }\r",
											"\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, value]) => {\r",
											"                    const globalName = `${entity.charAt(0).toUpperCase() + entity.slice(1)}ID`;\r",
											"                    pm.globals.set(globalName, value);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Create Service Request Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Create Service Request Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Create Service Request Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "44b80cee-c322-4c15-8133-8fbfae60fd1b",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-f8acbf99-1432-44de-9943-224203845d02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"{{service_request_signed_content}}\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/service_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"service_requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get service request Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f2ce47f-4976-4a14-8cc0-36ff70fa1615",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "37656013-2088-4f32-abec-71de7a3b2603",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-496e5e98-8c22-481b-85db-e0bfaf4b7c3e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/d1556d2a-94dd-400e-8d70-2c8e69cdb4f4/service_requests/d8ed1e96-9907-48b9-afb4-c21fc012b937",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"d1556d2a-94dd-400e-8d70-2c8e69cdb4f4",
										"service_requests",
										"d8ed1e96-9907-48b9-afb4-c21fc012b937"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Service Requests by search params",
							"id": "15381251-f1ff1c7e-f9c2-49e8-815c-488feb18c082",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/b4051549-96af-41ce-80b2-7987a67babd3/service_requests?episode_id=0df66805-d48e-4624-b597-1e08ad83661f&status=active",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"b4051549-96af-41ce-80b2-7987a67babd3",
										"service_requests"
									],
									"query": [
										{
											"key": "episode_id",
											"value": "0df66805-d48e-4624-b597-1e08ad83661f"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "requester_legal_entity",
											"value": "0dccb76f-3ed0-40f4-8f73-e95e2f91ea29",
											"disabled": true
										},
										{
											"key": "used_by_legal_entity",
											"value": "4f8a300e-65a0-47c1-9265-1f92b70bf049",
											"disabled": true
										},
										{
											"key": "code",
											"value": "9075e0e2-6b57-47fd-aff7-324806efa7e6",
											"disabled": true
										},
										{
											"key": "care_plan_id",
											"value": "8075e0e2-6b57-47fd-aff7-324806efa7e6",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Service Requests list Episode Context",
							"id": "15381251-90992e06-1512-47d7-b803-2df2d24a616c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/87841aa5-2f3d-4f18-bf15-0639f37b9fd2/episodes/df3ed6a7-f97f-4d7b-90c1-61e18659dd6e/service_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"87841aa5-2f3d-4f18-bf15-0639f37b9fd2",
										"episodes",
										"df3ed6a7-f97f-4d7b-90c1-61e18659dd6e",
										"service_requests"
									],
									"query": [
										{
											"key": "status",
											"value": "active",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel Service Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b356124a-a17e-485a-8653-069b5ab50b9c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c4971596-cf96-466a-ae7e-5a9ca4099eba",
										"exec": [
											"const personFromEpisode = pm.globals.get('patient_id_from_episode') || \"\"; //or id your patient\r",
											"const srId = pm.globals.get('JobSericeRequestID') || \"\"; //or id your service request\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    console.log(title, data)\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/patients/${personFromEpisode}/service_requests/${srId}`,\r",
											"    method: \"GET\",\r",
											"    header: {\r",
											"        \"Content-Type\": \"application/json\",\r",
											"        \"api-key\": `${pm.environment.get('mis_client_secret')}`,\r",
											"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
											"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        displayResponse('Error get SR', err);\r",
											"        console.error(\"Request Error:\", err);\r",
											"        return;\r",
											"    }\r",
											"\r",
											"    try {\r",
											"        // Parse the response\r",
											"        const responseData = res.json();\r",
											"        // Extract data from response\r",
											"        const { data } = responseData;\r",
											"\r",
											"        // Add `status_reason` field\r",
											"        data.status_reason = {\r",
											"            coding: [\r",
											"                {\r",
											"                    \"system\": \"eHealth/service_request_cancel_reasons\",\r",
											"                    \"code\": \"typo\"\r",
											"                }\r",
											"            ]\r",
											"        };\r",
											"\r",
											"        // Add `explanatory_letter` field\r",
											"        data.explanatory_letter = \"Послугу скасовано\";\r",
											"\r",
											"        pm.globals.set(\"SR_cancel_body\", JSON.stringify(data));\r",
											"\r",
											"\r",
											"        console.log(data)\r",
											"        displayResponse('SR cancel body', data);\r",
											"    } catch (parseError) {\r",
											"        console.error(\"Response parsing error. Raw body:\", res.text());\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-5072ac2f-1341-42c6-8609-6424c7a20b43",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/service_requests/{{JobSericeRequestID}}/actions/cancel",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"service_requests",
										"{{JobSericeRequestID}}",
										"actions",
										"cancel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Recall Service request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d16f5f43-885d-4f6a-9809-0bdefec1925b",
										"exec": [
											"const personFromEpisode = pm.globals.get('patient_id_from_episode') || \"\"; //or id your patient\r",
											"const srId = pm.globals.get('JobSericeRequestID') || \"\"; //or id your service request\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    console.log(title, data)\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/patients/${personFromEpisode}/service_requests/${srId}`,\r",
											"    method: \"GET\",\r",
											"    header: {\r",
											"        \"Content-Type\": \"application/json\",\r",
											"        \"api-key\": `${pm.environment.get('mis_client_secret')}`,\r",
											"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
											"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        displayResponse('Error get SR', err);\r",
											"        console.error(\"Request Error:\", err);\r",
											"        return;\r",
											"    }\r",
											"\r",
											"    try {\r",
											"        // Parse the response\r",
											"        const responseData = res.json();\r",
											"  // Extract data from response\r",
											"        const { data } = responseData;\r",
											"\r",
											"        // Add `status_reason` field\r",
											"        data.status_reason = {\r",
											"            coding: [\r",
											"                {\r",
											"                    system: \"eHealth/service_request_recall_reasons\",\r",
											"                    code: \"default\"\r",
											"                }\r",
											"            ]\r",
											"        };\r",
											"\r",
											"        // Add `explanatory_letter` field\r",
											"        data.explanatory_letter = \"Послугу відкликано\";\r",
											"\r",
											"        pm.globals.set(\"SR_recall_body\", JSON.stringify(data));\r",
											"\r",
											"\r",
											"        console.log(data)\r",
											"     displayResponse('SR recall body', data);\r",
											"    } catch (parseError) {\r",
											"        console.error(\"Response parsing error. Raw body:\", res.text());\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2fd398e2-f04f-48c0-83d4-cfc0fd5d349d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-695031d2-ccac-431d-8907-411d976f9393",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/service_requests/{{JobSericeRequestID}}/actions/recall",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"service_requests",
										"{{JobSericeRequestID}}",
										"actions",
										"recall"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-dcb18c06-b5e3-49bb-b987-e4c7ab2d664b"
				},
				{
					"name": "Manage Service Requests",
					"item": [
						{
							"name": "Search for a Service requests",
							"id": "15381251-911400a4-866b-4578-aeec-56090390cf11",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/service_requests?requisition=AX654-654T&status=active&page=2&page_size=50",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"service_requests"
									],
									"query": [
										{
											"key": "requisition",
											"value": "AX654-654T"
										},
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Service requests in Specimen context",
							"id": "15381251-3156fbba-f0e6-4bb8-b8cc-97a909d8731b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "API-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/specimens/specimen_id/service_requests?status=active&page=2&page_size=50",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"specimens",
										"specimen_id",
										"service_requests"
									],
									"query": [
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Qualify Service request by ID",
							"id": "15381251-d836719c-d77f-4f28-b347-f19f454dbd11",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"programs\": [\r\n    {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"medical_program\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"963b1410-17e8-4407-b700-044c9fc555ca\"\r\n      }\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/service_requests/fb80c279-9e6b-4231-a339-c2c01f192c5e/actions/qualify",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"service_requests",
										"fb80c279-9e6b-4231-a339-c2c01f192c5e",
										"actions",
										"qualify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Use Service Request",
							"id": "15381251-e089d957-6ce2-43fd-874e-91d51a7c9feb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"used_by_employee\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"employee\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"{{user_id}}\"\r\n    }\r\n  },\r\n  \"used_by_legal_entity\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"legal_entity\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"{{user_legal_entity}}\"\r\n    }\r\n  },\r\n  \"used_by_division\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"division\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"{{user_division_id}}\"\r\n    }\r\n  },\r\n  \"program\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"medical_program\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"963b1410-17e8-4407-b700-044c9fc555ca\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/service_requests/d8ed1e96-9907-48b9-afb4-c21fc012b937/actions/use",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"service_requests",
										"d8ed1e96-9907-48b9-afb4-c21fc012b937",
										"actions",
										"use"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change service request status to In progress",
							"id": "15381251-9aa95a86-2759-4790-88a7-464ba7cca39f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/service_requests/325afe09-14e6-40af-a3bc-2722a8ec2752/actions/process",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"service_requests",
										"325afe09-14e6-40af-a3bc-2722a8ec2752",
										"actions",
										"process"
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete Service Request",
							"id": "15381251-c947b04c-9307-4b8d-ac29-2efec9a53414",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"completed_with\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"diagnostic_report\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"73c6c4a7-aef8-4363-8f0c-479134f7356e\"\r\n    }\r\n  },\r\n  \"program_service\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"program_service\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"498b8a27-43a8-4123-8809-1a8239b32213\"\r\n    }\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/service_requests/325afe09-14e6-40af-a3bc-2722a8ec2752/actions/complete",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"service_requests",
										"325afe09-14e6-40af-a3bc-2722a8ec2752",
										"actions",
										"complete"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-e7341ff8-7668-424c-91d8-fbb487776c3c"
				}
			],
			"id": "15381251-62bd6e1c-f96e-4533-b242-733a1ada85dc"
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "Device requests",
					"item": [
						{
							"name": "PreQualify Device Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "897aee69-50af-4098-99dc-5e6a1a56edf0",
										"exec": [
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Check if the URL is defined and contains the expected format\r",
											"if (url && url.includes('encounters/')) {\r",
											"    // Extract the ID after 'encounters/'\r",
											"    const parts = url.split('encounters/');\r",
											"    if (parts.length > 1) {\r",
											"        const jobEncounterID = parts[1];\r",
											"        \r",
											"        // Log the extracted ID to the console (for debugging purposes)\r",
											"        console.log('Extracted jobEncounterID:', jobEncounterID);\r",
											"        \r",
											"        // Optionally, set the extracted ID as an environment variable\r",
											"        pm.globals.set('encounter_extracted_id', jobEncounterID);\r",
											"    } else {\r",
											"        console.error('The URL does not contain the expected format.');\r",
											"    }\r",
											"} else {\r",
											"    console.error('The global variable jobEncounterID is not defined or does not contain the expected format.');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6f0b3a6f-e6d9-4850-8790-580e620c138d",
										"exec": [
											"pm.test(\"PreQualify Device Request Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"PreQualify Device Request status is VALID\", function () {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.data[0].status)\r",
											"    const status = resData.data[0].status;\r",
											"    pm.expect(status).to.eql(\"VALID\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-a3882760-603d-4cfa-9d85-1f3e6bfecd61",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"device_request\": {\n    \"intent\": \"order\",\n    \"quantity\": {\n      \"value\": 30,\n      \"system\": \"device_unit\",\n      \"code\": \"piece\"\n    },\n    \"code\": {\n      \"coding\": [\n        {\n          \"system\": \"device_definition_classification_type\",\n          \"code\": \"30221\"\n        }\n      ]\n    },\n    \"encounter\": {\n      \"identifier\": {\n        \"type\": {\n          \"coding\": [\n            {\n              \"system\": \"eHealth/resources\",\n              \"code\": \"encounter\"\n            }\n          ]\n        },\n        \"value\": \"{{jobEncounterID}}\"\n      }\n    },\n    \"requester\": {\n      \"identifier\": {\n        \"type\": {\n          \"coding\": [\n            {\n              \"system\": \"eHealth/resources\",\n              \"code\": \"employee\"\n            }\n          ]\n        },\n        \"value\": \"{{user_id}}\"\n      }\n    },\n    \"authored_on\": \"2025-07-07T00:00:00.000Z\",\n    \"occurrence_period\": {\n      \"start\": \"2025-07-07T00:00:00.000Z\",\n      \"end\": \"2025-07-30T00:00:00.000Z\"\n    },\n    \"performer\": {\n      \"identifier\": {\n        \"type\": {\n          \"coding\": [\n            {\n              \"system\": \"eHealth/resources\",\n              \"code\": \"legal_entity\"\n            }\n          ]\n        },\n        \"value\": \"{{user_legal_entity}}\"\n      }\n    }\n  },\n  \"programs\": [\n    {\n      \"identifier\": {\n        \"type\": {\n          \"coding\": [\n            {\n              \"system\": \"eHealth/resources\",\n              \"code\": \"medical_program\"\n            }\n          ]\n        },\n        \"value\": \"d1f8be15-f9db-4c09-abf7-aa78a5a09b24\"\n      }\n    }\n  ]\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_requests/prequalify",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_requests",
										"prequalify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dummy_Create_Device",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "19a6decc-2fbf-4a5c-8ec6-bd04e8d304c2",
										"exec": [
											"const uuid = require('uuid');\r",
											"const deviceRequestId = uuid.v4();\r",
											"\r",
											"pm.globals.set(\"dummy_device_request_id\", deviceRequestId);\r",
											"\r",
											"\r",
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Check if the URL is defined and contains the expected format\r",
											"if (url && url.includes('encounters/')) {\r",
											"    // Extract the ID after 'encounters/'\r",
											"    const parts = url.split('encounters/');\r",
											"    if (parts.length > 1) {\r",
											"        const jobEncounterID = parts[1];\r",
											"        \r",
											"        // Log the extracted ID to the console (for debugging purposes)\r",
											"        console.log('Extracted jobEncounterID:', jobEncounterID);\r",
											"        \r",
											"        // Optionally, set the extracted ID as an environment variable\r",
											"        pm.globals.set('encounter_extracted_id', jobEncounterID);\r",
											"    } else {\r",
											"        console.error('The URL does not contain the expected format.');\r",
											"    }\r",
											"} else {\r",
											"    console.error('The global variable jobEncounterID is not defined or does not contain the expected format.');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bc937c15-8534-419e-8508-09b617166af3",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(`Device Request content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('device_request_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-84823185-0285-412e-8eff-aa23ab6c8bda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{dummy_device_request_id}}\",\r\n    \"intent\": \"order\",\r\n    \"quantity\": {\r\n        \"value\": 30,\r\n        \"system\": \"device_unit\",\r\n        \"code\": \"piece\"\r\n    },\r\n    \"code\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"device_definition_classification_type\",\r\n                \"code\": \"30221\"\r\n            }\r\n        ]\r\n    },\r\n    \"encounter\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{jobEncounterID}}\"\r\n        }\r\n    },\r\n    \"requester\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"authored_on\": \"2025-07-07T00:00:00.000Z\",\r\n    \"occurrence_period\": {\r\n      \"start\": \"2025-07-07T00:00:00.000Z\",\r\n      \"end\": \"2025-07-30T00:00:00.000Z\"\r\n    },\r\n    \"performer\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"legal_entity\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{user_legal_entity}}\"\r\n        }\r\n    },\r\n    \"note\": \"Some notes\",\r\n    \"program\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"medical_program\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"d1f8be15-f9db-4c09-abf7-aa78a5a09b24\"\r\n        }\r\n    },\r\n    \"status\": \"active\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-device-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-device-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Device Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6337fc33-aab9-4a0a-a1de-984f0debd83e",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "adfddf2d-8e80-48b7-820a-7a4ac16748ea",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"pm.test(\"Create Device Request Response status code is 202\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(202);\r",
											"});\r",
											"\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Create Device Request Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer c2lEZWhyclA2eXFkTTZraEhtWmEyUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': '0d65b47f51cb527a3262311da2af53e03f6fcff6e4cf655414a43f52e5ad457b'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"            pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Create Device Request Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    // Видаляємо '/api/' з початку href\r",
											"                    const href = link.href.replace('/api/', '');\r",
											"\r",
											"                    // Додаємо оброблений href у глобальні змінні\r",
											"                    acc[link.entity] = href;\r",
											"\r",
											"                    // Якщо href містить \"device_requests/\", витягуємо ID\r",
											"                    if (href.includes('device_requests/')) {\r",
											"                        const activityId = href.split('/').pop(); // Беремо останній елемент після розділення \"/\"\r",
											"                        acc['jobDeviceRequest'] = activityId;\r",
											"                    }\r",
											"\r",
											"                    return acc;\r",
											"                }, {});\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, value]) => {\r",
											"                    const globalName = `${entity.charAt(0).toUpperCase() + entity.slice(1)}ID`;\r",
											"                    pm.globals.set(globalName, value);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Create Device Request Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Create Device Request Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Create Device Request Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-dc433b9e-0a16-4fff-b58e-f782402f8101",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"{{device_request_signed_content}}\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Qualify Device Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b8f5367a-1188-433b-b399-1066e953be56",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "45cad939-60ab-415d-b2ed-74dc22ec0137",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(\"Qualify Device Request Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Qualify Device Request status is VALID\", function () {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.data[0].status)\r",
											"    const status = resData.data[0].status;\r",
											"    pm.expect(status).to.eql(\"VALID\");\r",
											"\r",
											"    pm.test(\"resData.data is an array\", function () {\r",
											"        pm.expect(Array.isArray(resData.data)).to.be.true;\r",
											"        const programId = resData.data[0].program_id;\r",
											"        console.info(programId)\r",
											"        pm.globals.set('program_id_qualify_device_request', programId);\r",
											"\r",
											"        const deviceDefinitionId = resData.data[0].participants[0].device_definition.id;\r",
											"        console.info(resData.data[0].participants[0].device_definition.id)\r",
											"        pm.globals.set('device_definition_id_qualify_device_request', deviceDefinitionId);\r",
											"\r",
											"        // const medicationId = resData.data[0].participants[0].medication_id;\r",
											"        // console.info(resData.data[0].participants[0].medication_id);\r",
											"        // pm.globals.set('medication_id_qualify_device_request', medicationId);\r",
											"\r",
											"        const porgramMedicationId = resData.data[0].participants[0].id;\r",
											"        console.info(resData.data[0].participants[0].id);\r",
											"        pm.globals.set('program_medication_id_qualify_device_request', porgramMedicationId);\r",
											"    });\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-762f470b-8426-42f9-8daf-e50f47af4f38",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"programs\": [\n      {\n         \"identifier\":{\n            \"type\":{\n               \"coding\":[\n                  {\n                     \"system\":\"eHealth/resources\",\n                     \"code\":\"medical_program\"\n                  }\n               ]\n            },\n            \"value\":\"d1f8be15-f9db-4c09-abf7-aa78a5a09b24\"\n         }\n      }\n   ],\n   \"location\": {\n        \"identifier\": {\n            \"type\": {\n                \"coding\": [\n                    {\n                        \"system\": \"eHealth/resources\",\n                        \"code\": \"division\"\n                    }\n                ]\n            },\n            \"value\": \"{{user_division_id}}\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/api/device_requests/{{JobDeviceRequestID}}/actions/qualify",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"device_requests",
										"{{JobDeviceRequestID}}",
										"actions",
										"qualify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device Request details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f963dd-1d29-4053-a2dc-c2a6f0978d20",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4603ef5c-1b6d-457f-8120-37fb15dd722a",
										"exec": [
											"const resData = pm.response.json().data;\r",
											"\r",
											"// Варіант 1: Відкликання DeviceRequest\r",
											"const jsonRevoked = {\r",
											"  ...resData,\r",
											"  status: \"revoked\",\r",
											"  status_reason: {\r",
											"    coding: [\r",
											"      {\r",
											"        system: \"device_request_revoke_reasons\",\r",
											"        code: \"impossible_completion\"\r",
											"      }\r",
											"    ]\r",
											"  }\r",
											"};\r",
											"\r",
											"// Варіант 2: Помилковий DeviceRequest\r",
											"const jsonError = {\r",
											"  ...resData,\r",
											"  status: \"entered_in_error\",\r",
											"  status_reason: {\r",
											"    coding: [\r",
											"      {\r",
											"        system: \"device_request_mark_in_error_reasons\",\r",
											"        code: \"entered_in_error\"\r",
											"      }\r",
											"    ]\r",
											"  }\r",
											"};\r",
											"\r",
											"pm.visualizer.set(`\r",
											"  <style>\r",
											"    .container {\r",
											"      display: flex;\r",
											"      flex-wrap: wrap;\r",
											"      gap: 20px;\r",
											"    }\r",
											"    .block {\r",
											"      flex: 1 1 45%;\r",
											"      min-width: 300px;\r",
											"    }\r",
											"    pre {\r",
											"      background-color: #f6f8fa;\r",
											"      padding: 16px;\r",
											"      border-radius: 5px;\r",
											"      font-family: monospace;\r",
											"      white-space: pre-wrap;\r",
											"      max-height: 500px;\r",
											"      overflow: auto;\r",
											"    }\r",
											"    button {\r",
											"      margin: 10px 0;\r",
											"      padding: 5px 10px;\r",
											"      border-radius: 4px;\r",
											"      border: 1px solid #ccc;\r",
											"      background-color: #e0e0e0;\r",
											"      cursor: pointer;\r",
											"    }\r",
											"    button:hover {\r",
											"      background-color: #d0d0d0;\r",
											"    }\r",
											"    h3 {\r",
											"      margin-bottom: 5px;\r",
											"    }\r",
											"  </style>\r",
											"\r",
											"  <div class=\"container\">\r",
											"    <div class=\"block\">\r",
											"      <h3>JSON для <u>відкликання</u> DeviceRequest</h3>\r",
											"      <button onclick=\"copyToClipboard('json1')\">Скопіювати JSON (revoked)</button>\r",
											"      <pre id=\"json1\">{{jsonRevoked}}</pre>\r",
											"    </div>\r",
											"    <div class=\"block\">\r",
											"      <h3>JSON для <u>помилкового</u> DeviceRequest</h3>\r",
											"      <button onclick=\"copyToClipboard('json2')\">Скопіювати JSON (entered_in_error)</button>\r",
											"      <pre id=\"json2\">{{jsonError}}</pre>\r",
											"    </div>\r",
											"  </div>\r",
											"\r",
											"  <script>\r",
											"    function copyToClipboard(id) {\r",
											"      const text = document.getElementById(id).innerText;\r",
											"      const textArea = document.createElement('textarea');\r",
											"      textArea.value = text;\r",
											"      document.body.appendChild(textArea);\r",
											"      textArea.select();\r",
											"      try {\r",
											"        document.execCommand('copy');\r",
											"        alert('JSON скопійовано!');\r",
											"      } catch (err) {\r",
											"        alert('Помилка копіювання: ' + err);\r",
											"      }\r",
											"      document.body.removeChild(textArea);\r",
											"    }\r",
											"  </script>\r",
											"`, {\r",
											"  jsonRevoked: JSON.stringify(jsonRevoked, null, 2),\r",
											"  jsonError: JSON.stringify(jsonError, null, 2)\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-71804c39-5902-4d19-89af-ae819585fbfd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_requests/{{JobDeviceRequestID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_requests",
										"{{JobDeviceRequestID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device requests by search params",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "5dc9a900-f94e-462e-ab1f-eb4fb6c6b652"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "1f2ce2ce-b830-4330-9da1-b7ad1d1f1474"
									}
								}
							],
							"id": "15381251-f262dbf3-8cf4-46b3-aa49-8b0cd03b81d8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/device_requests?status=active&code=30222&code_reference=7075e0e2-6b57-47fd-aff7-324806efa7e5&requester_legal_entity=7075e0e2-6b57-47fd-aff7-324806efa7e5&requester=7075e0e2-6b57-47fd-aff7-324806efa7e5&encounter=7075e0e2-6b57-47fd-aff7-324806efa7e5&program=7075e0e2-6b57-47fd-aff7-324806efa7e5&context_episode_id=ef30f210-5328-4f48-bfe6-c7150d4737a6&based_on=7075e0e2-6b57-47fd-aff7-324806efa7e5&priority=low&performer=7075e0e2-6b57-47fd-aff7-324806efa7e5&authored_on_from=2020-01-01T00%3A00%3A00.000Z&authored_on_to=2021-01-01T00%3A00%3A00.000Z",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"device_requests"
									],
									"query": [
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "code",
											"value": "30222"
										},
										{
											"key": "code_reference",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "requester_legal_entity",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "requester",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "encounter",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "program",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "context_episode_id",
											"value": "ef30f210-5328-4f48-bfe6-c7150d4737a6"
										},
										{
											"key": "based_on",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "priority",
											"value": "low"
										},
										{
											"key": "performer",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "authored_on_from",
											"value": "2020-01-01T00%3A00%3A00.000Z"
										},
										{
											"key": "authored_on_to",
											"value": "2021-01-01T00%3A00%3A00.000Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for a Device request by requestion",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "afcc99b3-2f40-433a-85a0-e88e5cc04ad8"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "d442aebb-ecfc-4033-84b5-468b7b6834c7"
									}
								}
							],
							"id": "15381251-1c75dca9-c9f8-4ba1-9faf-1e89a6a75794",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "{{X-Custom-PSK}}",
										"value": "{{x-custom_demo}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host_demo}}/api/device_requests?requisition=AX64-654T-X654-AX65",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"device_requests"
									],
									"query": [
										{
											"key": "requisition",
											"value": "AX64-654T-X654-AX65"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device context",
							"id": "15381251-f43f35ec-2f87-4b8a-a101-e36b04190be9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/patients/ee2bfebf-5b8a-4cf5-b9f2-92e93288c3c3/devices/c57e65eb-6c39-4b41-bfc3-5d6d4b03571f/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"ee2bfebf-5b8a-4cf5-b9f2-92e93288c3c3",
										"devices",
										"c57e65eb-6c39-4b41-bfc3-5d6d4b03571f",
										"context"
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend SMS on Device Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "8ff9d5cb-24f6-4a94-9464-392d63963172"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "fd803d92-83c2-432d-bd20-c7e1e4b89d06"
									}
								}
							],
							"id": "15381251-bed7c938-5603-4968-801d-bc14a099021d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/7f68ca7b-0015-4248-938e-8527b23caf23/device_requests/809fba89-3b32-42db-8ecf-9ab04c396476/actions/resend",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"7f68ca7b-0015-4248-938e-8527b23caf23",
										"device_requests",
										"809fba89-3b32-42db-8ecf-9ab04c396476",
										"actions",
										"resend"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dummy_Revoke_Device_Req",
							"id": "15381251-c70e1664-9f69-46fd-9914-878c80b5096c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"authored_on\": \"2023-09-18T00:00:00Z\",\r\n    \"code\": {\r\n        \"coding\": [\r\n            {\r\n                \"code\": \"30221\",\r\n                \"system\": \"device_definition_classification_type\"\r\n            }\r\n        ],\r\n        \"text\": null\r\n    },\r\n    \"dispense_valid_to\": \"2023-10-20T06:49:39Z\",\r\n    \"encounter\": {\r\n        \"display_value\": \"null\",\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"encounter\",\r\n                        \"system\": \"eHealth/resources\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            \"value\": \"55d9fc87-6047-4491-b75d-9fbf396c56ca\"\r\n        }\r\n    },\r\n      \"id\": \"cf4bfc12-61f3-4130-a933-db21e6ceddd1\",\r\n        \"inserted_at\": \"2023-09-20T06:49:39.291000Z\",\r\n        \"intent\": \"order\",\r\n        \"note\": \"Some notes\",\r\n        \"occurrence_period\": {\r\n            \"end\": \"2023-09-19T12:00:00Z\",\r\n            \"start\": \"2023-09-18T00:00:00Z\"\r\n        },\r\n    \"program\": {\r\n        \"display_value\": \"Медичні вироби для визначення рівня глюкози в крові\",\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"medical_program\",\r\n                        \"system\": \"eHealth/resources\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            \"value\": \"0cefbce3-6dd2-45bd-b1e6-983fc055d5e0\"\r\n        }\r\n    },\r\n    \"quantity\": {\r\n        \"code\": \"piece\",\r\n        \"system\": \"device_unit\",\r\n        \"unit\": \"шт\",\r\n        \"value\": 10\r\n    },\r\n    \"reason\": [\r\n        {\r\n            \"display_value\": \"null\",\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"condition\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"55d9fc87-6047-4491-b75d-9fbf396c56ca\"\r\n            }\r\n        }\r\n    ],\r\n    \"requester\": {\r\n        \"display_value\": \"Сергій Вікторович Куриленко\",\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"employee\",\r\n                        \"system\": \"eHealth/resources\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            \"value\": \"04871d57-0e76-451d-a529-c9cd60e69ddc\"\r\n        }\r\n    },\r\n    \"requester_legal_entity\": {\r\n        \"display_value\": \"СИРСЬКИЙ ВЯЧЕСЛАВ ВІКТОРОВИЧ\",\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"legal_entity\",\r\n                        \"system\": \"eHealth/resources\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            \"value\": \"0dccb76f-3ed0-40f4-8f73-e95e2f91ea29\"\r\n        }\r\n    },\r\n    \"requisition\": \"3066-3453-1223-1111\",\r\n    \"status\": \"revoked\",\r\n    \"status_reason\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"device_request_revoke_reasons\",\r\n                \"code\": \"entered_in_error\"\r\n            }\r\n        ]\r\n    },\r\n    \"subject\": {\r\n        \"display_value\": null,\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"code\": \"patient\",\r\n                        \"system\": \"eHealth/resources\"\r\n                    }\r\n                ],\r\n                \"text\": null\r\n            },\r\n            \"value\": \"735f9ff7-b328-4455-8634-43776de540c5\"\r\n        }\r\n    },\r\n    \"updated_at\": \"2023-09-20T06:49:39.291000Z\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Revoke Device Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "07e5f65c-1f45-4f91-80e6-1c4f3adef75c",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "af527299-0def-472b-b9f2-77942f717925",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"console.log(pm.request)\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Revoke Device Request Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"           pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Revoke Device Request Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    acc[link.entity] = link.href.replace('/api/', '');\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, href]) => {\r",
											"                    const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
											"                    pm.globals.set(globalName, href);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Revoke Device Request Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Revoke Device Request Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Revoke Device Request Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-f687d783-eee2-4e91-81a4-85d77a5375e4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_requests/{{JobDeviceRequestID}}/actions/revoke",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_requests",
										"{{JobDeviceRequestID}}",
										"actions",
										"revoke"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark in error Device request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5c800f31-b7aa-4d48-a13b-dcc425081ba7",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "898c32a3-c4e9-4ea4-965b-90b7ef66d00e",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Mark in error Device request Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"           pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Mark in error Device request Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    acc[link.entity] = link.href.replace('/api/', '');\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, href]) => {\r",
											"                    const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
											"                    pm.globals.set(globalName, href);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Mark in error Device request Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Mark in error Device request Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Mark in error Device request Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-20e495bf-2d56-48f7-8c4e-05cdc03a15a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_requests/{{JobDeviceRequestID}}/actions/mark_in_error",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_requests",
										"{{JobDeviceRequestID}}",
										"actions",
										"mark_in_error"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-958c2af3-169b-4e96-9932-995c2322baba"
				},
				{
					"name": "Device dispenses",
					"item": [
						{
							"name": "Create Device Dispense",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5edb6783-64e7-47c9-a2d4-88a056d57f1a",
										"exec": [
											"const uuid = require('uuid');\r",
											"const deviceDispenseRequestId = uuid.v4();\r",
											"\r",
											"pm.globals.set(\"dummy_device_dispense_request_id\", deviceDispenseRequestId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1420a4d9-710c-4e60-815a-f83990226e93",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Create Device Dispense Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"            pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Create Device Dispense Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    // Extract the part after \"/api/\"\r",
											"                    const href = link.href.replace('/api/', '');\r",
											"\r",
											"                    // Set the link entity to global variables\r",
											"                    acc[link.entity] = href;\r",
											"\r",
											"                    if (href.includes('device_dispenses/')) {\r",
											"                        const  deviceDispenseId = href.split('/')[3]; // Extract the Device Dispense ID\r",
											"                        acc['jobDeviceDispense'] = deviceDispenseId;\r",
											"                    }\r",
											"\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, value]) => {\r",
											"                    const globalName = `${entity.charAt(0).toUpperCase() + entity.slice(1)}ID`;\r",
											"                    pm.globals.set(globalName, value);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Create Device Dispense Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Create Device Dispense Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Create Device Dispense Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-952d8b01-50f8-48f0-a560-d24034b41789",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{dummy_device_dispense_request_id}}\",\n  \"based_on\": {\n    \"identifier\": {\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"eHealth/resources\",\n            \"code\": \"device_request\"\n          }\n        ]\n      },\n      \"value\": \"{{JobDeviceRequestID}}\"\n    }\n  },\n  \"performer\": {\n    \"identifier\": {\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"eHealth/resources\",\n            \"code\": \"employee\"\n          }\n        ]\n      },\n      \"value\": \"{{user_id}}\"\n    }\n  },\n  \"location\": {\n    \"identifier\": {\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"eHealth/resources\",\n            \"code\": \"division\"\n          }\n        ]\n      },\n      \"value\": \"{{user_division_id}}\"\n    }\n  },\n  \"note\": \"Some notes\",\n  \"program\": {\n    \"identifier\": {\n      \"type\": {\n        \"coding\": [\n          {\n            \"system\": \"eHealth/resources\",\n            \"code\": \"medical_program\"\n          }\n        ]\n      },\n      \"value\": \"{{program_id_qualify_device_request}}\"\n    }\n  },\n  \"primary_source\": true,\n  \"details\": [\n    {\n      \"device\": {\n        \"identifier\": {\n          \"type\": {\n            \"coding\": [\n              {\n                \"system\": \"eHealth/resources\",\n                \"code\": \"device_definition\"\n              }\n            ]\n          },\n          \"value\": \"{{device_definition_id_qualify_device_request}}\"\n        }\n      },\n      \"program_device\": {\n        \"identifier\": {\n          \"type\": {\n            \"coding\": [\n              {\n                \"system\": \"eHealth/resources\",\n                \"code\": \"program_device\"\n              }\n            ]\n          },\n          \"value\": \"{{program_medication_id_qualify_device_request}}\"\n        }\n      },\n      \"quantity\": {\n        \"value\": 30,\n        \"system\": \"device_unit\",\n        \"code\": \"piece\"\n      },\n      \"sell_price\": 18.65,\n      \"discount_amount\": 150\n    }\n  ],\n  \"verification_code\": \"5679\",\n  \"status\": \"in_progress\"\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_dispenses",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_dispenses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device Dispense details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2a57a879-bf1a-48d7-93bd-49e5769a6db9",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e624a55f-200a-444a-b780-56110b0f3216",
										"exec": [
											"const resData = pm.response.json().data;\r",
											"\r",
											"// Отримання поточної дати у форматі 2018-08-02T10:45:16.000Z\r",
											"const nowIsoString = new Date().toISOString().replace(/\\.\\d{3}Z$/, '.000Z');\r",
											"\r",
											"// Варіант 1: Complete Device Dispense\r",
											"const jsonCompleted = {\r",
											"  ...resData,\r",
											"  status: \"completed\",\r",
											"  payment_amount:2,\r",
											"  when_handed_over:nowIsoString\r",
											"};\r",
											"\r",
											"// Варіант 2: Mark in error Device dispense\r",
											"const jsonError = {\r",
											"  ...resData,\r",
											"  status: \"entered_in_error\",\r",
											"  status_reason: {\r",
											"    coding: [\r",
											"      {\r",
											"        system: \"device_dispense_mark_in_error_reasons\",\r",
											"        code: \"entered_in_error\"\r",
											"      }\r",
											"    ]\r",
											"  }\r",
											"};\r",
											"\r",
											"pm.visualizer.set(`\r",
											"  <style>\r",
											"    .container {\r",
											"      display: flex;\r",
											"      flex-wrap: wrap;\r",
											"      gap: 20px;\r",
											"    }\r",
											"    .block {\r",
											"      flex: 1 1 45%;\r",
											"      min-width: 300px;\r",
											"    }\r",
											"    pre {\r",
											"      background-color: #f6f8fa;\r",
											"      padding: 16px;\r",
											"      border-radius: 5px;\r",
											"      font-family: monospace;\r",
											"      white-space: pre-wrap;\r",
											"      max-height: 500px;\r",
											"      overflow: auto;\r",
											"    }\r",
											"    button {\r",
											"      margin: 10px 0;\r",
											"      padding: 5px 10px;\r",
											"      border-radius: 4px;\r",
											"      border: 1px solid #ccc;\r",
											"      background-color: #e0e0e0;\r",
											"      cursor: pointer;\r",
											"    }\r",
											"    button:hover {\r",
											"      background-color: #d0d0d0;\r",
											"    }\r",
											"    h3 {\r",
											"      margin-bottom: 5px;\r",
											"    }\r",
											"  </style>\r",
											"\r",
											"  <div class=\"container\">\r",
											"    <div class=\"block\">\r",
											"      <h3>JSON для <u>завершення</u> DeviceDispense</h3>\r",
											"      <button onclick=\"copyToClipboard('json1')\">Скопіювати JSON (completed)</button>\r",
											"      <pre id=\"json1\">{{jsonCompleted}}</pre>\r",
											"    </div>\r",
											"    <div class=\"block\">\r",
											"      <h3>JSON для <u>помилкового</u> DeviceDispense</h3>\r",
											"      <button onclick=\"copyToClipboard('json2')\">Скопіювати JSON (entered_in_error)</button>\r",
											"      <pre id=\"json2\">{{jsonError}}</pre>\r",
											"    </div>\r",
											"  </div>\r",
											"\r",
											"  <script>\r",
											"    function copyToClipboard(id) {\r",
											"      const text = document.getElementById(id).innerText;\r",
											"      const textArea = document.createElement('textarea');\r",
											"      textArea.value = text;\r",
											"      document.body.appendChild(textArea);\r",
											"      textArea.select();\r",
											"      try {\r",
											"        document.execCommand('copy');\r",
											"        alert('JSON скопійовано!');\r",
											"      } catch (err) {\r",
											"        alert('Помилка копіювання: ' + err);\r",
											"      }\r",
											"      document.body.removeChild(textArea);\r",
											"    }\r",
											"  </script>\r",
											"`, {\r",
											"  jsonCompleted: JSON.stringify(jsonCompleted, null, 2),\r",
											"  jsonError: JSON.stringify(jsonError, null, 2)\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-be433a1b-4bf9-4ff6-9669-34ae230836ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_dispenses/{{JobDeviceDispenseID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_dispenses",
										"{{JobDeviceDispenseID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dummy Complete Device Dispense",
							"id": "15381251-0d9203df-bbc9-4b92-9510-d165c561d167",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"based_on\": {\r\n            \"display_value\": null,\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"device_request\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"7d119777-2755-4725-981e-6287c290e2d3\"\r\n            }\r\n        },\r\n        \"details\": [\r\n            {\r\n                \"device\": {\r\n                    \"display_value\": null,\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"code\": \"device_definition\",\r\n                                    \"system\": \"eHealth/resources\"\r\n                                }\r\n                            ],\r\n                            \"text\": null\r\n                        },\r\n                        \"value\": \"387b3070-3d9c-11ee-be56-0242ac120002\"\r\n                    }\r\n                },\r\n                \"discount_amount\": 94.88,\r\n                \"program_device\": {\r\n                    \"display_value\": null,\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"code\": \"program_device\",\r\n                                    \"system\": \"eHealth/resources\"\r\n                                }\r\n                            ],\r\n                            \"text\": null\r\n                        },\r\n                        \"value\": \"a2b02db0-3d9c-11ee-be56-0242ac120002\"\r\n                    }\r\n                },\r\n                \"quantity\": {\r\n                    \"code\": \"piece\",\r\n                    \"system\": \"device_unit\",\r\n                    \"unit\": \"шт\",\r\n                    \"value\": 25\r\n                },\r\n                \"reimbursement_amount\": 94.88,\r\n                \"sell_price\": 203.03\r\n            }\r\n        ],\r\n        \"id\": \"78641dd9-7d31-4878-9809-e104dd92b82d\",\r\n        \"inserted_at\": \"2023-09-19T07:17:12.485000Z\",\r\n        \"location\": {\r\n            \"display_value\": \"Відділення Доктора Пропера\",\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"division\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"277043dc-b374-4f0d-9e02-92cf5cc94dad\"\r\n            }\r\n        },\r\n        \"note\": \"Some notes\",\r\n        \"payment_amount\": null,\r\n        \"payment_id\": null,\r\n        \"performer\": {\r\n            \"display_value\": \"Сергій Вікторович Куриленко\",\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"employee\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"d9859a73-9516-4650-99a5-5447660c5996\"\r\n            }\r\n        },\r\n        \"performer_legal_entity\": {\r\n            \"display_value\": \"\\\"АКАДЕМІЯ СОЦІАЛЬНИХ ІННОВАЦІЙ\\\"\",\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"legal_entity\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"cb82defb-2d35-4b5c-a84f-0c7ea0fb6a71\"\r\n            }\r\n        },\r\n        \"program\": {\r\n            \"display_value\": \"Медичні вироби для визначення рівня глюкози в крові\",\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"medical_program\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"0cefbce3-6dd2-45bd-b1e6-983fc055d5e0\"\r\n            }\r\n        },\r\n        \"signed_content_links\": [],\r\n        \"status\": \"unknown\",\r\n        \"subject\": {\r\n            \"display_value\": null,\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"code\": \"patient\",\r\n                            \"system\": \"eHealth/resources\"\r\n                        }\r\n                    ],\r\n                    \"text\": null\r\n                },\r\n                \"value\": \"6a524088-c3f6-44ef-bcea-12a8e2900431\"\r\n            }\r\n        },\r\n        \"updated_at\": \"2023-09-19T07:28:00.751000Z\",\r\n        \"when_handed_over\": null\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Complete Device Dispense",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6c3e6802-6c2c-4edf-82c3-e038fb617920",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e1cc3d18-da9e-4e81-b769-229cb6e1d677",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Complete Device Dispense request Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"           pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Complete Device Dispense request Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    acc[link.entity] = link.href.replace('/api/', '');\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, href]) => {\r",
											"                    const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
											"                    pm.globals.set(globalName, href);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Complete Device Dispense request Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Complete Device Dispense request Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Complete Device Dispense request Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-3d17ac88-4291-45e1-88ee-8b8a69361b9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"signed_data\": \"\"}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_dispenses/{{JobDeviceDispenseID}}/actions/complete",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_dispenses",
										"{{JobDeviceDispenseID}}",
										"actions",
										"complete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Dummy Mark in error Device dispense",
							"id": "15381251-e0934560-87c8-4f13-b1eb-0d15eaf3f40a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"b075f148-7f93-4fc2-b2ec-2d81b19a9b7b\",\r\n  \"based_on\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"device_request\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"b4a6d991-0bf7-476f-b3cf-bec83f044b1b\"\r\n    },\r\n    \"display_value\": \"null\"\r\n  },\r\n  \"status\": \"completed\",\r\n  \"subject\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"patient\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n    },\r\n    \"display_value\": \"null\"\r\n  },\r\n  \"primary_source\": false,\r\n  \"performer\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"employee\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"b4a6d991-0bf7-476f-b3cf-bec83f044b1b\"\r\n    },\r\n    \"display_value\": \"Мельник Микола Микитович\"\r\n  },\r\n  \"external_performer\": \"03562649\",\r\n  \"external_provider\": {\r\n    \"provider_legal_entity_name\": \"Assistive Devices Provider\",\r\n    \"provider_legal_entity_edrpou\": \"03562649\"\r\n  },\r\n  \"location\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"division\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"b4a6d991-0bf7-476f-b3cf-bec83f044b1b\"\r\n    },\r\n    \"display_value\": \"Перше відділення\"\r\n  },\r\n  \"when_handed_over\": \"2018-08-02T10:45:16.000Z\",\r\n  \"note\": \"Some notes\",\r\n  \"performer_legal_entity\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"legal_entity\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"c5a6d991-0bf7-476f-b3cf-bec83f044b2a\"\r\n    },\r\n    \"display_value\": \"Комунальне підприємство Медлаб\"\r\n  },\r\n  \"program\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"medical_program\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"c5a6d991-0bf7-476f-b3cf-bec83f044b2a\"\r\n    },\r\n    \"display_value\": \"Доступні медичні вироби\"\r\n  },\r\n  \"details\": [\r\n    {\r\n      \"device\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"device_definition\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"b4a6d991-0bf7-476f-b3cf-bec83f044b1b\"\r\n        }\r\n      },\r\n      \"program_device\": {\r\n        \"identifier\": {\r\n          \"type\": {\r\n            \"coding\": [\r\n              {\r\n                \"system\": \"eHealth/resources\",\r\n                \"code\": \"program_device\"\r\n              }\r\n            ]\r\n          },\r\n          \"value\": \"b4a6d991-0bf7-476f-b3cf-bec83f044b1b\"\r\n        },\r\n        \"display_value\": \"null\"\r\n      },\r\n      \"quantity\": {\r\n        \"value\": 10,\r\n        \"system\": \"device_unit\",\r\n        \"code\": \"piece\",\r\n        \"unit\": \"шт\"\r\n      },\r\n      \"sell_price\": 18.65,\r\n      \"discount_amount\": 150,\r\n      \"reimbursement_amount\": 450\r\n    }\r\n  ],\r\n  \"payment_id\": \"1239804\",\r\n  \"payment_amount\": 50,\r\n  \"inserted_at\": \"2017-04-20T19:14:13Z\",\r\n  \"inserted_by\": \"e1453f4c-1077-4e85-8c98-c13ffca0063e\",\r\n  \"updated_at\": \"2017-04-20T19:14:13Z\",\r\n  \"updated_by\": \"2922a240-63db-404e-b730-09222bfeb2dd\",\r\n  \"part_of\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"procedure\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"c5a6d991-0bf7-476f-b3cf-bec83f044b2a\"\r\n    },\r\n    \"display_value\": \"null\"\r\n  },\r\n  \"encounter\": {\r\n    \"identifier\": {\r\n      \"type\": {\r\n        \"coding\": [\r\n          {\r\n            \"system\": \"eHealth/resources\",\r\n            \"code\": \"encounter\"\r\n          }\r\n        ]\r\n      },\r\n      \"value\": \"c5a6d991-0bf7-476f-b3cf-bec83f044b2a\"\r\n    },\r\n    \"display_value\": \"null\"\r\n  },\r\n  \"supporting_info\": [\r\n    {\r\n      \"identifier\": {\r\n        \"type\": {\r\n          \"coding\": [\r\n            {\r\n              \"system\": \"eHealth/resources\",\r\n              \"code\": \"condition\"\r\n            }\r\n          ]\r\n        },\r\n        \"value\": \"9183a36b-4d45-4244-9339-63d81cd08d9c\"\r\n      }\r\n    }\r\n  ],\r\n  \"status_reason\": {\r\n    \"coding\": [\r\n      {\r\n        \"system\": \"device_dispense_mark_in_error_reasons\",\r\n        \"code\": \"incorrect_patient\"\r\n      }\r\n    ]\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Mark in error Device dispense",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a1f030c0-f4ed-4705-bfcf-ffd72bad143d",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3afd5da4-c1ac-41a4-a32f-211a8f71ae82",
										"exec": [
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"// Get the response body from the main request\r",
											"const resBody = pm.response.text();\r",
											"const resData = JSON.parse(resBody);\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Mark in error Device dispense request Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"const href = resData.data.links[0].href;\r",
											"console.log(\"Extracted href:\", href);\r",
											"\r",
											"// Extract the job ID from the href\r",
											"const number = href.split('/jobs/')[1];\r",
											"console.log(\"Extracted number:\", number);\r",
											"\r",
											"// Initialize retry counter in the environment\r",
											"pm.environment.set('retryCount', 0);\r",
											"\r",
											"// Function to check job status\r",
											"function checkJobStatus(jobId) {\r",
											"\r",
											"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
											"    const maxRetries = 3; // Set the maximum number of retries\r",
											"\r",
											"    pm.sendRequest({\r",
											"        method: 'GET',\r",
											"        url: url,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
											"            'api-key': '30276e63617461a185ec',\r",
											"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
											"        }\r",
											"    }, function (err, res) {\r",
											"\r",
											"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
											"           pm.expect([200, 303]).to.include(res.code);\r",
											"        });\r",
											"\r",
											"        if (err) {\r",
											"            displayResponse('Request Error', { error: err.message });\r",
											"            console.error('Error checking job status:', err);\r",
											"        } else {\r",
											"\r",
											"            const responseBody = res.json();\r",
											"            console.log('Job Status:', responseBody.data.status);\r",
											"\r",
											"            if (responseBody.data.status === 'processed') {\r",
											"\r",
											"                pm.test(`Mark in error Device dispense request Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
											"                    pm.expect(res.code).to.eql(303);\r",
											"                });\r",
											"\r",
											"                const links = responseBody.data.links.reduce((acc, link) => {\r",
											"                    acc[link.entity] = link.href.replace('/api/', '');\r",
											"                    return acc;\r",
											"                }, {});\r",
											"\r",
											"                // Iterate over the links object and set globals dynamically\r",
											"                Object.entries(links).forEach(([entity, href]) => {\r",
											"                    const globalName = `job${entity.charAt(0).toUpperCase() + entity.slice(1).replace('_', '')}ID`;\r",
											"                    pm.globals.set(globalName, href);\r",
											"                });\r",
											"\r",
											"\r",
											"                displayResponse('Mark in error Device dispense request Job Response Details', responseBody.data);\r",
											"            } else {\r",
											"\r",
											"                // Retrieve the current retry count\r",
											"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
											"\r",
											"                if (retryCount < maxRetries) {\r",
											"                    // Increment the retry count and set it back to the environment\r",
											"                    retryCount++;\r",
											"                    pm.environment.set('retryCount', retryCount);\r",
											"\r",
											"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
											"\r",
											"                    setTimeout(() => {\r",
											"                        checkJobStatus(jobId);\r",
											"                    }, 1000);\r",
											"\r",
											"                    displayResponse('Mark in error Device dispense request Job Response Details2', responseBody.data);\r",
											"\r",
											"                } else {\r",
											"                    console.log('Maximum retry limit reached.');\r",
											"                    displayResponse(responseBody.data.error ? 'Mark in error Device dispense request Error Details' : 'Final Job Status Check', responseBody.data);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"// Call the function with the job ID\r",
											"checkJobStatus(number);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-7db3a927-98fe-4df3-bc04-6288dc211345",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_data\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/device_dispenses/{{JobDeviceDispenseID}}/actions/mark_in_error",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"device_dispenses",
										"{{JobDeviceDispenseID}}",
										"actions",
										"mark_in_error"
									]
								}
							},
							"response": []
						},
						{
							"name": "Stop Device Dispense",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//2 observations",
											"var b64EncodeUnicode = function (str) {",
											"    return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function(match, p1) {",
											"        return String.fromCharCode(parseInt(p1, 16))",
											"    }))};",
											"    ",
											"",
											"let today = () => {",
											"  let currentDate = new Date();",
											"  //return currentDate.getFullYear() + \"-\" + (currentDate.getMonth() + 1) + \"-\" + currentDate.getDate();",
											"  return currentDate.toISOString()",
											"}",
											"",
											"var encounter_date = today();",
											"",
											"var uuid = require('uuid');",
											"",
											"var encounter_id = uuid.v4();",
											"pm.environment.set(\"encounter_id\", encounter_id);",
											"",
											"var immunization_id=uuid.v4();",
											"pm.environment.set(\"immunization_id\", immunization_id);",
											"var observation_id_1=uuid.v4();",
											"pm.environment.set(\"observation_id_1\", observation_id_1);",
											"var observation_id_2=uuid.v4();",
											"pm.environment.set(\"observation_id_2\", observation_id_2);",
											"    ",
											"var encounter_package_template = '{ \"encounter\": { \"id\": \"{{encounter_id}}\", \"prescriptions\": \"dnt jdj\", \"date\": \"2018-11-23\", \"status\": \"finished\", \"visit\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"visit\" } ] }, \"value\": \"{{visit_id}}\" } }, \"episode\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"episode\" } ] }, \"value\": \"{{episode_id}}\" } }, \"class\": { \"system\": \"eHealth/encounter_classes\", \"code\": \"PHC\" }, \"type\": { \"coding\": [ { \"system\": \"eHealth/encounter_types\", \"code\": \"service_delivery_location\" } ] }, \"performer\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ] }, \"value\": \"{{doctor_id}}\" } }, \"reasons\": [ { \"coding\": [ { \"system\": \"eHealth/ICPC2/reasons\", \"code\": \"A02\" } ] }, { \"coding\": [ { \"system\": \"eHealth/ICPC2/reasons\", \"code\": \"D09\" } ] } ], \"diagnoses\": [ { \"condition\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"condition\" } ] }, \"value\": \"{{condition_id}}\" } }, \"role\": { \"coding\": [ { \"system\": \"eHealth/diagnosis_roles\", \"code\": \"primary\" } ] }, \"rank\": 1 } ], \"actions\": [ { \"coding\": [ { \"system\": \"eHealth/ICPC2/actions\", \"code\": \"*30\" } ] }, { \"coding\": [ { \"system\": \"eHealth/ICPC2/actions\", \"code\": \"*30\" } ] } ], \"division\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"division\" } ] }, \"value\": \"{{division_id}}\" } } }, \"observations\": [ { \"id\": \"{{observation_id_1}}\", \"status\": \"valid\", \"context\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"encounter\" } ] }, \"value\": \"{{encounter_id}}\" } }, \"categories\": [ { \"coding\": [ { \"system\": \"eHealth/observation_categories\", \"code\": \"vital-signs\" } ] } ], \"code\": { \"coding\": [ { \"system\": \"eHealth/LOINC/observation_codes\", \"code\": \"8310-5\" } ] }, \"effective_period\": { \"start\": \"2018-08-02T10:45:16.000Z\", \"end\": \"2018-08-02T11:00:00.000Z\" }, \"issued\": \"2018-08-02T10:45:16.000Z\", \"primary_source\": false, \"report_origin\": { \"coding\": [ { \"system\": \"eHealth/report_origins\", \"code\": \"related person\" } ], \"text\": \"Галина Олександрівна\" }, \"interpretation\": { \"coding\": [ { \"system\": \"eHealth/observation_interpretations\", \"code\": \"default_observation_interpretation\" } ], \"text\": \"низький\" }, \"comment\": \"Some comment\", \"body_site\": { \"coding\": [ { \"system\": \"eHealth/body_sites\", \"code\": \"default_body_site\" } ] }, \"method\": { \"coding\": [ { \"system\": \"eHealth/observation_methods\", \"code\": \"default_observation_method\" } ], \"text\": \"метод ABC\" }, \"value_period\": { \"start\": \"2018-08-02T10:45:16.000Z\", \"end\": \"2018-08-02T11:00:00.000Z\" }, \"reference_ranges\": [ { \"low\": { \"value\": 13.000001, \"comparator\": \">\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"high\": { \"value\": 27, \"comparator\": \"<\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"type\": { \"coding\": [ { \"system\": \"eHealth/reference_range_types\", \"code\": \"default_reference_range\" } ], \"text\": \"нормальний\" }, \"applies_to\": [ { \"coding\": [ { \"system\": \"eHealth/reference_range_applications\", \"code\": \"default_reference_range_application\" } ] } ], \"age\": { \"low\": { \"value\": 18, \"comparator\": \">\", \"unit\": \"%\" }, \"high\": { \"value\": 35, \"comparator\": \"<\", \"unit\": \"%\" } }, \"text\": \"Some text\" } ], \"components\": [ { \"code\": { \"coding\": [ { \"system\": \"eHealth/LOINC/observation_codes\", \"code\": \"9279-1\" } ] }, \"value_quantity\": { \"value\": 13, \"comparator\": \">\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"interpretation\": { \"coding\": [ { \"system\": \"eHealth/observation_interpretations\", \"code\": \"default_observation_interpretation\" } ], \"text\": \"низький\" }, \"reference_ranges\": [ { \"low\": { \"value\": 13, \"comparator\": \">\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"high\": { \"value\": 27, \"comparator\": \"<\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"type\": { \"coding\": [ { \"system\": \"eHealth/reference_range_types\", \"code\": \"default_reference_range\" } ] }, \"applies_to\": [ { \"coding\": [ { \"system\": \"eHealth/reference_range_applications\", \"code\": \"default_reference_range_application\" } ] } ], \"age\": { \"low\": { \"value\": 18.0, \"comparator\": \">\", \"unit\": \"%\" }, \"high\": { \"value\": 35, \"comparator\": \"<\", \"unit\": \"%\" } }, \"text\": \"Some text\" } ] } ] }, { \"id\": \"{{observation_id_2}}\", \"status\": \"valid\", \"context\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"encounter\" } ] }, \"value\": \"{{encounter_id}}\" } }, \"categories\": [ { \"coding\": [ { \"system\": \"eHealth/observation_categories\", \"code\": \"vital-signs\" } ] } ], \"code\": { \"coding\": [ { \"system\": \"eHealth/LOINC/observation_codes\", \"code\": \"80319-7\" } ] }, \"effective_date_time\": \"2018-08-02T10:45:16.000Z\", \"issued\": \"1994-09-02T10:45:16.000Z\", \"primary_source\": true, \"performer\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ] }, \"value\": \"{{doctor_id}}\" } }, \"interpretation\": { \"coding\": [ { \"system\": \"eHealth/observation_interpretations\", \"code\": \"default_observation_interpretation\" } ] }, \"comment\": \"Some comment\", \"body_site\": { \"coding\": [ { \"system\": \"eHealth/body_sites\", \"code\": \"default_body_site\" } ] }, \"method\": { \"coding\": [ { \"system\": \"eHealth/observation_methods\", \"code\": \"default_observation_method\" } ], \"text\": \"метод ABC\" }, \"value_period\": { \"start\": \"2018-08-02T10:45:16.000Z\", \"end\": \"2018-08-02T11:00:00.000Z\" }, \"reference_ranges\": [ { \"low\": { \"value\": 13.000001, \"comparator\": \">\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"high\": { \"value\": 27, \"comparator\": \"<\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"type\": { \"coding\": [ { \"system\": \"eHealth/reference_range_types\", \"code\": \"default_reference_range\" } ], \"text\": \"нормальний\" }, \"applies_to\": [ { \"coding\": [ { \"system\": \"eHealth/reference_range_applications\", \"code\": \"default_reference_range_application\" } ] } ], \"age\": { \"low\": { \"value\": 18, \"comparator\": \">\", \"unit\": \"%\" }, \"high\": { \"value\": 35, \"comparator\": \"<\", \"unit\": \"%\" } }, \"text\": \"Some text\" } ], \"components\": [ { \"code\": { \"coding\": [ { \"system\": \"eHealth/LOINC/observation_codes\", \"code\": \"9279-1\" } ] }, \"value_quantity\": { \"value\": 13, \"comparator\": \">\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"interpretation\": { \"coding\": [ { \"system\": \"eHealth/observation_interpretations\", \"code\": \"default_observation_interpretation\" } ], \"text\": \"низький\" }, \"reference_ranges\": [ { \"low\": { \"value\": 13, \"comparator\": \">\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"high\": { \"value\": 27, \"comparator\": \"<\", \"unit\": \"%\", \"system\": \"eHealth/ucum/units\", \"code\": \"%\" }, \"type\": { \"coding\": [ { \"system\": \"eHealth/reference_range_types\", \"code\": \"default_reference_range\" } ] }, \"applies_to\": [ { \"coding\": [ { \"system\": \"eHealth/reference_range_applications\", \"code\": \"default_reference_range_application\" } ] } ], \"age\": { \"low\": { \"value\": 18.0, \"comparator\": \">\", \"unit\": \"%\" }, \"high\": { \"value\": 35, \"comparator\": \"<\", \"unit\": \"%\" } }, \"text\": \"Some text\" } ] } ] } ] }';",
											"var encounter_package = JSON.parse(encounter_package_template);",
											"encounter_package.encounter.id=encounter_id;",
											"encounter_package.encounter.date=encounter_date;",
											"encounter_package.encounter.visit.identifier.value=pm.environment.get(\"visit_id\");",
											"encounter_package.encounter.episode.identifier.value=pm.environment.get(\"episode_id\");",
											"encounter_package.encounter.diagnoses[0].condition.identifier.value=pm.environment.get(\"condition_id_1\");",
											"encounter_package.encounter.division.identifier.value=pm.environment.get(\"division_id\");",
											"encounter_package.encounter.performer.identifier.value=pm.environment.get(\"doctor_id\");",
											"",
											"encounter_package.observations[0].id=observation_id_1;",
											"encounter_package.observations[0].context.identifier.value=encounter_id;",
											"//encounter_package.observations[0].reaction_on.identifier.value=pm.environment.get(\"immunization_id_1\");",
											"//encounter_package.observations[0].performer.identifier.value=pm.environment.get(\"doctor_id\");",
											"encounter_package.observations[1].id=observation_id_2;",
											"encounter_package.observations[1].context.identifier.value=encounter_id;",
											"encounter_package.observations[1].performer.identifier.value=pm.environment.get(\"doctor_id\");",
											"encounter_package.observations[0].body_site.coding[0].code = \"left_leg\";",
											"encounter_package.observations[0].components[0].interpretation.coding[0].code = \"expected\";",
											"encounter_package.observations[0].interpretation.coding[0].code = \"expected\";",
											"encounter_package.observations[0].method.coding[0].code = \"physical\";",
											"encounter_package.observations[1].body_site.coding[0].code = \"right_leg\";",
											"encounter_package.observations[1].components[0].interpretation.coding[0].code = \"expected\";",
											"encounter_package.observations[1].interpretation.coding[0].code = \"expected\";",
											"encounter_package.observations[1].method.coding[0].code = \"physical\";",
											"",
											"var encounter_package_base64 = b64EncodeUnicode(JSON.stringify(encounter_package));",
											"postman.setEnvironmentVariable(\"encounter_package\", JSON.stringify(encounter_package));",
											"",
											"postman.setEnvironmentVariable(\"encounter_package_base64\", encounter_package_base64);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"id": "f236a174-f9e4-47e3-8f04-5ee265073558"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Job created\"] = responseCode.code === 202;",
											"var jsonData = JSON.parse(responseBody);",
											"//pm.environment.set(\"job_id\", jsonData.data.id);",
											"var job_id=jsonData.data.links[0].href.substring(6);",
											"pm.environment.set(\"job_id\", job_id);"
										],
										"type": "text/javascript",
										"id": "431ba66e-1f4d-4a65-92c1-aa5fe0aa406d"
									}
								}
							],
							"id": "15381251-61bb7aba-c667-45f9-aa39-ed8de4f79470",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "{{X-Custom-PSK}}",
										"value": "{{x-custom_demo}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/api/patients/b1b6b68b-ff03-4914-b84a-dd566bf75bbf/device_dispenses/bb34b8cc-e12e-4fc5-b573-da0e3fb39e43/actions/stop",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"b1b6b68b-ff03-4914-b84a-dd566bf75bbf",
										"device_dispenses",
										"bb34b8cc-e12e-4fc5-b573-da0e3fb39e43",
										"actions",
										"stop"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device dispenses by search params",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "21375ff9-6142-4a9d-acbb-515cdc6aba2c"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "a55e6907-e433-436d-b06d-034633103afd"
									}
								}
							],
							"id": "15381251-37817a58-a470-42b8-885d-a7fb1f83c5e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/device_requests?status=active&code=30222&code_reference=7075e0e2-6b57-47fd-aff7-324806efa7e5&requester_legal_entity=7075e0e2-6b57-47fd-aff7-324806efa7e5&requester=7075e0e2-6b57-47fd-aff7-324806efa7e5&encounter=7075e0e2-6b57-47fd-aff7-324806efa7e5&program=7075e0e2-6b57-47fd-aff7-324806efa7e5&context_episode_id=ef30f210-5328-4f48-bfe6-c7150d4737a6&based_on=7075e0e2-6b57-47fd-aff7-324806efa7e5&priority=low&performer=7075e0e2-6b57-47fd-aff7-324806efa7e5&authored_on_from=2020-01-01T00%3A00%3A00.000Z&authored_on_to=2021-01-01T00%3A00%3A00.000Z",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"device_requests"
									],
									"query": [
										{
											"key": "status",
											"value": "active"
										},
										{
											"key": "code",
											"value": "30222"
										},
										{
											"key": "code_reference",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "requester_legal_entity",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "requester",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "encounter",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "program",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "context_episode_id",
											"value": "ef30f210-5328-4f48-bfe6-c7150d4737a6"
										},
										{
											"key": "based_on",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "priority",
											"value": "low"
										},
										{
											"key": "performer",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5"
										},
										{
											"key": "authored_on_from",
											"value": "2020-01-01T00%3A00%3A00.000Z"
										},
										{
											"key": "authored_on_to",
											"value": "2021-01-01T00%3A00%3A00.000Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device dispenses by search params in patient context",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "11d26bcc-2da1-4c7e-9a23-5d025da1c3a1"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "4ffcfff4-b839-407a-8372-5fb6e7c51383"
									}
								}
							],
							"id": "15381251-990c3dd7-92ee-40f0-ae62-e44dad4170c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/device_dispenses?based_on=9075e0e2-6b57-47fd-aff7-324806efa7e6&location=9075e0e2-6b57-47fd-aff7-324806efa7e6&performer=9075e0e2-6b57-47fd-aff7-324806efa7e6&status=completed&when_handed_over_from=2023-08-02T10%3A45%3A16.000Z&when_handed_over_to=2023-08-02T10%3A45%3A16.000Z&part_of=9075e0e2-6b57-47fd-aff7-324806efa7e6&device=9075e0e2&performer_legal_entity=9075e0e2-6b57-47fd-aff7-324806efa7e6&inserted_at_from=2023-08-02T10%3A45%3A16.000Z&inserted_at_to=2023-08-02T10%3A45%3A16.000Z&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"device_dispenses"
									],
									"query": [
										{
											"key": "based_on",
											"value": "9075e0e2-6b57-47fd-aff7-324806efa7e6"
										},
										{
											"key": "location",
											"value": "9075e0e2-6b57-47fd-aff7-324806efa7e6"
										},
										{
											"key": "performer",
											"value": "9075e0e2-6b57-47fd-aff7-324806efa7e6"
										},
										{
											"key": "status",
											"value": "completed"
										},
										{
											"key": "when_handed_over_from",
											"value": "2023-08-02T10%3A45%3A16.000Z"
										},
										{
											"key": "when_handed_over_to",
											"value": "2023-08-02T10%3A45%3A16.000Z"
										},
										{
											"key": "part_of",
											"value": "9075e0e2-6b57-47fd-aff7-324806efa7e6"
										},
										{
											"key": "device",
											"value": "9075e0e2"
										},
										{
											"key": "performer_legal_entity",
											"value": "9075e0e2-6b57-47fd-aff7-324806efa7e6"
										},
										{
											"key": "inserted_at_from",
											"value": "2023-08-02T10%3A45%3A16.000Z"
										},
										{
											"key": "inserted_at_to",
											"value": "2023-08-02T10%3A45%3A16.000Z"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Device dispense contexts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "a0ee298b-ccb5-498b-8ae4-15a132b8aa50"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {},
										"id": "b5209e26-d804-40b3-98fe-a707859202ae"
									}
								}
							],
							"id": "15381251-f370f9bc-bdbb-4345-8a8a-97e3ee0079d6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host_demo}}/api/patients/patient_id/device_dispenses/device_dispense_id/context",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"patients",
										"patient_id",
										"device_dispenses",
										"device_dispense_id",
										"context"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-2b54cb7a-68b4-4a75-98b6-89baf21144bf"
				}
			],
			"id": "15381251-fae23269-f7b5-4850-845a-266b664905d6"
		},
		{
			"name": "Reimbursement",
			"item": [
				{
					"name": "Medication Request",
					"item": [
						{
							"name": "Get Medication request by ID",
							"id": "15381251-03b5e13f-e57a-4bf4-8a76-c9990c9ed931",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/medication_requests/0000-E054-TM12-6T06",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"medication_requests",
										"0000-E054-TM12-6T06"
									],
									"query": [
										{
											"key": "legal_entity_id",
											"value": "d290f1ee-6c54-4b01-90e6-d701748f0851",
											"disabled": true
										},
										{
											"key": "employee_id",
											"value": "7124259c-eeb1-4cbb-acac-ada2162675d1",
											"disabled": true
										},
										{
											"key": "person_id",
											"value": "d290f1ee-6c54-4b01-90e6-d701748f0851",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ACTIVE",
											"disabled": true
										},
										{
											"key": "created_from",
											"value": "2017-08-17",
											"disabled": true
										},
										{
											"key": "created_to",
											"value": "2017-08-30",
											"disabled": true
										},
										{
											"key": "medication_id",
											"value": "b075f148-7f93-4fc2-b2ec-2d81b19a9b5b",
											"disabled": true
										},
										{
											"key": "intent",
											"value": "order",
											"disabled": true
										},
										{
											"key": "care_plan_id",
											"value": "8838982b-6a77-4cb5-87cd-cdb82eb55364",
											"disabled": true
										},
										{
											"key": "encounter_id",
											"value": "7075e0e2-6b57-47fd-aff7-324806efa7e5",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PreQualify Medication Request Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6452322d-93cd-4134-b48a-26416e7ebcfc",
										"exec": [
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Check if the URL is defined and contains the expected format\r",
											"if (url && url.includes('encounters/')) {\r",
											"    // Extract the ID after 'encounters/'\r",
											"    const parts = url.split('encounters/');\r",
											"    if (parts.length > 1) {\r",
											"        const jobEncounterID = parts[1];\r",
											"        \r",
											"        // Log the extracted ID to the console (for debugging purposes)\r",
											"        console.log('Extracted jobEncounterID:', jobEncounterID);\r",
											"        \r",
											"        // Optionally, set the extracted ID as an environment variable\r",
											"        pm.globals.set('encounter_extracted_id', jobEncounterID);\r",
											"    } else {\r",
											"        console.error('The URL does not contain the expected format.');\r",
											"    }\r",
											"} else {\r",
											"    console.error('The global variable jobEncounterID is not defined or does not contain the expected format.');\r",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0605ba5f-d098-4584-a632-02c3949842aa",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(\"PreQualify Medication Request Request Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"PreQualify Medication Request Request status is VALID\", function () {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.data[0].status)\r",
											"    const status = resData.data[0].status;\r",
											"    pm.expect(status).to.eql(\"VALID\");\r",
											"});\r",
											"\r",
											"pm.test(\"PreQualify Medication Request Response care plan and activity with the same medical program are present\", function () {\r",
											"   \r",
											"    console.log(resData.data[0].rejection_reason)\r",
											"    const rejectionReason = resData.data[0].rejection_reason;\r",
											"    pm.expect(rejectionReason).to.be.eql('')\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-d80f1d3c-9c64-49ee-9e35-9839bc0e87ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"medication_request_request\": {\r\n        \"person_id\": \"{{patient_id_from_episode}}\",\r\n        \"employee_id\": \"{{user_id}}\",\r\n        \"division_id\": \"{{user_division_id}}\",\r\n        \"created_at\": \"2025-06-17\",\r\n        \"started_at\": \"2025-06-20\",\r\n        \"ended_at\": \"2025-06-23\",\r\n        \"medication_id\": \"8eff67cf-52a8-49e6-8c68-99bd677b07ec\",\r\n        \"medication_qty\": 20.0,\r\n        \"intent\": \"order\",\r\n        \"category\": \"community\",\r\n        \"context\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"encounter\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{encounter_extracted_id}}\"\r\n            }\r\n        },\r\n        \"dosage_instruction\": [\r\n            {\r\n                \"sequence\": 1,\r\n                \"text\": \"0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day\",\r\n                \"patient_instruction\": \"0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day\",\r\n                \"max_dose_per_period\": {\r\n                    \"numerator\": {\r\n                        \"value\": 0,\r\n                        \"unit\": \"mg\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"code\": \"mg\"\r\n                    },\r\n                    \"denominator\": {\r\n                        \"value\": 0,\r\n                        \"unit\": \"mg\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"code\": \"mg\"\r\n                    }\r\n                },\r\n                \"max_dose_per_administration\": {\r\n                    \"value\": 0,\r\n                    \"unit\": \"mg\",\r\n                    \"system\": \"eHealth/ucum/units\",\r\n                    \"code\": \"mg\"\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    \"programs\": [\r\n        {\r\n            \"id\": \"f646aa61-6765-4cfa-89cd-5259b68b2ab7\"\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/medication_request_requests/prequalify",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"medication_request_requests",
										"prequalify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Medication Request Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80293be6-bb70-4bc9-9137-e255dd2bb9a8",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Medication Request Request Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"\r",
											"function sendDataToSign(dataToBeSigned) {\r",
											"    const localServerUrl = 'http://localhost:3000/create-medication-request-request-signed-content';\r",
											"\r",
											"    const requestData = {\r",
											"        method: 'POST',\r",
											"        url: localServerUrl,\r",
											"        header: {\r",
											"            'Content-Type': 'application/json',\r",
											"        },\r",
											"        body: {\r",
											"            mode: 'raw',\r",
											"            raw: JSON.stringify(dataToBeSigned) // Send the entire response or specific fields\r",
											"        }\r",
											"    };\r",
											"\r",
											"    // Send the request to the local server\r",
											"    pm.sendRequest(requestData, function (err, res) {\r",
											"        if (err) {\r",
											"            console.error('Error sending request to local server:', err);\r",
											"        } else {\r",
											"            console.log('Response from local server:', res.json());\r",
											"            const responseBody = res.json();\r",
											"\r",
											"            pm.test(`Create Medication Request Request content sign success. Response status is 200 ${JSON.stringify(responseBody, null, 2)}`, function () {\r",
											"                pm.expect(res.code).to.eql(200);\r",
											"                pm.expect(responseBody).to.have.property('signed_content');\r",
											"                pm.globals.set('medication_req_req_data_to_sign', responseBody.signed_content)\r",
											"\r",
											"                displayResponse('Signed medication request request data', responseBody);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"pm.test(`Create Medication Request Request Response status code is 201  | RESPONSE - ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"\r",
											"    const status = resData.data.status\r",
											"    console.info(status)\r",
											"    pm.test('Medication Request Request status is \"NEW\"', function () {\r",
											"        pm.expect(status).to.eql('NEW');\r",
											"    });\r",
											"\r",
											"\r",
											"    const medicationReqReqId = resData.data.id\r",
											"    pm.globals.set('medication_req_req_id', medicationReqReqId);\r",
											"    console.info(medicationReqReqId);\r",
											"\r",
											"    pm.globals.set('medication_req_req_data_to_sign', resData.data);\r",
											"    console.info(resData.data);\r",
											"\r",
											"    sendDataToSign(resData.data);\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e5b744ed-f69d-412a-a9ca-92a74a068dc1",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-5f539f4a-3583-4b15-890f-f8f37e394454",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"medication_request_request\": {\r\n        \"person_id\": \"{{patient_id_from_episode}}\",\r\n        \"employee_id\": \"{{user_id}}\",\r\n        \"division_id\": \"{{user_division_id}}\",\r\n        \"created_at\": \"2025-06-17\",\r\n        \"started_at\": \"2025-06-20\",\r\n        \"ended_at\": \"2025-06-23\",\r\n        \"medication_id\": \"8eff67cf-52a8-49e6-8c68-99bd677b07ec\",\r\n        \"medication_qty\": 20.0,\r\n        \"medical_program_id\": \"f646aa61-6765-4cfa-89cd-5259b68b2ab7\",\r\n        \"intent\": \"order\",\r\n        \"category\": \"community\",\r\n        \"context\": {\r\n            \"identifier\": {\r\n                \"type\": {\r\n                    \"coding\": [\r\n                        {\r\n                            \"system\": \"eHealth/resources\",\r\n                            \"code\": \"encounter\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"value\": \"{{encounter_extracted_id}}\"\r\n            }\r\n        },\r\n        \"dosage_instruction\": [\r\n            {\r\n                \"sequence\": 1,\r\n                \"text\": \"0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day\",\r\n                \"patient_instruction\": \"0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day\",\r\n                \"max_dose_per_period\": {\r\n                    \"numerator\": {\r\n                        \"value\": 0,\r\n                        \"unit\": \"mg\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"code\": \"mg\"\r\n                    },\r\n                    \"denominator\": {\r\n                        \"value\": 0,\r\n                        \"unit\": \"mg\",\r\n                        \"system\": \"eHealth/ucum/units\",\r\n                        \"code\": \"mg\"\r\n                    }\r\n                },\r\n                \"max_dose_per_administration\": {\r\n                    \"value\": 0,\r\n                    \"unit\": \"mg\",\r\n                    \"system\": \"eHealth/ucum/units\",\r\n                    \"code\": \"mg\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/medication_request_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"medication_request_requests"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sign Medication Request Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8396713-00bc-465f-89bb-89b6c2ce7313",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"\r",
											"if (resData && resData.error) {\r",
											"    displayResponse('Sign Medication Request Request Response Error Details', resData.error);\r",
											"}\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Sign Medication Request Request Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"\r",
											"    const status = resData.data.status\r",
											"    console.info(status)\r",
											"\r",
											"    pm.test('Medication Request Request status is \"ACTIVE\"', function () {\r",
											"        pm.expect(status).to.eql('ACTIVE');\r",
											"    });\r",
											"\r",
											"    const printForm = resData.data.printout_form;\r",
											"\r",
											"    // Regular expression to match the confirmation code\r",
											"    const codeMatch = printForm.match(/КОД ПІДТВЕРДЖЕННЯ:\\s*(\\d+)/);\r",
											"\r",
											"    if (codeMatch && codeMatch[1]) {\r",
											"        const confirmationCode = codeMatch[1];\r",
											"        console.log(\"КОД ПІДТВЕРДЖЕННЯ:\", confirmationCode);\r",
											"        pm.globals.set('medication_req_confirmation_code', confirmationCode);\r",
											"    } else {\r",
											"        console.log(\"КОД ПІДТВЕРДЖЕННЯ not found.\");\r",
											"    }\r",
											"\r",
											"\r",
											"    pm.globals.set('medication_req_id', resData.data.id);\r",
											"    pm.globals.set('medication_req_request_number', resData.data.request_number);\r",
											"\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f34c6849-07b5-4b17-8041-c24400c2228a",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-d0e294b8-4f07-4167-87c8-5097f275e136",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_medication_request_request\": \"{{medication_req_req_data_to_sign}}\",\r\n  \"signed_content_encoding\": \"base64\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/medication_request_requests/{{medication_req_req_id}}/actions/sign",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"medication_request_requests",
										"{{medication_req_req_id}}",
										"actions",
										"sign"
									]
								}
							},
							"response": []
						},
						{
							"name": "Qualify Medication Request by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7d5dd22-b186-4606-8cc1-a175db22a46d",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(\"Qualify Medication Request Request Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Qualify Medication Request Request status is VALID\", function () {\r",
											"    const resData = pm.response.json();\r",
											"    console.log(resData.data[0].status)\r",
											"    const status = resData.data[0].status;\r",
											"    pm.expect(status).to.eql(\"VALID\");\r",
											"\r",
											"    pm.test(\"resData.data is an array\", function () {\r",
											"        pm.expect(Array.isArray(resData.data)).to.be.true;\r",
											"        const programId = resData.data[0].program_id;\r",
											"        console.info(programId)\r",
											"        pm.globals.set('program_id_qualify_medication_request', programId);\r",
											"\r",
											"        const medicationId = resData.data[0].participants[0].medication_id;\r",
											"        console.info(resData.data[0].participants[0].medication_id);\r",
											"        pm.globals.set('medication_id_qualify_medication_request', medicationId);\r",
											"\r",
											"        const porgramMedicationId = resData.data[0].participants[0].id;\r",
											"        console.info(resData.data[0].participants[0].id);\r",
											"        pm.globals.set('program_medication_id_qualify_medication_request', porgramMedicationId);\r",
											"    });\r",
											"\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "520e3f2a-abce-42ba-98e5-230a95311730",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-f696698a-f972-462e-aa30-dffaab28804e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"division_id\": \"2bb9f35c-711f-4bdf-a69f-0d4fab0d2076\",\r\n  \"programs\": [\r\n    {\r\n      \"id\": \"f646aa61-6765-4cfa-89cd-5259b68b2ab7\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/medication_requests/{{medication_req_id}}/actions/qualify",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"medication_requests",
										"{{medication_req_id}}",
										"actions",
										"qualify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication Request Request by ID",
							"id": "15381251-20722101-4da5-425b-85e2-c7d5479d821c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/medication_request_requests/73645f47-4a3c-4d4c-a06b-a012e783ccd8",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"medication_request_requests",
										"73645f47-4a3c-4d4c-a06b-a012e783ccd8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication Request by ID by Pharmacy User",
							"id": "15381251-96cda2b3-8b87-467d-aced-45bdb014f195",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/pharmacy/medication_requests/{{medication_req_request_number}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"pharmacy",
										"medication_requests",
										"{{medication_req_request_number}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Block Medication Request",
							"id": "15381251-1d6c3013-cf8d-43d7-bf7e-8101285f7249",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"block_reason\": \"перевищено норми відпуску\",\r\n    \"block_reason_code\": \"WRONG_DOSAGE\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/medication_requests/ffaa9aa5-75bb-4f3f-bbff-e40b464a08db/actions/block",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"medication_requests",
										"ffaa9aa5-75bb-4f3f-bbff-e40b464a08db",
										"actions",
										"block"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unblock Medication Request",
							"id": "15381251-aea57338-87fb-4f59-8eb5-fbbc1f06efc9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"block_reason\": \"помилки відсутні\",\r\n    \"block_reason_code\": \"DEFAULT\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/medication_requests/ffaa9aa5-75bb-4f3f-bbff-e40b464a08db/actions/unblock",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"medication_requests",
										"ffaa9aa5-75bb-4f3f-bbff-e40b464a08db",
										"actions",
										"unblock"
									]
								}
							},
							"response": []
						},
						{
							"name": "Block Medication Request by Pharmacy User",
							"id": "15381251-889458dc-4f6c-4698-86f3-0bcb0ab33a6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"block_reason\": \"перевищено норми відпуску\",\r\n  \"block_reason_code\": \"WRONG_QTY_DRUG\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/pharmacy/medication_requests/ffaa9aa5-75bb-4f3f-bbff-e40b464a08db/actions/block",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"pharmacy",
										"medication_requests",
										"ffaa9aa5-75bb-4f3f-bbff-e40b464a08db",
										"actions",
										"block"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject Medication Request",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d9a1578a-94af-4ee0-a119-8cd732c2b2e1",
										"exec": [
											"const patientID = pm.globals.get('patient_id_from_episode') || \"\"; //or use id other patient\r",
											"const mrId = pm.globals.get('medication_req_id') || \"\"; //or use yours own mr ID\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    console.log(title, data)\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"pm\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/persons/${patientID}/medication_requests/${mrId}`,\r",
											"    method: \"GET\",\r",
											"    header: {\r",
											"        \"Content-Type\": \"application/json\",\r",
											"        \"api-key\": `${pm.environment.get('mis_client_secret')}`,\r",
											"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
											"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        // displayResponse(\"Error get MR\", err)\r",
											"        console.error(\"Request Error:\", err);\r",
											"        return;\r",
											"    }\r",
											"\r",
											"    try {\r",
											"        // Parse the response\r",
											"        const responseData = res.json();\r",
											"\r",
											"        // Destructure necessary fields from responseData.data\r",
											"        const {\r",
											"            category,\r",
											"            context,\r",
											"            created_at,\r",
											"            dispense_valid_from,\r",
											"            dispense_valid_to,\r",
											"            dosage_instruction,\r",
											"            ended_at,\r",
											"            id,\r",
											"            intent,\r",
											"            medical_program,\r",
											"            medication_info,\r",
											"            person,\r",
											"            request_number,\r",
											"            started_at,\r",
											"            status\r",
											"        } = responseData.data;\r",
											"\r",
											"        // Remove the `id` field from the `person` object\r",
											"        if (person && person.id) {\r",
											"            delete person.id;\r",
											"        }\r",
											"\r",
											"        // Construct modified object with added reject_reason_code\r",
											"        const modifiedObject = {\r",
											"            category,\r",
											"            context,\r",
											"            created_at,\r",
											"            dispense_valid_from,\r",
											"            dispense_valid_to,\r",
											"            dosage_instruction,\r",
											"            ended_at,\r",
											"            id,\r",
											"            intent,\r",
											"            medical_program,\r",
											"            medication_info,\r",
											"            person,\r",
											"            request_number,\r",
											"            started_at,\r",
											"            status,\r",
											"            reject_reason_code: \"WRONG_SIGNATURE\" // Add field\r",
											"        };\r",
											"\r",
											"        // Visualization\r",
											"        displayResponse(\"MR_reject_body\", modifiedObject)\r",
											"\r",
											"        // Save the modified object to globals\r",
											"        pm.globals.set(\"modified_response_data\", JSON.stringify(modifiedObject));\r",
											"\r",
											"        // Log confirmation\r",
											"        console.log(\"Modified object set in globals:\", modifiedObject);\r",
											"    } catch (parseError) {\r",
											"        console.error(\"Response parsing error. Raw body:\", res.text());\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c0f0ce9a-0c28-4cd9-8adb-2d46d7971e83",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-12c0656a-422e-4700-9625-43500b36ea73",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_medication_reject\": \"\",\r\n  \"signed_content_encoding\": \"base64\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/medication_requests/{{medication_req_id}}/actions/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"medication_requests",
										"{{medication_req_id}}",
										"actions",
										"reject"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject Medication Request by Pharmacy User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e2abab7b-bc06-45d9-ba5a-c441922777cc",
										"exec": [
											"const requestionNumber = pm.globals.get('medication_req_request_number');// or other requestion number\r",
											"\r",
											"function displayResponse(title, data) {\r",
											"    console.log(title, data)\r",
											"    const html = `\r",
											"        <h1>${title}</h1>\r",
											"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
											"    pm.visualizer.set(html);\r",
											"}\r",
											"pm\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/pharmacy/medication_requests/${requestionNumber}`,\r",
											"    method: \"GET\",\r",
											"    header: {\r",
											"        \"Content-Type\": \"application/json\",\r",
											"        \"api-key\": `${pm.environment.get('mis_client_secret')}`,\r",
											"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
											"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        // displayResponse(\"Error get MR\", err)\r",
											"        console.error(\"Request Error:\", err);\r",
											"        return;\r",
											"    }\r",
											"\r",
											"    try {\r",
											"        // Parse the response\r",
											"        const responseData = res.json();\r",
											"\r",
											"        // Destructure necessary fields from responseData.data\r",
											"        const {\r",
											"            category,\r",
											"            context,\r",
											"            created_at,\r",
											"            dispense_valid_from,\r",
											"            dispense_valid_to,\r",
											"            dosage_instruction,\r",
											"            ended_at,\r",
											"            id,\r",
											"            intent,\r",
											"            medical_program,\r",
											"            medication_info,\r",
											"            person,\r",
											"            request_number,\r",
											"            started_at,\r",
											"            status\r",
											"        } = responseData.data;\r",
											"\r",
											"        // Remove the `id` field from the `person` object\r",
											"        if (person && person.id) {\r",
											"            delete person.id;\r",
											"        }\r",
											"\r",
											"        // Construct modified object with added reject_reason_code\r",
											"        const modifiedObject = {\r",
											"            category,\r",
											"            context,\r",
											"            created_at,\r",
											"            dispense_valid_from,\r",
											"            dispense_valid_to,\r",
											"            dosage_instruction,\r",
											"            ended_at,\r",
											"            id,\r",
											"            intent,\r",
											"            medical_program,\r",
											"            medication_info,\r",
											"            person,\r",
											"            request_number,\r",
											"            started_at,\r",
											"            status,\r",
											"            reject_reason_code: \"WRONG_SIGNATURE\" // Add field\r",
											"        };\r",
											"\r",
											"        // Visualization\r",
											"        displayResponse(\"MR_reject_body\", modifiedObject)\r",
											"\r",
											"        // Save the modified object to globals\r",
											"        pm.globals.set(\"modified_response_data\", JSON.stringify(modifiedObject));\r",
											"\r",
											"        // Log confirmation\r",
											"        console.log(\"Modified object set in globals:\", modifiedObject);\r",
											"    } catch (parseError) {\r",
											"        console.error(\"Response parsing error. Raw body:\", res.text());\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bb4d001e-986e-4864-b237-546cb51ab4d0",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-8b64c488-3086-4bc8-b769-6327485bcf88",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_medication_reject\": \"\",\r\n  \"signed_content_encoding\": \"base64\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/pharmacy/medication_requests/{{medication_req_id}}/actions/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"pharmacy",
										"medication_requests",
										"{{medication_req_id}}",
										"actions",
										"reject"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication Request Printout Form",
							"id": "15381251-1fb48f32-93e0-4fb5-a196-7b8b11acb361",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/persons/db725f9b-241c-4b24-8dc1-76ebcb458773/medication_requests/5759911c-b6c8-42b7-bfaa-5a332b674d0f/printout_form",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons",
										"db725f9b-241c-4b24-8dc1-76ebcb458773",
										"medication_requests",
										"5759911c-b6c8-42b7-bfaa-5a332b674d0f",
										"printout_form"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get medication requests details",
							"id": "15381251-3a7945e3-14ae-48a0-89a9-b8668044458b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/persons/{{patient_id_from_episode}}/medication_requests/{{medication_req_id}}",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"persons",
										"{{patient_id_from_episode}}",
										"medication_requests",
										"{{medication_req_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get medication requests by search params",
							"id": "15381251-7421bf52-6a6c-4655-9bb6-9f7022c970a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/persons/db725f9b-241c-4b24-8dc1-76ebcb458773/medication_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons",
										"db725f9b-241c-4b24-8dc1-76ebcb458773",
										"medication_requests"
									],
									"query": [
										{
											"key": "legal_entity_id",
											"value": "0dccb76f-3ed0-40f4-8f73-e95e2f91ea29",
											"disabled": true
										},
										{
											"key": "employee_id",
											"value": "92bb524b-3994-43b4-9dd6-43c675a16ec3",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ACTIVE",
											"disabled": true
										},
										{
											"key": "request_number",
											"value": "0000-E9KX-H55A-TM68",
											"disabled": true
										},
										{
											"key": "created_from",
											"value": "2022-07-01",
											"disabled": true
										},
										{
											"key": "created_to",
											"value": "2022-08-31",
											"disabled": true
										},
										{
											"key": "medication_id",
											"value": "fa6e0403-58e8-4173-b0e4-2135ad442459",
											"disabled": true
										},
										{
											"key": "intent",
											"value": "order",
											"disabled": true
										},
										{
											"key": "care_plan_id",
											"value": "85750cc7-969b-4faf-a5de-1e5650f95f6b",
											"disabled": true
										},
										{
											"key": "encounter_id",
											"value": "e6f6cde0-80fe-48e7-b4a0-cdf24aeb85db",
											"disabled": true
										},
										{
											"key": "episode_id",
											"value": "1e8f7a7f-68df-42ed-982c-4065f40400fa",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication requests in care plan context",
							"id": "15381251-799d461f-dcf1-4104-ba84-c5327999c62d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/care_plans/eb487aaa-cfba-4c5a-bbbd-17117d30fe78/medication_requests",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"care_plans",
										"eb487aaa-cfba-4c5a-bbbd-17117d30fe78",
										"medication_requests"
									],
									"query": [
										{
											"key": "legal_entity_id",
											"value": "0dccb76f-3ed0-40f4-8f73-e95e2f91ea29",
											"disabled": true
										},
										{
											"key": "employee_id",
											"value": "4f8a300e-65a0-47c1-9265-1f92b70bf049",
											"disabled": true
										},
										{
											"key": "person_id",
											"value": "d290f1ee-6c54-4b01-90e6-d701748f0851",
											"disabled": true
										},
										{
											"key": "status",
											"value": "ACTIVE",
											"disabled": true
										},
										{
											"key": "request_number",
											"value": "0000-243P-1X53-EH38",
											"disabled": true
										},
										{
											"key": "created_from",
											"value": "2022-10-20",
											"disabled": true
										},
										{
											"key": "created_to",
											"value": "2017-10-20",
											"disabled": true
										},
										{
											"key": "medication_id",
											"value": "b075f148-7f93-4fc2-b2ec-2d81b19a9b5b",
											"disabled": true
										},
										{
											"key": "intent",
											"value": "order",
											"disabled": true
										},
										{
											"key": "encounter_id",
											"value": "8b33cce1-baad-4168-9775-ae730b57d74d",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Medication Dispenses by Medication Request ID",
							"id": "15381251-8a05a9ba-8c8f-448d-8d36-c12db132c165",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/persons/db725f9b-241c-4b24-8dc1-76ebcb458773/medication_requests/5759911c-b6c8-42b7-bfaa-5a332b674d0f/medication_dispenses?page=1&page_size=10",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"persons",
										"db725f9b-241c-4b24-8dc1-76ebcb458773",
										"medication_requests",
										"5759911c-b6c8-42b7-bfaa-5a332b674d0f",
										"medication_dispenses"
									],
									"query": [
										{
											"key": "status",
											"value": "PROCESSED",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-8704dc2b-4fcf-4831-9aa6-0d57639391ff"
				},
				{
					"name": "Medication Dispense",
					"item": [
						{
							"name": "Create Medication Dispense by Pharmacy User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b8caa9d-da2c-4213-8550-18bf8b3500ca",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Create Medication Dispense Response status code is 201\", function () {\r",
											"    pm.expect(pm.response.code).to.eql(201);\r",
											"\r",
											"    pm.globals.set('medication_dispense_id', resData.data.id)\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "05d73314-0bc5-4fae-9d3f-99cb75be76b6",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-62a6aa45-0b47-40d5-9d3a-0867f28159c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"medication_dispense\": {\r\n        \"medication_request_id\": \"{{medication_req_id}}\",\r\n        \"dispensed_at\": \"2024-11-01\",\r\n        \"dispensed_by\": \"Іванов Іван Іванович\",\r\n        \"division_id\": \"2bb9f35c-711f-4bdf-a69f-0d4fab0d2076\",\r\n        \"medical_program_id\": \"{{program_id_qualify_medication_request}}\",\r\n        \"dispense_details\": [\r\n            {\r\n                \"program_medication_id\": \"{{program_medication_id_qualify_medication_request}}\",\r\n                \"medication_id\": \"{{medication_id_qualify_medication_request}}\",\r\n                \"medication_qty\": 20.0,\r\n                \"sell_price\":141.54,\r\n                \"sell_amount\":141.54,\r\n                \"discount_amount\":0\r\n            }\r\n        ]\r\n    }\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/pharmacy/medication_dispenses?code={{medication_req_confirmation_code}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"pharmacy",
										"medication_dispenses"
									],
									"query": [
										{
											"key": "code",
											"value": "{{medication_req_confirmation_code}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication dispense details by Pharmacy User",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81a8f2a5-800c-4114-903c-82e8650c2d5b",
										"exec": [
											"const resData = pm.response.json();\r",
											"const original = resData.data\r",
											"original.payment_amount = 2;\r",
											"\r",
											"pm.visualizer.set(`\r",
											"    <style>\r",
											"        pre {\r",
											"            background-color: #f6f8fa;\r",
											"            padding: 16px;\r",
											"            border-radius: 5px;\r",
											"            font-family: monospace;\r",
											"            white-space: pre-wrap;\r",
											"        }\r",
											"        button {\r",
											"            margin-bottom: 10px;\r",
											"            padding: 5px 10px;\r",
											"            border-radius: 4px;\r",
											"            border-color: #fff;\r",
											"            cursor: pointer;\r",
											"        }\r",
											"        button:hover{\r",
											"            border-color: #000;\r",
											"        }\r",
											"    </style>\r",
											"    <h3>Згенерований JSON</h3>\r",
											"    <button onclick=\"copyToClipboard()\">Скопіювати JSON</button>\r",
											"    <pre id=\"jsonOutput\">{{json}}</pre>\r",
											"    <script>\r",
											"        function copyToClipboard() {\r",
											"            const text = document.getElementById('jsonOutput').innerText;\r",
											"            const textArea = document.createElement('textarea');\r",
											"            textArea.value = text;\r",
											"            document.body.appendChild(textArea);\r",
											"            textArea.select();\r",
											"            try {\r",
											"                document.execCommand('copy');\r",
											"                alert('JSON скопійовано!');\r",
											"            } catch (err) {\r",
											"                alert('Помилка копіювання: ' + err);\r",
											"            }\r",
											"            document.body.removeChild(textArea);\r",
											"        }\r",
											"    </script>\r",
											"`, {\r",
											"    json: JSON.stringify(original, null, 2)\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01f236bf-641a-460b-b978-8b89628f7340",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-af3225fd-87ea-403e-a1d5-3acb30def447",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/pharmacy/medication_dispenses/{{medication_dispense_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"pharmacy",
										"medication_dispenses",
										"{{medication_dispense_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Process Medication Dispense by Pharmacy User",
							"id": "15381251-fcecb1c9-32f4-4f7f-af8f-08cc349e7f16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_medication_dispense\": \"\",\r\n  \"signed_content_encoding\": \"base64\"\r\n}"
								},
								"url": {
									"raw": "{{host}}/api/pharmacy/medication_dispenses/{{medication_dispense_id}}/actions/process",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"pharmacy",
										"medication_dispenses",
										"{{medication_dispense_id}}",
										"actions",
										"process"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject Medication Dispense by Pharmacy User",
							"id": "15381251-d41c3c0b-a685-4f4a-b7d0-203bb5bb28e4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/api/pharmacy/medication_dispenses/id/actions/reject",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"pharmacy",
										"medication_dispenses",
										"id",
										"actions",
										"reject"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication dispenses by search params by Pharmacy User",
							"id": "15381251-6d20a46b-8600-49be-be4b-cc49976d4db8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/pharmacy/medication_dispenses?medication_request_id=f1121ea8-28e3-417c-862d-54d087ebd907",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"pharmacy",
										"medication_dispenses"
									],
									"query": [
										{
											"key": "id",
											"value": "a89f6a26-4221-4597-a1d2-542d5e40b565",
											"disabled": true
										},
										{
											"key": "legal_entity_id",
											"value": "a89f6a26-4221-4597-a1d2-542d5e40b565",
											"disabled": true
										},
										{
											"key": "division_id",
											"value": "a89f6a26-4221-4597-a1d2-542d5e40b565",
											"disabled": true
										},
										{
											"key": "status",
											"value": "PROCESSED",
											"disabled": true
										},
										{
											"key": "dispensed_from",
											"value": "'2017",
											"disabled": true
										},
										{
											"key": "dispensed_to",
											"value": "'2017",
											"disabled": true
										},
										{
											"key": "care_plan_id",
											"value": "8838982b-6a77-4cb5-87cd-cdb82eb55364",
											"disabled": true
										},
										{
											"key": "page",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page_size",
											"value": "50",
											"disabled": true
										},
										{
											"key": "medication_request_id",
											"value": "f1121ea8-28e3-417c-862d-54d087ebd907"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication dispense details in person context",
							"id": "15381251-20191f34-04da-40ea-83b2-7811b972c175",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/persons/person_id/medication_dispenses/id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"persons",
										"person_id",
										"medication_dispenses",
										"id"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medication Dispense details in Composition context",
							"id": "15381251-065b9bcc-0e12-4430-962e-8b90a263d7bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/persons/person_id/compositions/composition_id/medication_dispenses/id",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"persons",
										"person_id",
										"compositions",
										"composition_id",
										"medication_dispenses",
										"id"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-26d5a22d-a2f9-4526-a77f-34646aeed36c"
				},
				{
					"name": "Get Reimbursement Report",
					"id": "15381251-067a12bd-624e-434e-b9db-3ef21e161add",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/reimbursement_report?page=2&page_size=50&date_from_request=2017-09-01&date_to_request=2017-10-01&date_from_dispense=2017-09-01&date_to_dispense=2017-10-01",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"reimbursement_report"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "date_from_request",
									"value": "2017-09-01"
								},
								{
									"key": "date_to_request",
									"value": "2017-10-01"
								},
								{
									"key": "date_from_dispense",
									"value": "2017-09-01"
								},
								{
									"key": "date_to_dispense",
									"value": "2017-10-01"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-fcea9270-ded2-4b8b-b23b-965d75d9a2ae"
		},
		{
			"name": "Medical Programs",
			"item": [
				{
					"name": "Medical program provision",
					"item": [
						{
							"name": "Dummy Create Medical program provision",
							"id": "15381251-1a5b466b-2596-436c-9a12-00b228b8e5db",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contract_number\": \"0000-416M-M000\",\r\n  \"medical_program_id\": \"1a227396-a0e4-4c4f-a0a9-6b358c8929d2\",\r\n  \"divisions\": [\r\n    \"2bb9f35c-711f-4bdf-a69f-0d4fab0d2076\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "Create Medical program provision",
							"id": "15381251-74d7b579-9667-49cc-b0ce-269757dfe2f0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"signed_content\": \"\",\r\n  \"signed_content_encoding\": \"base64\"\r\n}"
								},
								"url": {
									"raw": "{{host_demo}}/api/medical_program_provision",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"medical_program_provision"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate Medical program provision",
							"id": "15381251-07e78651-f2cf-4aa2-8c6e-8bbf2a0e94ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/medical_program_provision/id/actions/deactivate",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"medical_program_provision",
										"id",
										"actions",
										"deactivate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Medical program provision List",
							"id": "15381251-925b5bc9-c02e-411e-b451-6108e9f37128",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec"
									}
								],
								"url": {
									"raw": "{{host_demo}}/api/medical_program_provision?contract_number=0000-PAP5-M000&medical_program_id=04d5ea65-d6e7-44f8-9eef-f0d3c1121d2b&division_id=6d07bdb0-59c0-4b54-8a90-bada3e232877&is_active=true&msp_legal_entity_id=15d5ea65-d6e7-44f8-9eef-f0d3c1121d3a&page=2&page_size=50",
									"host": [
										"{{host_demo}}"
									],
									"path": [
										"api",
										"medical_program_provision"
									],
									"query": [
										{
											"key": "contract_number",
											"value": "0000-PAP5-M000"
										},
										{
											"key": "medical_program_id",
											"value": "04d5ea65-d6e7-44f8-9eef-f0d3c1121d2b"
										},
										{
											"key": "division_id",
											"value": "6d07bdb0-59c0-4b54-8a90-bada3e232877"
										},
										{
											"key": "is_active",
											"value": "true"
										},
										{
											"key": "msp_legal_entity_id",
											"value": "15d5ea65-d6e7-44f8-9eef-f0d3c1121d3a"
										},
										{
											"key": "page",
											"value": "2"
										},
										{
											"key": "page_size",
											"value": "50"
										}
									]
								},
								"description": "This endpoint returns medical program by id.\n\n**Scopes required:** `medical_program:read`"
							},
							"response": []
						}
					],
					"id": "15381251-4a4619e0-133a-4aac-9a2d-69a5d7406783"
				},
				{
					"name": "Get medical programs list",
					"id": "15381251-d45bc93c-f9fd-41d0-805e-4dcaf9605f27",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec"
							}
						],
						"url": {
							"raw": "{{host_demo}}/api/medical_programs?id=d290f1ee-6c54-4b01-90e6-d701748f0851&name=%D0%94%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BD%D1%96%20%D0%BB%D1%96%D0%BA%D0%B8&is_active=true&mr_blank_type=F-1&page=2&page_size=50&type=MEDICATION",
							"host": [
								"{{host_demo}}"
							],
							"path": [
								"api",
								"medical_programs"
							],
							"query": [
								{
									"key": "id",
									"value": "d290f1ee-6c54-4b01-90e6-d701748f0851"
								},
								{
									"key": "name",
									"value": "%D0%94%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BD%D1%96%20%D0%BB%D1%96%D0%BA%D0%B8"
								},
								{
									"key": "is_active",
									"value": "true"
								},
								{
									"key": "mr_blank_type",
									"value": "F-1"
								},
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "type",
									"value": "MEDICATION"
								}
							]
						},
						"description": "Method returns list of medical programs filtering by parameters. By default method returns only active medical programs `is_active=true`\n\n**Scopes required:** `medical_program:read`"
					},
					"response": []
				},
				{
					"name": "Get program by id",
					"id": "15381251-2ed0b621-fcf4-4e11-9a43-4f439ce6b3e5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec"
							}
						],
						"url": {
							"raw": "{{host_demo}}/api/medical_programs/1318eabc-1a1a-42f6-8450-61e11c19eede",
							"host": [
								"{{host_demo}}"
							],
							"path": [
								"api",
								"medical_programs",
								"1318eabc-1a1a-42f6-8450-61e11c19eede"
							]
						},
						"description": "This endpoint returns medical program by id.\n\n**Scopes required:** `medical_program:read`"
					},
					"response": []
				},
				{
					"name": "Get Program services list",
					"id": "15381251-37429dde-176b-4c6e-bcaf-38790dbb3d61",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec"
							}
						],
						"url": {
							"raw": "{{host_demo}}/api/program_services?page=2&page_size=50&medical_program_id=1380df72-275a-11e7-93ae-92361f002671",
							"host": [
								"{{host_demo}}"
							],
							"path": [
								"api",
								"program_services"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "medical_program_id",
									"value": "1380df72-275a-11e7-93ae-92361f002671"
								}
							]
						},
						"description": "This endpoint returns list of service program members.\n\n**Scopes required:** `program_service:read`"
					},
					"response": []
				},
				{
					"name": "Get Program service by id",
					"id": "15381251-6d8ec682-cda9-40ab-9d77-4f918f983b23",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							},
							{
								"key": "api-key",
								"value": "30276e63617461a185ec"
							}
						],
						"url": {
							"raw": "{{host_demo}}/api/program_services/id",
							"host": [
								"{{host_demo}}"
							],
							"path": [
								"api",
								"program_services",
								"id"
							]
						},
						"description": "This endpoint returns service program member by id.\n\n**Scopes required:** `program_service:read`"
					},
					"response": []
				}
			],
			"id": "15381251-68fcb406-8c71-4754-85ab-143377b0826c"
		},
		{
			"name": "Composition",
			"item": [
				{
					"name": "Drivers",
					"item": [
						{
							"name": "DRIVERS_1_Dummy_Composition",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5caa807a-cdfd-494a-9583-6b37ece893f2",
										"exec": [
											"const uuid = require('uuid');\r",
											"const id = uuid.v4();\r",
											"pm.environment.set(\"composition_id\", id);\r",
											"\r",
											"\r",
											"// ADOPTION\r",
											"// DRIVERS\r",
											"\r",
											"const COMPOSITION_TYPE = \"DRIVERS\";\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/patients/${pm.globals.get('patient_id_from_episode')}/composition_title?composition_type=${COMPOSITION_TYPE}`,\r",
											"    method: \"POST\",\r",
											"    header: {\r",
											"        \"Content-Type\": \"application/json\",\r",
											"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
											"        \"api-key\": \"30276e63617461a185ec\",\r",
											"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        console.error(\"Помилка запиту:\", err);\r",
											"    } else {\r",
											"        const resData = res.json();\r",
											"        const title = resData.data.title;\r",
											"\r",
											"        pm.globals.set('composition_stitle', title)\r",
											"        console.log(resData.data.title) \r",
											"        console.log(\"Відповідь сервера:\", res.json());\r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											"// Helper function to extract IDs from URLs\r",
											"function extractID(url, keyword, variableName) {\r",
											"    if (url && url.includes(`${keyword}/`)) {\r",
											"        const parts = url.split(`${keyword}/`);\r",
											"        if (parts.length > 1) {\r",
											"            const extractedID = parts[1];\r",
											"            \r",
											"            // Log the extracted ID to the console (for debugging purposes)\r",
											"            console.log(`Extracted ${variableName}:`, extractedID);\r",
											"            \r",
											"            // Set the extracted ID as an environment variable\r",
											"            pm.globals.set(variableName, extractedID);\r",
											"        } else {\r",
											"            console.error(`The URL does not contain the expected format for ${keyword}.`);\r",
											"        }\r",
											"    } else {\r",
											"        console.error(`The global variable ${variableName} is not defined or does not contain the expected format.`);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Extract encounter and observation IDs using the helper function\r",
											"extractID(url, 'encounters', 'encounter_extracted_id');\r",
											"extractID(url, 'observations', 'observation_extracted_id');\r",
											"// extractID(url, 'conditions', 'condition_extracted_id');\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2a0b59b6-2478-45c1-8de4-5de351a53f18",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(`Composition content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('composition_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-e9ce6ba5-b92a-4d29-8b8a-dba1748b0037",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{composition_id}}\",\r\n    \"title\": \"{{composition_stitle}}\",\r\n    \"status\": \"FINAL\",\r\n    \"type\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_TYPES\",\r\n                \"code\": \"DRIVERS\"\r\n            }\r\n        ]\r\n    },\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_CATEGORIES\",\r\n                \"code\": \"DRIVERS_GROUP1\"\r\n            }\r\n        ]\r\n    },\r\n    \"date\": \"2025-04-27T00:00:00.694Z\",\r\n    \"custodian\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"legal_entity\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_legal_entity}}\"\r\n        }\r\n    },\r\n    \"encounter\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"2e657996-68d4-4113-aee1-64ba6764011d\"\r\n        }\r\n    },\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"extension\": [\r\n        {\r\n            \"code\": \"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION\",\r\n            \"value_codeable_concept\": {\r\n                \"extension\": [\r\n                    {\r\n                        \"code\": \"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION_VALUE\",\r\n                        \"value_decimal\": 300\r\n                    },\r\n                    {\r\n                        \"code\": \"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION_LETTER_DESIGNATIONS\",\r\n                        \"value_codeable_concept\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION_LETTER_DESIGNATIONS\",\r\n                                    \"code\": \"a\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                ],\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION\",\r\n                        \"code\": \"20.07.\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"attester\": [\r\n        {\r\n            \"mode\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_ATTESTER_MODES\",\r\n                        \"code\": \"LEGAL\"\r\n                    }\r\n                ]\r\n            },\r\n            \"party\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"string\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"event\": [\r\n        {\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_EVENTS\",\r\n                        \"code\": \"DRIVERS_GROUP2_DENY\"\r\n                    }\r\n                ]\r\n            },\r\n            \"period\": {\r\n                \"start\": \"2025-04-27T00:00:00.694Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"section\": [\r\n        {\r\n            \"title\": \"DRIVERS_DRIVERS_GROUP1_FREE_SECTION\",\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_SECTION_CODES\",\r\n                        \"code\": \"DRIVERS_DRIVERS_GROUP1_FREE_SECTION\"\r\n                    }\r\n                ]\r\n            },\r\n            \"entry\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"activity\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"269ed302-082d-4ecf-82c1-025c8f1a97eb\"\r\n                    }\r\n                }\r\n            ],\r\n            \"author\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-composition-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-composition-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "DRIVERS_2_Dummy_Composition",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5caa807a-cdfd-494a-9583-6b37ece893f2",
										"exec": [
											"const uuid = require('uuid');\r",
											"const id = uuid.v4();\r",
											"pm.environment.set(\"composition_id\", id);\r",
											"\r",
											"\r",
											"// ADOPTION\r",
											"// DRIVERS\r",
											"\r",
											"const COMPOSITION_TYPE = \"DRIVERS\";\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/patients/${pm.globals.get('patient_id_from_episode')}/composition_title?composition_type=${COMPOSITION_TYPE}`,\r",
											"    method: \"POST\",\r",
											"    header: {\r",
											"        \"Content-Type\": \"application/json\",\r",
											"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
											"        \"api-key\": \"30276e63617461a185ec\",\r",
											"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        console.error(\"Помилка запиту:\", err);\r",
											"    } else {\r",
											"        const resData = res.json();\r",
											"        const title = resData.data.title;\r",
											"\r",
											"        pm.globals.set('composition_stitle', title)\r",
											"        console.log(resData.data.title) \r",
											"        console.log(\"Відповідь сервера:\", res.json());\r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"// Helper function to extract IDs from URLs\r",
											"function extractID(url, keyword, variableName) {\r",
											"    if (url && url.includes(`${keyword}/`)) {\r",
											"        const parts = url.split(`${keyword}/`);\r",
											"        if (parts.length > 1) {\r",
											"            const extractedID = parts[1];\r",
											"            \r",
											"            // Log the extracted ID to the console (for debugging purposes)\r",
											"            console.log(`Extracted ${variableName}:`, extractedID);\r",
											"            \r",
											"            // Set the extracted ID as an environment variable\r",
											"            pm.globals.set(variableName, extractedID);\r",
											"        } else {\r",
											"            console.error(`The URL does not contain the expected format for ${keyword}.`);\r",
											"        }\r",
											"    } else {\r",
											"        console.error(`The global variable ${variableName} is not defined or does not contain the expected format.`);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Extract encounter and observation IDs using the helper function\r",
											"extractID(url, 'encounters', 'encounter_extracted_id');\r",
											"extractID(url, 'observations', 'observation_extracted_id');\r",
											"// extractID(url, 'conditions', 'condition_extracted_id');\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2a0b59b6-2478-45c1-8de4-5de351a53f18",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(`Composition content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('composition_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-d4596080-218b-44d9-9191-2700254e0463",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{composition_id}}\",\r\n    \"title\": \"{{composition_stitle}}\",\r\n    \"status\": \"FINAL\",\r\n    \"type\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_TYPES\",\r\n                \"code\": \"DRIVERS\"\r\n            }\r\n        ]\r\n    },\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_CATEGORIES\",\r\n                \"code\": \"DRIVERS_GROUP2\"\r\n            }\r\n        ]\r\n    },\r\n    \"date\": \"2025-04-24T00:00:00.694Z\",\r\n    \"custodian\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"legal_entity\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_legal_entity}}\"\r\n        }\r\n    },\r\n    \"encounter\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"2e657996-68d4-4113-aee1-64ba6764011d\"\r\n        }\r\n    },\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"attester\": [\r\n        {\r\n            \"mode\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_ATTESTER_MODES\",\r\n                        \"code\": \"LEGAL\"\r\n                    }\r\n                ]\r\n            },\r\n            \"party\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"string\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"event\": [\r\n        {\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_EVENTS\",\r\n                        \"code\": \"DRIVERS_GROUP2_ADMIT\"\r\n                    }\r\n                ]\r\n            },\r\n            \"period\": {\r\n                \"start\": \"2025-05-01T08:40:52.385Z\",\r\n                \"end\": \"2025-05-10T10:45:16.000Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"section\": [\r\n        {\r\n            \"title\": \"Загальний аналіз крові\",\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_SECTION_CODES\",\r\n                        \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS_CBC\"\r\n                    }\r\n                ]\r\n            },\r\n            \"author\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"empty_reason\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_SECTION_EMPTY_REASON\",\r\n                        \"code\": \"UNAVAILABLE\"\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"title\": \"Інші медичні відомості\",\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_SECTION_CODES\",\r\n                        \"code\": \"DRIVERS_DRIVERS_GROUP2_FREE_SECTION\"\r\n                    }\r\n                ]\r\n            },\r\n            \"entry\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"activity\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"269ed302-082d-4ecf-82c1-025c8f1a97eb\"\r\n                    }\r\n                }\r\n            ],\r\n            \"author\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-composition-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-composition-signed-content"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-f48a29a0-d0ba-4396-a133-564d8373cc88"
				},
				{
					"name": "Adopters",
					"item": [
						{
							"name": "ADOPTION_Dummy_Composition",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "faebf66a-69ee-450e-8454-a62b6550c130",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(`Composition content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('composition_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "236a7c36-4c75-477a-a0a4-278e487dde3e",
										"exec": [
											"const uuid = require('uuid');\r",
											"const id = uuid.v4();\r",
											"pm.environment.set(\"composition_id\", id);\r",
											"\r",
											"\r",
											"// ADOPTION\r",
											"// DRIVERS\r",
											"\r",
											"const COMPOSITION_TYPE = \"ADOPTION\";\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/patients/${pm.globals.get('patient_id_from_episode')}/composition_title?composition_type=${COMPOSITION_TYPE}`,\r",
											"    method: \"POST\",\r",
											"    header: {\r",
											"        \"Content-Type\": \"application/json\",\r",
											"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
											"        \"api-key\": \"30276e63617461a185ec\",\r",
											"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        console.error(\"Помилка запиту:\", err);\r",
											"    } else {\r",
											"        const resData = res.json();\r",
											"        const title = resData.data.title;\r",
											"\r",
											"        pm.globals.set('composition_stitle', title)\r",
											"        console.log(resData.data.title) \r",
											"        console.log(\"Відповідь сервера:\", res.json());\r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// Helper function to extract IDs from URLs\r",
											"function extractID(url, keyword, variableName) {\r",
											"    if (url && url.includes(`${keyword}/`)) {\r",
											"        const parts = url.split(`${keyword}/`);\r",
											"        if (parts.length > 1) {\r",
											"            const extractedID = parts[1];\r",
											"            \r",
											"            // Log the extracted ID to the console (for debugging purposes)\r",
											"            console.log(`Extracted ${variableName}:`, extractedID);\r",
											"            \r",
											"            // Set the extracted ID as an environment variable\r",
											"            pm.globals.set(variableName, extractedID);\r",
											"        } else {\r",
											"            console.error(`The URL does not contain the expected format for ${keyword}.`);\r",
											"        }\r",
											"    } else {\r",
											"        console.error(`The global variable ${variableName} is not defined or does not contain the expected format.`);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Extract encounter and observation IDs using the helper function\r",
											"extractID(url, 'encounters', 'encounter_extracted_id');\r",
											"extractID(url, 'observations', 'observation_extracted_id');\r",
											"// extractID(url, 'conditions', 'condition_extracted_id');\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-07575099-7669-4dda-97c1-ee27926410e0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{composition_id}}\",\r\n    \"title\": \"{{composition_stitle}}\",\r\n    \"status\": \"FINAL\",\r\n    \"type\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_TYPES\",\r\n                \"code\": \"ADOPTION\"\r\n            }\r\n        ]\r\n    },\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_CATEGORIES\",\r\n                \"code\": \"ADOPTER\"\r\n            }\r\n        ]\r\n    },\r\n    \"date\": \"2025-06-20T08:40:52.385Z\",\r\n    \"custodian\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"legal_entity\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_legal_entity}}\"\r\n        }\r\n    },\r\n    \"encounter\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{encounter_extracted_id}}\"\r\n        }\r\n    },\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"attester\": [\r\n        {\r\n            \"mode\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_ATTESTER_MODES\",\r\n                        \"code\": \"LEGAL\"\r\n                    }\r\n                ]\r\n            },\r\n            \"party\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"string\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"event\": [\r\n        {\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_EVENTS\",\r\n                        \"code\": \"ADOPTION_ADOPTER_ELIGIBLE\"\r\n                    }\r\n                ]\r\n            },\r\n            \"period\": {\r\n                \"start\": \"2025-06-22T08:40:52.385Z\",\r\n                \"end\": \"2025-06-29T08:40:52.385Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"section\": [\r\n        {\r\n            \"title\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_SECTION_CODES\",\r\n                        \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\"\r\n                    }\r\n                ]\r\n            },\r\n            \"author\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"entry\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"observation\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"f0cb69e3-2345-44d5-b2bd-8d90fc469720\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-composition-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-composition-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "ADOPTION_(2sections)_Dummy_Composition",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "faebf66a-69ee-450e-8454-a62b6550c130",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(`Composition content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('composition_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "236a7c36-4c75-477a-a0a4-278e487dde3e",
										"exec": [
											"const uuid = require('uuid');\r",
											"const id = uuid.v4();\r",
											"pm.environment.set(\"composition_id\", id);\r",
											"\r",
											"// Helper function to extract IDs from URLs\r",
											"function extractID(url, keyword, variableName) {\r",
											"    if (url && url.includes(`${keyword}/`)) {\r",
											"        const parts = url.split(`${keyword}/`);\r",
											"        if (parts.length > 1) {\r",
											"            const extractedID = parts[1];\r",
											"            \r",
											"            // Log the extracted ID to the console (for debugging purposes)\r",
											"            console.log(`Extracted ${variableName}:`, extractedID);\r",
											"            \r",
											"            // Set the extracted ID as an environment variable\r",
											"            pm.globals.set(variableName, extractedID);\r",
											"        } else {\r",
											"            console.error(`The URL does not contain the expected format for ${keyword}.`);\r",
											"        }\r",
											"    } else {\r",
											"        console.error(`The global variable ${variableName} is not defined or does not contain the expected format.`);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Extract encounter and observation IDs using the helper function\r",
											"extractID(url, 'encounters', 'encounter_extracted_id');\r",
											"extractID(url, 'observations', 'observation_extracted_id');\r",
											"// extractID(url, 'conditions', 'condition_extracted_id');\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-5a6d5f39-45cc-49e2-a681-44071e399f6f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{composition_id}}\",\r\n    \"title\": \"{{composition_stitle}}\",\r\n    \"status\": \"FINAL\",\r\n    \"type\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_TYPES\",\r\n                \"code\": \"ADOPTION\"\r\n            }\r\n        ]\r\n    },\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_CATEGORIES\",\r\n                \"code\": \"ADOPTER\"\r\n            }\r\n        ]\r\n    },\r\n    \"date\": \"2025-01-16T08:40:52.385Z\",\r\n    \"custodian\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"legal_entity\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_legal_entity}}\"\r\n        }\r\n    },\r\n    \"encounter\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{encounter_extracted_id}}\"\r\n        }\r\n    },\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"attester\": [\r\n        {\r\n            \"mode\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_ATTESTER_MODES\",\r\n                        \"code\": \"LEGAL\"\r\n                    }\r\n                ]\r\n            },\r\n            \"party\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"string\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"event\": [\r\n        {\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_EVENTS\",\r\n                        \"code\": \"ADOPTION_ADOPTER_INELIGIBLE\"\r\n                    }\r\n                ]\r\n            },\r\n            \"period\": {\r\n                \"start\": \"2025-01-18T08:40:52.385Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"section\": [\r\n        {\r\n            \"title\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_SECTION_CODES\",\r\n                        \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\"\r\n                    }\r\n                ]\r\n            },\r\n            \"author\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"section\": [\r\n                {\r\n                    \"title\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"code\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"COMPOSITION_SECTION_CODES\",\r\n                                \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    \"author\": [\r\n                        {\r\n                            \"identifier\": {\r\n                                \"type\": {\r\n                                    \"coding\": [\r\n                                        {\r\n                                            \"system\": \"eHealth/resources\",\r\n                                            \"code\": \"employee\"\r\n                                        }\r\n                                    ],\r\n                                    \"text\": \"string\"\r\n                                },\r\n                                \"value\": \"{{user_id}}\"\r\n                            }\r\n                        }\r\n                    ],\r\n                    \"entry\": [\r\n                        {\r\n                            \"identifier\": {\r\n                                \"type\": {\r\n                                    \"coding\": [\r\n                                        {\r\n                                            \"system\": \"eHealth/resources\",\r\n                                            \"code\": \"observation\"\r\n                                        }\r\n                                    ],\r\n                                    \"text\": \"string\"\r\n                                },\r\n                                \"value\": \"10f3d743-d4cc-4424-84b3-b6b287e35745\"\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"entry\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"observation\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"04fdbc2f-d25c-4c40-9271-b171014fa7fb\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-composition-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-composition-signed-content"
									]
								}
							},
							"response": []
						},
						{
							"name": "ADOPTER_RELATIVE_Dummy_Composition",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "faebf66a-69ee-450e-8454-a62b6550c130",
										"exec": [
											"const resData = pm.response.json();\r",
											"\r",
											"pm.test(`Composition content sign success. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {\r",
											"    pm.expect(pm.response.code).to.eql(200);\r",
											"    pm.expect(resData).to.have.property('signed_content');\r",
											"    pm.globals.set('composition_signed_content', resData.signed_content);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "236a7c36-4c75-477a-a0a4-278e487dde3e",
										"exec": [
											"const uuid = require('uuid');\r",
											"const id = uuid.v4();\r",
											"pm.environment.set(\"composition_id\", id);\r",
											"\r",
											"// ADOPTION\r",
											"// DRIVERS\r",
											"\r",
											"const COMPOSITION_TYPE = \"ADOPTION\";\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: `${pm.globals.get('host')}/api/patients/${pm.globals.get('patient_id_from_episode')}/composition_title?composition_type=${COMPOSITION_TYPE}`,\r",
											"    method: \"POST\",\r",
											"    header: {\r",
											"        \"Content-Type\": \"application/json\",\r",
											"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
											"        \"api-key\": \"30276e63617461a185ec\",\r",
											"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        console.error(\"Помилка запиту:\", err);\r",
											"    } else {\r",
											"        const resData = res.json();\r",
											"        const title = resData.data.title;\r",
											"\r",
											"        pm.globals.set('composition_stitle', title)\r",
											"        console.log(resData.data.title) \r",
											"        console.log(\"Відповідь сервера:\", res.json());\r",
											"    }\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"// Helper function to extract IDs from URLs\r",
											"function extractID(url, keyword, variableName) {\r",
											"    if (url && url.includes(`${keyword}/`)) {\r",
											"        const parts = url.split(`${keyword}/`);\r",
											"        if (parts.length > 1) {\r",
											"            const extractedID = parts[1];\r",
											"            \r",
											"            // Log the extracted ID to the console (for debugging purposes)\r",
											"            console.log(`Extracted ${variableName}:`, extractedID);\r",
											"            \r",
											"            // Set the extracted ID as an environment variable\r",
											"            pm.globals.set(variableName, extractedID);\r",
											"        } else {\r",
											"            console.error(`The URL does not contain the expected format for ${keyword}.`);\r",
											"        }\r",
											"    } else {\r",
											"        console.error(`The global variable ${variableName} is not defined or does not contain the expected format.`);\r",
											"    }\r",
											"}\r",
											"\r",
											"// Retrieve the URL from the global variable\r",
											"const url = pm.globals.get('jobEncounterID');\r",
											"\r",
											"// Extract encounter and observation IDs using the helper function\r",
											"extractID(url, 'encounters', 'encounter_extracted_id');\r",
											"extractID(url, 'observations', 'observation_extracted_id');\r",
											"// extractID(url, 'conditions', 'condition_extracted_id');\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-044765a6-e364-4047-8718-d67e7912626b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"{{composition_id}}\",\r\n    \"title\": \"{{composition_stitle}}\",\r\n    \"status\": \"FINAL\",\r\n    \"type\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_TYPES\",\r\n                \"code\": \"ADOPTION\"\r\n            }\r\n        ]\r\n    },\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_CATEGORIES\",\r\n                \"code\": \"ADOPTER_RELATIVE\"\r\n            }\r\n        ]\r\n    },\r\n    \"date\": \"2025-04-30T07:25:12.024Z\",\r\n    \"custodian\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"legal_entity\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_legal_entity}}\"\r\n        }\r\n    },\r\n    \"encounter\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"encounter\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"2e657996-68d4-4113-aee1-64ba6764011d\"\r\n        }\r\n    },\r\n    \"author\": {\r\n        \"identifier\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"employee\"\r\n                    }\r\n                ],\r\n                \"text\": \"string\"\r\n            },\r\n            \"value\": \"{{user_id}}\"\r\n        }\r\n    },\r\n    \"attester\": [\r\n        {\r\n            \"mode\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_ATTESTER_MODES\",\r\n                        \"code\": \"LEGAL\"\r\n                    }\r\n                ]\r\n            },\r\n            \"party\": {\r\n                \"identifier\": {\r\n                    \"type\": {\r\n                        \"coding\": [\r\n                            {\r\n                                \"system\": \"eHealth/resources\",\r\n                                \"code\": \"employee\"\r\n                            }\r\n                        ],\r\n                        \"text\": \"string\"\r\n                    },\r\n                    \"value\": \"{{user_id}}\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"event\": [\r\n        {\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_EVENTS\",\r\n                        \"code\": \"ADOPTION_ADOPTER_RELATIVE_ELIGIBLE\"\r\n                    }\r\n                ]\r\n            },\r\n            \"period\": {\r\n                \"start\": \"2025-05-01T10:45:16.000Z\",\r\n                 \"end\": \"2025-05-10T10:45:16.000Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"section\": [\r\n        {\r\n            \"title\": \"Інші медичні відомості\",\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_SECTION_CODES\",\r\n                        \"code\": \"ADOPTION_ADOPTER_RELATIVE_FREE_SECTION\"\r\n                    }\r\n                ]\r\n            },\r\n            \"author\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"employee\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"{{user_id}}\"\r\n                    }\r\n                }\r\n            ],\r\n            \"entry\": [\r\n                {\r\n                    \"identifier\": {\r\n                        \"type\": {\r\n                            \"coding\": [\r\n                                {\r\n                                    \"system\": \"eHealth/resources\",\r\n                                    \"code\": \"diagnostic_report\"\r\n                                }\r\n                            ],\r\n                            \"text\": \"string\"\r\n                        },\r\n                        \"value\": \"16fb21f4-2aa5-47cb-8fc1-32a91d07dd11\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/create-composition-signed-content",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"create-composition-signed-content"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-5571cfc3-8d50-4b11-9d41-ab7528c24402"
				},
				{
					"name": "МВН\\МВТН",
					"item": [
						{
							"name": "МВН",
							"item": [
								{
									"name": "Create Composition",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e9d0a7d-e991-4fe0-9719-0f21319be23f",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"function displayResponse(title, data) {",
													"    const html = `",
													"        <h1>${title}</h1>",
													"        <pre>${JSON.stringify(data, null, 2)}</pre>`;",
													"    pm.visualizer.set(html);",
													"}",
													"",
													"",
													"pm.test(\"Check composition code be 200\", function () {",
													"    pm.expect(pm.response.code).to.eql(200);",
													"",
													"    const compositionCheckJobID = jsonData?.data.id;",
													"    pm.globals.set('composition_check_job_id', compositionCheckJobID)",
													"    console.log(compositionCheckJobID)",
													"",
													"    const compositionCheckJobIdVar = pm.globals.get('composition_check_job_id');",
													"    const url = `https://api-demo.ehealth.gov.ua/api/patients/composition/job/${compositionCheckJobIdVar}`;",
													"",
													"    pm.sendRequest({",
													"        method: 'GET',",
													"        url: url,",
													"        header: {",
													"            'Content-Type': 'application/json',",
													"            'Authorization': 'Bearer V1JIRGlZWllxYmJsNkt0V3dOWEs4QT09',",
													"            'api-key': '30276e63617461a185ec',",
													"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'",
													"        }",
													"    }, function (err, res) {",
													"        console.log('error', err);",
													"        console.log('response', res)",
													"        const responseBody = res.json();",
													"",
													"        if (responseBody?.data?.links && Array.isArray(responseBody.data.links)) {",
													"            console.log('Відповідь містить data та links:', responseBody.data.links);",
													"",
													"            // Збір усіх значень href",
													"            const hrefs = responseBody.data.links.map(link => link.href);",
													"",
													"            // Виклик displayResponse із усіма значеннями href",
													"            displayResponse('Create Composition Request Job Response Details', hrefs);",
													"",
													"            // Перевірка та збереження compositionId, якщо є 'composition/'",
													"            responseBody.data.links.forEach(link => {",
													"                if (link.href.includes('composition/')) {",
													"                    const compositionId = link.href.split('composition/').pop();",
													"                    // Збереження compositionId у глобальні змінні Postman",
													"                    pm.globals.set('compositionId', compositionId);",
													"                }",
													"            });",
													"",
													"            console.log('Всі href:', hrefs);",
													"        } else {",
													"            console.log('Відповідь не містить data або links.');",
													"        }",
													"    });",
													"})",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5e2945f8-02ae-4d9c-8adf-36c1d835519e",
												"exec": [
													"// Retrieve the URL from the global variable\r",
													"const url = pm.globals.get('jobEncounterID');\r",
													"\r",
													"// Check if the URL is defined and contains the expected format\r",
													"if (url && url.includes('encounters/')) {\r",
													"    // Extract the ID after 'encounters/'\r",
													"    const parts = url.split('encounters/');\r",
													"    if (parts.length > 1) {\r",
													"        const jobEncounterID = parts[1];\r",
													"        \r",
													"        // Log the extracted ID to the console (for debugging purposes)\r",
													"        console.log('Extracted jobEncounterID:', jobEncounterID);\r",
													"        \r",
													"        // Optionally, set the extracted ID as an environment variable\r",
													"        pm.globals.set('encounter_extracted_id', jobEncounterID);\r",
													"    } else {\r",
													"        console.error('The URL does not contain the expected format.');\r",
													"    }\r",
													"} else {\r",
													"    console.error('The global variable jobEncounterID is not defined or does not contain the expected format.');\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-8db6ff45-11ea-4e74-adbf-0666fa285c04",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_CATEGORIES\",\r\n                \"code\": \"LIVE_BIRTH\"\r\n            }\r\n        ]\r\n    },\r\n    \"type\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_TYPES\",\r\n                \"code\": \"NEWBORN\"\r\n            }\r\n        ]\r\n    },\r\n    \"event\": [\r\n        {\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_EVENTS\",\r\n                        \"code\": \"COMPOSITION_VALIDITY_PERIOD\"\r\n                    }\r\n                ]\r\n            },\r\n            \"period\": {\r\n                \"start\": \"2024-12-01T10:45:16Z\",\r\n                \"end\": null\r\n            }\r\n        }\r\n    ],\r\n    \"subject\": {\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/resources\",\r\n                    \"code\": \"preperson\"\r\n                }\r\n            ],\r\n            \"text\": \"string\"\r\n        },\r\n        \"value\": \"{{patient_id_from_episode}}\"\r\n    },\r\n    \"encounter\": {\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/resources\",\r\n                    \"code\": \"encounter\"\r\n                }\r\n            ],\r\n            \"text\": \"string\"\r\n        },\r\n        \"value\": \"{{encounter_extracted_id}}\"\r\n    },\r\n    \"author\": {\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/resources\",\r\n                    \"code\": \"employee\"\r\n                }\r\n            ],\r\n            \"text\": \"string\"\r\n        },\r\n        \"value\": \"{{user_id}}\"\r\n    },\r\n    \"section\": {\r\n        \"focus\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"person\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"4563dca3-b086-49fd-bd28-d4e49809565d\"\r\n        }\r\n    },\r\n    \"extension\": [\r\n         {\r\n            \"valueCode\": \"NEWBORN_BIRTH_DATE\",\r\n            \"valueDate\": \"2024-12-01\"\r\n        },\r\n        {\r\n            \"valueCode\": \"NEWBORN_SEX\",\r\n            \"valueString\": \"MALE\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/patients/composition",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"patients",
												"composition"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-41592007-8a95-4510-a41c-2562811a0fde"
						},
						{
							"name": "МВТН",
							"item": [
								{
									"name": "Create Composition",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ff63839-beb7-4424-b694-91dc6cde139a",
												"exec": [
													"const jsonData = pm.response.json();",
													"",
													"function displayResponse(title, data) {",
													"    const html = `",
													"        <h1>${title}</h1>",
													"        <pre>${JSON.stringify(data, null, 2)}</pre>`;",
													"    pm.visualizer.set(html);",
													"}",
													"",
													"",
													"pm.test(\"Check composition code be 200\", function () {",
													"    pm.expect(pm.response.code).to.eql(200);",
													"",
													"    const compositionCheckJobID = jsonData?.data.id;",
													"    pm.globals.set('composition_check_job_id', compositionCheckJobID)",
													"    console.log(compositionCheckJobID)",
													"",
													"    const compositionCheckJobIdVar = pm.globals.get('composition_check_job_id');",
													"    const url = `https://api-demo.ehealth.gov.ua/api/patients/composition/job/${compositionCheckJobIdVar}`;",
													"",
													"    pm.sendRequest({",
													"        method: 'GET',",
													"        url: url,",
													"        header: {",
													"            'Content-Type': 'application/json',",
													"            'Authorization': 'Bearer V1JIRGlZWllxYmJsNkt0V3dOWEs4QT09',",
													"            'api-key': '30276e63617461a185ec',",
													"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'",
													"        }",
													"    }, function (err, res) {",
													"        console.log('error', err);",
													"        console.log('response', res)",
													"        const responseBody = res.json();",
													"",
													"        if (responseBody?.data?.links && Array.isArray(responseBody.data.links)) {",
													"            console.log('Відповідь містить data та links:', responseBody.data.links);",
													"",
													"            // Збір усіх значень href",
													"            const hrefs = responseBody.data.links.map(link => link.href);",
													"",
													"            // Виклик displayResponse із усіма значеннями href",
													"            displayResponse('Create Composition Request Job Response Details', hrefs);",
													"",
													"            // Перевірка та збереження compositionId, якщо є 'composition/'",
													"            responseBody.data.links.forEach(link => {",
													"                if (link?.href.includes('composition/')) {",
													"                    const compositionId = link.href.split('composition/').pop();",
													"                    // Збереження compositionId у глобальні змінні Postman",
													"                    pm.globals.set('compositionId', compositionId);",
													"                }",
													"            });",
													"",
													"            console.log('Всі href:', hrefs);",
													"        } else {",
													"            console.log('Відповідь не містить data або links.');",
													"        }",
													"    });",
													"})",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c2d3c4b8-7021-4b1e-a876-d870cdb50fd0",
												"exec": [
													"// Retrieve the URL from the global variable\r",
													"const url = pm.globals.get('jobEncounterID');\r",
													"\r",
													"// Check if the URL is defined and contains the expected format\r",
													"if (url && url.includes('encounters/')) {\r",
													"    // Extract the ID after 'encounters/'\r",
													"    const parts = url.split('encounters/');\r",
													"    if (parts.length > 1) {\r",
													"        const jobEncounterID = parts[1];\r",
													"        \r",
													"        // Log the extracted ID to the console (for debugging purposes)\r",
													"        console.log('Extracted jobEncounterID:', jobEncounterID);\r",
													"        \r",
													"        // Optionally, set the extracted ID as an environment variable\r",
													"        pm.globals.set('encounter_extracted_id', jobEncounterID);\r",
													"    } else {\r",
													"        console.error('The URL does not contain the expected format.');\r",
													"    }\r",
													"} else {\r",
													"    console.error('The global variable jobEncounterID is not defined or does not contain the expected format.');\r",
													"}\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "15381251-a0b68727-21d7-4e05-85cb-8973deb19f77",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "api-key",
												"value": "{{mis_client_secret}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Custom-PSK",
												"value": "{{x-custom-psk}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"category\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_CATEGORIES\",\r\n                \"code\": \"SICKNESS\"\r\n            }\r\n        ]\r\n    },\r\n    \"type\": {\r\n        \"coding\": [\r\n            {\r\n                \"system\": \"COMPOSITION_TYPES\",\r\n                \"code\": \"TEMP_DISABILITY\"\r\n            }\r\n        ]\r\n    },\r\n    \"event\": [\r\n        {\r\n            \"code\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"COMPOSITION_EVENTS\",\r\n                        \"code\": \"COMPOSITION_VALIDITY_PERIOD\"\r\n                    }\r\n                ]\r\n            },\r\n            \"period\": {\r\n                \"start\": \"2025-07-16T10:45:16Z\",\r\n                \"end\": \"2025-07-19T10:45:16Z\"\r\n            }\r\n        }\r\n    ],\r\n    \"subject\": {\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/resources\",\r\n                    \"code\": \"person\"\r\n                }\r\n            ],\r\n            \"text\": \"string\"\r\n        },\r\n        \"value\": \"{{patient_id_from_episode}}\"\r\n    },\r\n    \"encounter\": {\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/resources\",\r\n                    \"code\": \"encounter\"\r\n                }\r\n            ],\r\n            \"text\": \"string\"\r\n        },\r\n        \"value\": \"{{jobEncounterID}}\"\r\n    },\r\n    \"author\": {\r\n        \"type\": {\r\n            \"coding\": [\r\n                {\r\n                    \"system\": \"eHealth/resources\",\r\n                    \"code\": \"employee\"\r\n                }\r\n            ],\r\n            \"text\": \"string\"\r\n        },\r\n        \"value\": \"{{user_id}}\"\r\n    },\r\n    \"section\": {\r\n        \"focus\": {\r\n            \"type\": {\r\n                \"coding\": [\r\n                    {\r\n                        \"system\": \"eHealth/resources\",\r\n                        \"code\": \"person\"\r\n                    }\r\n                ]\r\n            },\r\n            \"value\": \"{{patient_id_from_episode}}\"\r\n        }\r\n    },\r\n    \"extension\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/api/patients/composition",
											"host": [
												"{{host}}"
											],
											"path": [
												"api",
												"patients",
												"composition"
											]
										}
									},
									"response": []
								}
							],
							"id": "15381251-5975e9a5-b97b-430c-975b-1e5c9da385e1"
						},
						{
							"name": "Sign omposition",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "73841e3d-530b-4459-aca5-ed3b98cfa8b3",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1edf5aa7-fbee-4101-b107-637162e4745f",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-0aa1f609-94f5-4b32-a3b9-c659cc51828a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/patients/composition/1cc8690b-0a50-4fef-b254-4fb0702c4cdb/sign",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"composition",
										"1cc8690b-0a50-4fef-b254-4fb0702c4cdb",
										"sign"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "CancelComposition",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b950621-1143-418e-8b7a-6324682c6dc6",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bff22999-bff8-4a83-bc97-a727f32a8971",
										"exec": [
											"const requestBody = {\r",
											"    identifier: {\r",
											"        type: {\r",
											"            coding: [\r",
											"                {\r",
											"                    code: \"composition\",\r",
											"                    system: \"eHealth/composition\"\r",
											"                }\r",
											"            ]\r",
											"        },\r",
											"        value: `${pm.globals.get(\"JobCompositionID\")}`\r",
											"    },\r",
											"    reason: {\r",
											"        coding: [\r",
											"            {\r",
											"                system: \"COMPOSITION_CANCELLATION_REASONS_TEMP_DISABILITY\",\r",
											"                code: \"INCORRECT_CATEGORY\"\r",
											"            }\r",
											"        ],\r",
											"        text: \"Відміна мвтн\"\r",
											"    }\r",
											"};\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: 'http://localhost:3000/enter-in-error-composition-signed-content',\r",
											"    method: 'POST',\r",
											"    header: {\r",
											"        'Content-Type': 'application/json'\r",
											"    },\r",
											"    body: {\r",
											"        mode: 'raw',\r",
											"        raw: JSON.stringify(requestBody)\r",
											"    }\r",
											"}, function (err, res) {\r",
											"    if (err) {\r",
											"        console.error('POST error:', err);\r",
											"    } else {\r",
											"        try {\r",
											"            const response = res.json();\r",
											"            if (response.signed_content) {\r",
											"                pm.environment.set(\"enterInErrorResponse\", response.signed_content);\r",
											"                console.log(\"signed_content saved to enterInErrorResponse\");\r",
											"            } else {\r",
											"                console.warn(\"signed_content not found in response\");\r",
											"            }\r",
											"        } catch (e) {\r",
											"            console.error(\"Failed to parse JSON:\", e);\r",
											"        }\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-118df3c2-80ad-4ee3-a78e-7fa3bcdbd1d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"data\": \"{{composition_enter_in_error_signed_content}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/patients/composition/1cc8690b-0a50-4fef-b254-4fb0702c4cdb/cancel",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"composition",
										"1cc8690b-0a50-4fef-b254-4fb0702c4cdb",
										"cancel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Send to  ERLN again",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"id": "044ee1bc-8389-462d-aa40-f9a0490c76ce"
									}
								}
							],
							"id": "15381251-f5ff71d1-d2a9-4620-9414-601c8aadecbc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-consumer-id",
										"value": "a747cd78-b7e5-11ea-b351-f319bc42050d",
										"type": "text",
										"disabled": true
									},
									{
										"key": "x-person-id",
										"value": "af9d5b14-b7e5-11ea-8ef4-4f81455b5ebd",
										"type": "text",
										"disabled": true
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/composition/8d81adc6-8e78-4021-bbbd-0a523778524c/erln",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"composition",
										"8d81adc6-8e78-4021-bbbd-0a523778524c",
										"erln"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										},
										{
											"key": "type",
											"value": "TEMP_DISABILITY",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Check job status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df1c0162-03f9-4111-927f-c8fce6bdce05",
										"exec": [
											"// Розбираємо відповідь\r",
											"const resBody = pm.response.json();\r",
											"\r",
											"// Перевіряємо статус-код\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Перевіряємо статус DONE\r",
											"pm.test(\"Status is DONE\", function () {\r",
											"    pm.expect(resBody.data.status).to.eql(\"DONE\");\r",
											"});\r",
											"\r",
											"// Якщо статус 200 і DONE, зберігаємо ID\r",
											"if (pm.response.code === 200 && resBody.data.status === \"DONE\") {\r",
											"    // Знаходимо посилання на composition\r",
											"    const compositionLink = resBody.data.links.find(link => link.href.includes(\"composition/\"));\r",
											"\r",
											"    if (compositionLink) {\r",
											"        // Витягуємо ID після composition/\r",
											"        const compositionId = compositionLink.href.split(\"composition/\")[1];\r",
											"\r",
											"        // Зберігаємо в глобальні змінні\r",
											"        pm.globals.set(\"JobCompositionID\", compositionId);\r",
											"\r",
											"        // Виводимо для перевірки\r",
											"        console.log(\"Saved Composition ID:\", compositionId);\r",
											"    } else {\r",
											"        console.warn(\"No composition link found.\");\r",
											"    }\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f527fedf-c5cb-4882-af59-6c8e87b9a9af",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-7061955b-6323-43a6-b639-002b446b11a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{host}}/api/patients/composition/job/{{composition_check_job_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"composition",
										"job",
										"{{composition_check_job_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get composition",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ceb7cb7d-c0a5-4b7a-8cd5-52ded273ce9a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b93a83cb-aa74-45d9-8b99-c6d8d2345e76",
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"id": "15381251-87d0d4a5-63e2-4da8-8a0b-d35e22f1f332",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/composition/1cc8690b-0a50-4fef-b254-4fb0702c4cdb/episode/{{jobEpisodeID}}/encounter/{{jobEncounterID}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"{{patient_id_from_episode}}",
										"composition",
										"1cc8690b-0a50-4fef-b254-4fb0702c4cdb",
										"episode",
										"{{jobEpisodeID}}",
										"encounter",
										"{{jobEncounterID}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search compositions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0575ad75-3bfc-40ca-b2de-9d51bbc695c0",
										"exec": [
											"//var jsonData = JSON.parse(responseBody);",
											"",
											"//if (jsonData.data && jsonData.data.value) {",
											"//   var My_composition_id = jsonData.identifier.value;",
											"//  var My_encounter_id = jsonData.encounter.value;",
											"//  var My_episode_id = jsonData.episodeOfCare.value;",
											"",
											"//    postman.setEnvironmentVariable(\"mcomposition_id\", My_composition_id);",
											"//    postman.setEnvironmentVariable(\"mencounter_id\", My_encounter_id);",
											"//    postman.setEnvironmentVariable(\"mepisode_id\", My_episode_id);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b9528e91-1ad2-4cbe-8e44-85c36e5c0ae5",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "15381251-5752e6a4-a070-4d01-8b96-a8fe0bc603af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-consumer-id",
										"value": "a747cd78-b7e5-11ea-b351-f319bc42050d",
										"type": "text",
										"disabled": true
									},
									{
										"key": "x-person-id",
										"value": "af9d5b14-b7e5-11ea-8ef4-4f81455b5ebd",
										"type": "text",
										"disabled": true
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/searchComposition?focus=4563dca3-b086-49fd-bd28-d4e49809565d",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"searchComposition"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"disabled": true
										},
										{
											"key": "type",
											"value": "TEMP_DISABILITY",
											"disabled": true
										},
										{
											"key": "focus",
											"value": "ed1b5e9a-1dbf-47f4-9760-74318e3eb054",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "135",
											"disabled": true
										},
										{
											"key": "episodeOfCare",
											"value": "c1ac2f2e-3e88-450e-9269-9ca79be4d6bd",
											"disabled": true
										},
										{
											"key": "encounter",
											"value": "4ae3faa1-9ca4-4507-b968-40750c2eba5d",
											"disabled": true
										},
										{
											"key": "status",
											"value": "FINAL",
											"disabled": true
										},
										{
											"key": "subject",
											"value": "ed1b5e9a-1dbf-47f4-9760-74318e3eb054",
											"disabled": true
										},
										{
											"key": "focus",
											"value": "4563dca3-b086-49fd-bd28-d4e49809565d"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search Compositions",
							"id": "15381251-ada6a414-c981-4f9d-866e-6838d3dbcf32",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "X-Custom-PSK",
										"value": "{{x-custom-psk}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/caada087-f725-4481-8ae4-6c1b642e4fbb/searchComposition",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"caada087-f725-4481-8ae4-6c1b642e4fbb",
										"searchComposition"
									]
								}
							},
							"response": []
						},
						{
							"name": "printForm - composition",
							"id": "15381251-182e01b7-c6ee-45fc-9a2f-bb8e801f4567",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "{{mis_client_secret}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{host}}/api/patients/e6b4c939-ec66-429c-a126-8d6eedd159c4/composition/8d81adc6-8e78-4021-bbbd-0a523778524c/episode/c91badf5-3744-4a17-a98f-b726ec553be7/encounter/344cf318-a3cc-4916-8a6b-357c9acbd7bb/printForm?templateId=23",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"e6b4c939-ec66-429c-a126-8d6eedd159c4",
										"composition",
										"8d81adc6-8e78-4021-bbbd-0a523778524c",
										"episode",
										"c91badf5-3744-4a17-a98f-b726ec553be7",
										"encounter",
										"344cf318-a3cc-4916-8a6b-357c9acbd7bb",
										"printForm"
									],
									"query": [
										{
											"key": "templateId",
											"value": "23"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Composition-integrationData",
							"id": "15381251-028e66be-8c31-4436-b3c7-264af105463b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/e6b4c939-ec66-429c-a126-8d6eedd159c4/composition/8d81adc6-8e78-4021-bbbd-0a523778524c/episode/c91badf5-3744-4a17-a98f-b726ec553be7/encounter/344cf318-a3cc-4916-8a6b-357c9acbd7bb/integrationData",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"e6b4c939-ec66-429c-a126-8d6eedd159c4",
										"composition",
										"8d81adc6-8e78-4021-bbbd-0a523778524c",
										"episode",
										"c91badf5-3744-4a17-a98f-b726ec553be7",
										"encounter",
										"344cf318-a3cc-4916-8a6b-357c9acbd7bb",
										"integrationData"
									]
								}
							},
							"response": []
						},
						{
							"name": "erln",
							"id": "15381251-e5738728-268a-43b4-94fc-ced3721f6ce5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "api-key",
										"value": "30276e63617461a185ec",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/api/patients/composition/2d8c563c-d2e4-4abd-afa2-77b982cfc366/erln",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"patients",
										"composition",
										"2d8c563c-d2e4-4abd-afa2-77b982cfc366",
										"erln"
									]
								}
							},
							"response": []
						}
					],
					"id": "15381251-e7e17239-72ea-439f-8ddc-5ab319695f49"
				},
				{
					"name": "Create Composition Title",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6f50ea50-f8a8-4be1-ac63-f0f773008bd6",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "031b2f1a-f8b1-47d2-a73b-b78bd383af1e",
								"exec": [
									"",
									"const resData = pm.response.json();",
									"",
									"pm.test(`Composition title. Response status is 200 ${JSON.stringify(resData, null, 2)}`, function () {",
									"    pm.expect(pm.response.code).to.eql(200);",
									"    pm.globals.set('composition_stitle', resData.data.title);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-2f49bc18-f1a4-4b6d-8838-65515c8f32e3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{X-Custom-value}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/composition_title?composition_type=ADOPTION",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"composition_title"
							],
							"query": [
								{
									"key": "composition_type",
									"value": "ADOPTION"
								},
								{
									"key": "composition_type",
									"value": "TEMP_DISABILITY",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Composition",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "91d641af-b149-4577-b33f-06cb293a5507",
								"exec": [
									"// //2 observations",
									"// var b64EncodeUnicode = function (str) {",
									"//     return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function(match, p1) {",
									"//         return String.fromCharCode(parseInt(p1, 16))",
									"//     }))};",
									"    ",
									"",
									"// let today = () => {",
									"//   let currentDate = new Date();",
									"//   //return currentDate.getFullYear() + \"-\" + (currentDate.getMonth() + 1) + \"-\" + currentDate.getDate();",
									"//   return currentDate.toISOString()",
									"// }",
									"",
									"// var composition_date = today();",
									"// var period_end = new Date();",
									"// period_end.setMonth(period_end.getMonth() + 1);",
									"",
									"// var uuid = require('uuid');",
									"",
									"// var composition_id = uuid.v4();",
									"// pm.environment.set(\"composition_id\", composition_id);",
									"",
									"    ",
									"// var composition_template = '{ \"id\": \"{{composition_id}}\", \"title\": \"1234\", \"status\": \"final\", \"type\": { \"coding\": [ { \"system\": \"COMPOSITION_TYPES\", \"code\": \"ADOPTION\" } ] }, \"category\": { \"coding\": [ { \"system\": \"COMPOSITION_CATEGORIES\", \"code\": \"ADOPTERS\" } ] }, \"date\": \"{{composition_date}}\", \"custodian\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"legal_entity\" } ], \"text\": \"string\" }, \"value\": \"{{le_id}}\" } }, \"encounter\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"encounter\" } ], \"text\": \"string\" }, \"value\": \"{{encounter_id}}\" } }, \"author\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } }, \"attester\": [ { \"mode\": { \"coding\": [ { \"system\": \"http://hl7.org/fhir/composition-attestation-mode\", \"code\": \"legal\" } ] }, \"party\": { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } } ], \"event\": [ { \"code\": { \"coding\": [ { \"system\": \"COMPOSITION_EVENTS\", \"code\": \"ELIGIBLE\" } ] }, \"period\": { \"start\": \"2024-08-10T10:45:16.000Z\" } } ], \"section\": [ { \"title\": \"Результат огляду\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_GROUP1_MAIN_SECTION\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Результат огляду лікаря ПМД\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Органи зору\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Спостереження\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Гострота зору, без корекції\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_VISUAL_ACUITY_UNCORRECTED\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } }, { \"title\": \"Гострота зору, з корекцією\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_VISUAL_ACUITY_CORRECTED\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } }, { \"title\": \"Гострота монокулярна\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_MONOCULAR_ACUITY\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } }, { \"title\": \"Поле зору\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_VISUAL_FIELD\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } }, { \"title\": \"Кольоровідчуття\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_COLOR_VISION\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] }, { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_CONTRAINDICATIONS_EHR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Органи слуху\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Спостереження\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING_OBSERVATION\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Гострота слуху\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING_OBSERVATION_HEARING_ACUITY\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] }, { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING_CONTRAINDICATIONS_EHR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Опорно-руховий апарат\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_MUSCULOSKELETAL\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_MUSCULOSKELETAL_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_MUSCULOSKELETAL_CONTRAINDICATIONS_EHR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Серцево-судинна система\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Спостереження\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_OBSERVATION\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Систолічний тиск\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_OBSERVATION_SYSTOLIC_PRESSURE\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } }, { \"title\": \"Діастолічний тиск\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_OBSERVATION_DIASTOLIC_PRESSURE\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } }, { \"title\": \"Електрокардіограма\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_OBSERVATION_ECG\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] }, { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_CONTRAINDICATIONS_EHR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Ендокринна система\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_ENDOCRINE\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_ENDOCRINE_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_ENDOCRINE_CONTRAINDICATIONS_EHR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Центральна нервова система\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Спостереження\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS_OBSERVATION\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Електроенцефалографія\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS_OBSERVATION_EEG\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] }, { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS_CONTRAINDICATIONS_EHR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Дихальна система\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_RESPIRATORY\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_RESPIRATORY_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_RESPIRATORY_CONTRAINDICATIONS_EHR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Сечостатева система\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_GENITOURINARY\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_GENITOURINARY_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_GENITOURINARY_CONTRAINDICATIONS_EHR\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Лабораторні дослідження\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Загальний аналіз крові\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS_CBC\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } }, { \"title\": \"Загальний аналіз сечі\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS_UA\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } }, { \"title\": \"Глюкоза крові\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS_BLOOD_GLUCOSE\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"empty_reason\": { \"coding\": [ { \"system\": \"eHealth/composition_section_empty_reason\", \"code\": \"UNAVAILABLE\" } ] } } ] } ] }, { \"title\": \"Результат огляду лікаря Психіатра\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"Протипокази\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM_CONTRAINDICATIONS\" } ] }, \"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"section\": [ { \"title\": \"ЕМЗ\", \"code\": { \"coding\": [ { \"system\": \"eHealth/composition_section_codes\", \"code\": \"DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM_CONTRAINDICATIONS_EHR\" } ] }, \"ordered_by\": { \"coding\": [ { \"system\": \"eHealth/composition_section_sorting_type\", \"code\": \"ALPHABETIC\" } ] },\"author\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"employee\" } ], \"text\": \"string\" }, \"value\": \"{{employee_id}}\" } } ], \"entry\": [ { \"identifier\": { \"type\": { \"coding\": [ { \"system\": \"eHealth/resources\", \"code\": \"condition\" } ], \"text\": \"string\" }, \"value\": \"{{condition_id}}\" } } ] } ] } ] } ] } ] }';",
									"// var composition = JSON.parse(composition_template);",
									"// //MAIN",
									"// composition.id=composition_id;",
									"// composition.date=composition_date;",
									"// composition.title=pm.environment.get(\"composition_title\");",
									"// composition.type.coding[0].code=\"DRIVERS\";",
									"// composition.category.coding[0].code=\"DRIVERS_GROUP1\";",
									"// composition.custodian.identifier.value=pm.environment.get(\"le_id\");",
									"// composition.encounter.identifier.value=pm.environment.get(\"encounter_id\");",
									"// composition.author.identifier.value=pm.environment.get(\"employee_id\");",
									"// composition.attester[0].party.identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_GROUP1_MAIN_SECTION",
									"// composition.section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION",
									"// composition.section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION",
									"// composition.section[0].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION",
									"// composition.section[0].section[0].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_VISUAL_ACUITY_UNCORRECTED",
									"// composition.section[0].section[0].section[0].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_VISUAL_ACUITY_CORRECTED",
									"// composition.section[0].section[0].section[0].section[0].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_MONOCULAR_ACUITY",
									"// composition.section[0].section[0].section[0].section[0].section[2].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_VISUAL_FIELD",
									"// composition.section[0].section[0].section[0].section[0].section[3].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_OBSERVATION_COLOR_VISION",
									"// composition.section[0].section[0].section[0].section[0].section[4].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_CONTRAINDICATIONS",
									"// composition.section[0].section[0].section[0].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //\"DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_VISION_CONTRAINDICATIONS_EMZ",
									"// composition.section[0].section[0].section[0].section[1].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING",
									"// composition.section[0].section[0].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING_OBSERVATION",
									"// composition.section[0].section[0].section[1].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING_OBSERVATION_HEARING_ACUITY",
									"// composition.section[0].section[0].section[1].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING_CONTRAINDICATIONS",
									"// composition.section[0].section[0].section[1].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_HEARING_CONTRAINDICATIONS_EMZ",
									"// composition.section[0].section[0].section[1].section[1].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_MUSCULOSKELETAL",
									"// composition.section[0].section[0].section[2].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_MUSCULOSKELETAL_CONTRAINDICATIONS",
									"// composition.section[0].section[0].section[2].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_MUSCULOSKELETAL_CONTRAINDICATIONS_EMZ",
									"// composition.section[0].section[0].section[2].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR",
									"// composition.section[0].section[0].section[3].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_OBSERVATION",
									"// composition.section[0].section[0].section[3].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_OBSERVATION_SYSTOLIC_PRESSURE",
									"// composition.section[0].section[0].section[3].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_OBSERVATION_DIASTOLIC_PRESSURE",
									"// composition.section[0].section[0].section[3].section[0].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_OBSERVATION_ECG",
									"// composition.section[0].section[0].section[3].section[0].section[2].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_CONTRAINDICATIONS",
									"// composition.section[0].section[0].section[3].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CARDIOVASCULAR_CONTRAINDICATIONS_EMZ",
									"// composition.section[0].section[0].section[3].section[1].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_ENDOCRINE",
									"// composition.section[0].section[0].section[4].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_ENDOCRINE_CONTRAINDICATIONS",
									"// composition.section[0].section[0].section[4].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_ENDOCRINE_CONTRAINDICATIONS_EMZ",
									"// composition.section[0].section[0].section[4].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS",
									"// composition.section[0].section[0].section[5].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS_OBSERVATION",
									"// composition.section[0].section[0].section[5].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS_OBSERVATION_EEG",
									"// composition.section[0].section[0].section[5].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS_CONTRAINDICATIONS",
									"// composition.section[0].section[0].section[5].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_CNS_CONTRAINDICATIONS_EMZ",
									"// composition.section[0].section[0].section[5].section[1].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_RESPIRATORY",
									"// composition.section[0].section[0].section[6].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_RESPIRATORY_CONTRAINDICATIONS",
									"// composition.section[0].section[0].section[6].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_RESPIRATORY_CONTRAINDICATIONS_EMZ",
									"// composition.section[0].section[0].section[6].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_GENITOURINARY",
									"// composition.section[0].section[0].section[7].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_GENITOURINARY_CONTRAINDICATIONS",
									"// composition.section[0].section[0].section[7].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_GENITOURINARY_CONTRAINDICATIONS_EMZ",
									"// composition.section[0].section[0].section[7].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS",
									"// composition.section[0].section[0].section[8].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS_CBC",
									"// composition.section[0].section[0].section[8].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS_UA",
									"// composition.section[0].section[0].section[8].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"// //DRIVERS_DRIVERS_GROUP1_THERAPIST_SECTION_LAB_TESTS_BLOOD_GLUCOSE",
									"// composition.section[0].section[0].section[8].section[2].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM",
									"// composition.section[0].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"// //DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM_CONTRAINDICATIONS",
									"// composition.section[0].section[1].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"// //DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM_CONTRAINDICATIONS_EHR",
									"// composition.section[0].section[1].section[0].section[0].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"// composition.section[0].section[1].section[0].section[0].entry[0].identifier.value=pm.environment.get(\"condition_id\");",
									"",
									"",
									"// //DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM",
									"// //composition.section[0].section[1].title=\"DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM\";",
									"// //composition.section[0].section[1].code.coding[0].code=\"DRIVERS_DRIVERS_GROUP1_PSYCHIATRIST_EXAM\";",
									"// //composition.section[0].section[1].author[0].identifier.value=pm.environment.get(\"employee_id\");",
									"",
									"// //composition.section[0].section[1].entry[0].identifier.type.coding[0].code=\"condition\";",
									"// //composition.section[0].section[1].entry[0].identifier.value=pm.environment.get(\"condition_id_1\");",
									"",
									"// //EVENT",
									"// composition.event[0].code.coding[0].code=\"DRIVERS_GROUP1_ADMIT\";",
									"// composition.event[0].period.start=composition_date;",
									"// composition.event[0].period.end=period_end;",
									"",
									"// /*composition.event[1]={",
									"//     \"code\":{",
									"//         \"coding\":[",
									"//             {",
									"//                 \"code\": \"DRIVERS_GROUP2_Deny\",",
									"//                 \"system\": \"COMPOSITION_EVENTS\"",
									"//             }",
									"//         ]",
									"//     },",
									"//     \"period\":{",
									"//         \"start\": \"{{composition_date}}\"",
									"//     }",
									"",
									"// };",
									"// composition.event[1].period.start=composition_date;",
									"// */",
									"// //EXTENSION",
									"// /*",
									"// composition.extension=[{",
									"//         \"code\":\"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION\",",
									"//         \"value_codeable_concept\":{",
									"//             \"coding\":[",
									"//                 {",
									"//                     \"code\":\"20.07.\",",
									"//                     \"system\":\"eHealth/composition_additional_condition_admission\"",
									"//                 }",
									"//             ]",
									"//         }",
									"// }];",
									"",
									"// composition.extension[0].value_codeable_concept.extension=[",
									"//             {",
									"//                 \"code\": \"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION_VALUE\",",
									"//                 \"value_decimal\": 19",
									"//             },",
									"//             {",
									"//                 \"code\": \"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION_LETTER_DESIGNATIONS\",",
									"//                 \"value_codeable_concept\": {",
									"//                     \"coding\": [",
									"//                         {",
									"//                             \"code\": \"a\",",
									"//                             \"system\": \"eHealth/composition_additional_condition_admission_letter_designations\"",
									"//                         }",
									"//                     ]",
									"//                 }",
									"//             },",
									"//             {",
									"//                 \"code\": \"COMPOSITION_ADDITIONAL_CONDITION_ADMISSION_LETTER_DESIGNATIONS\",",
									"//                 \"value_codeable_concept\": {",
									"//                     \"coding\": [",
									"//                         {",
									"//                             \"code\": \"b\",",
									"//                             \"system\": \"eHealth/composition_additional_condition_admission_letter_designations\"",
									"//                         }",
									"//                     ]",
									"//                 }",
									"//             }",
									"//         ]",
									"",
									"// */",
									"// postman.setEnvironmentVariable(\"composition_resource\", JSON.stringify(composition));",
									"// var composition_base64 = b64EncodeUnicode(JSON.stringify(composition));",
									"// postman.setEnvironmentVariable(\"composition_base64\", composition_base64);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "02812d2e-5bed-4d52-9247-8dd1c527d121",
								"exec": [
									"function displayResponse(title, data) {",
									"    const html = `",
									"        <h1>${title}</h1>",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;",
									"    pm.visualizer.set(html);",
									"}",
									"",
									"pm.test(\"Create Composition Response status code is 202\", function () {",
									"    pm.expect(pm.response.code).to.eql(202);",
									"});",
									"",
									"// Get the response body from the main request",
									"const resBody = pm.response.text();",
									"const resData = JSON.parse(resBody);",
									"",
									"if (resData && resData.error) {",
									"    displayResponse('Create Composition Response Error Details', resData.error);",
									"}",
									"",
									"const href = resData.data.links[0].href;",
									"console.log(\"Extracted href:\", href);",
									"",
									"// Extract the job ID from the href",
									"const number = href.split('/jobs/')[1];",
									"console.log(\"Extracted number:\", number);",
									"",
									"// Initialize retry counter in the environment",
									"pm.environment.set('retryCount', 0);",
									"",
									"// Function to check job status",
									"function checkJobStatus(jobId) {",
									"",
									"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;",
									"    const maxRetries = 3; // Set the maximum number of retries",
									"",
									"    pm.sendRequest({",
									"        method: 'GET',",
									"        url: url,",
									"        header: {",
									"            'Content-Type': 'application/json',",
									"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',",
									"            'api-key': '30276e63617461a185ec',",
									"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'",
									"        }",
									"    }, function (err, res) {",
									"",
									"        pm.test(`Job status check response status is 200 or 303`, function () {",
									"            pm.expect([200, 303]).to.include(res.code);",
									"        });",
									"",
									"        if (err) {",
									"            displayResponse('Request Error', { error: err.message });",
									"            console.error('Error checking job status:', err);",
									"        } else {",
									"",
									"            const responseBody = res.json();",
									"            console.log('Job Status:', responseBody.data.status);",
									"",
									"            if (responseBody.data.status === 'processed') {",
									"",
									"                 pm.test(`Create Composition Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {",
									"                    pm.expect(res.code).to.eql(303);",
									"                });",
									"",
									"                const links = responseBody.data.links.reduce((acc, link) => {",
									"                    // Extract the part after \"/api/\"",
									"                    const href = link.href.replace('/api/', '');",
									"",
									"                    // Set the link entity to global variables",
									"                    acc[link.entity] = href;",
									"",
									"                    if (href.includes('compositions/')) {",
									"                        const activityId = href.split('/')[3]; // Extract the service requests ID",
									"                        acc['jobCompositionRequest'] = activityId;",
									"                    }",
									"",
									"                    return acc;",
									"                }, {});",
									"",
									"                // Iterate over the links object and set globals dynamically",
									"                Object.entries(links).forEach(([entity, value]) => {",
									"                    const globalName = `${entity.charAt(0).toUpperCase() + entity.slice(1)}ID`;",
									"                    pm.globals.set(globalName, value);",
									"                });",
									"",
									"",
									"                displayResponse('Create Composition Job Response Details', responseBody.data);",
									"            } else {",
									"",
									"                // Retrieve the current retry count",
									"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;",
									"",
									"                if (retryCount < maxRetries) {",
									"                    // Increment the retry count and set it back to the environment",
									"                    retryCount++;",
									"                    pm.environment.set('retryCount', retryCount);",
									"",
									"                    console.log(`Retrying... Attempt ${retryCount}`);",
									"",
									"                    setTimeout(() => {",
									"                        checkJobStatus(jobId);",
									"                    }, 1000);",
									"",
									"                    displayResponse('Create Composition Job Response Details2', responseBody.data);",
									"",
									"                } else {",
									"                    console.log('Maximum retry limit reached.');",
									"                    displayResponse(responseBody.data.error ? 'Create Composition Error Details' : 'Final Job Status Check', responseBody.data);",
									"                }",
									"            }",
									"        }",
									"    });",
									"}",
									"",
									"// Call the function with the job ID",
									"checkJobStatus(number);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-dc49cc5d-7070-4a4b-a318-abe4ebac306b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"signed_data\": \"{{composition_signed_content}}\"\n}"
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/compositions",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"compositions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get job",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52420b86-7c41-4f20-a7ee-5fafb08995ad",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a28f87a2-e0fd-4b79-8a87-ddf7498da27f",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-fde79c1f-b607-4ac6-abf3-d3487ddd1347",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/jobs/686bb5851d3a330042b360de",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"jobs",
								"686bb5851d3a330042b360de"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Composition by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70cbb091-fd9b-40f6-beec-d19e360f36dd",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39e15f7f-3a8b-4584-8808-bfc838b10e5d",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-63d21060-5176-4131-9779-78000dbad4a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/patients/3241244c-acf7-40bf-8a35-d290607fb53e/compositions/56b80b1f-04af-4c37-985a-80f6ad9b6d72",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"3241244c-acf7-40bf-8a35-d290607fb53e",
								"compositions",
								"56b80b1f-04af-4c37-985a-80f6ad9b6d72"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Composition by search params",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70cbb091-fd9b-40f6-beec-d19e360f36dd",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39e15f7f-3a8b-4584-8808-bfc838b10e5d",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-5a1f40d0-2b47-451e-b971-d13f99a3d903",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/patients/3241244c-acf7-40bf-8a35-d290607fb53e/compositions/search?type=ADOPTION",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"3241244c-acf7-40bf-8a35-d290607fb53e",
								"compositions",
								"search"
							],
							"query": [
								{
									"key": "encounter_id",
									"value": "3a0dcfd7-5348-4511-b46d-b2dc4b94ca98",
									"disabled": true
								},
								{
									"key": "type",
									"value": "ADOPTION"
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Composition Print Form",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e9e87d93-dba2-4130-8cc5-39bd2171071b",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f6d8ae74-df81-4694-9959-bcbf3be842a3",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-ceb41cb1-0748-430c-b1b3-c4efb688a9b1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/compositions/113c50b4-44a5-443d-959d-c1701b5e7334/print_form?form_type=INFO_CERTIFICATE",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"compositions",
								"113c50b4-44a5-443d-959d-c1701b5e7334",
								"print_form"
							],
							"query": [
								{
									"key": "form_type",
									"value": "INFO_CERTIFICATE"
								},
								{
									"key": "form_type",
									"value": "EXTRACT",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark in error Composition",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1b9771dc-0fa3-48eb-8148-1a797df5f5fe",
								"exec": [
									"const personFromEpisode = pm.globals.get('patient_id_from_episode') || \"\"; //or use id your patient\r",
									"const COMPOSITION_ID = 'cc11e17f-710e-419d-bd38-ffea3b41f0b1';\r",
									"\r",
									"function displayResponse(title, data) {\r",
									"    console.log(title, data)\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: `${pm.globals.get('host')}/api/patients/${personFromEpisode}/compositions/${COMPOSITION_ID}`,\r",
									"    method: \"GET\",\r",
									"    header: {\r",
									"        \"Content-Type\": \"application/json\",\r",
									"        \"api-key\": `${pm.environment.get('mis_client_secret')}`,\r",
									"        \"Authorization\": `Bearer ${pm.environment.get('access_token')}`,\r",
									"        \"X-Custom-PSK\": `${pm.globals.get('x-custom-psk')}`\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err) {\r",
									"        displayResponse('Error get Composition', err);\r",
									"        console.error(\"Request Error:\", err);\r",
									"        return;\r",
									"    }\r",
									"\r",
									"    try {\r",
									"        // Parse the response\r",
									"        const responseData = res.json();\r",
									"        // Extract data from response\r",
									"        const { data } = responseData;\r",
									"\r",
									"        // Add `status_reason` field\r",
									"        data.status_reason = {\r",
									"            \"coding\": [\r",
									"                {\r",
									"                    \"code\": \"incorrect_patient\",\r",
									"                    \"system\": \"COMPOSITION_MARK_IN_ERROR_REASONS\"\r",
									"                }\r",
									"            ]\r",
									"        };\r",
									"\r",
									"        // Add `status` field\r",
									"        data.status = 'ENTERED_IN_ERROR';\r",
									"\r",
									"        // Add `explanatory_letter` field\r",
									"        data.explanatory_letter = \"МВ скасовано\";\r",
									"\r",
									"        pm.globals.set(\"Composition_cancel_body\", JSON.stringify(data));\r",
									"\r",
									"\r",
									"        console.log(data)\r",
									"        displayResponse('Composition cancel body', data);\r",
									"    } catch (parseError) {\r",
									"        console.error(\"Response parsing error. Raw body:\", res.text());\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95315bda-c688-4b79-9c47-618b879a3026",
								"exec": [
									"function displayResponse(title, data) {\r",
									"    const html = `\r",
									"        <h1>${title}</h1>\r",
									"        <pre>${JSON.stringify(data, null, 2)}</pre>`;\r",
									"    pm.visualizer.set(html);\r",
									"}\r",
									"\r",
									"pm.test(\"Mark in error Composition Response status code is 202\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(202);\r",
									"});\r",
									"\r",
									"// Get the response body from the main request\r",
									"const resBody = pm.response.text();\r",
									"const resData = JSON.parse(resBody);\r",
									"\r",
									"if (resData && resData.error) {\r",
									"    displayResponse('Mark in error Composition Response Error Details', resData.error);\r",
									"}\r",
									"\r",
									"const href = resData.data.links[0].href;\r",
									"console.log(\"Extracted href:\", href);\r",
									"\r",
									"// Extract the job ID from the href\r",
									"const number = href.split('/jobs/')[1];\r",
									"console.log(\"Extracted number:\", number);\r",
									"\r",
									"// Initialize retry counter in the environment\r",
									"pm.environment.set('retryCount', 0);\r",
									"\r",
									"// Function to check job status\r",
									"function checkJobStatus(jobId) {\r",
									"\r",
									"    const url = `https://api-demo.ehealth.gov.ua/api/jobs/${jobId}`;\r",
									"    const maxRetries = 3; // Set the maximum number of retries\r",
									"\r",
									"    pm.sendRequest({\r",
									"        method: 'GET',\r",
									"        url: url,\r",
									"        header: {\r",
									"            'Content-Type': 'application/json',\r",
									"            'Authorization': 'Bearer WUFKZDJ2TFhtUHNvZlQ1OUVuazhpUT09',\r",
									"            'api-key': '30276e63617461a185ec',\r",
									"            'X-Custom-PSK': 'a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e'\r",
									"        }\r",
									"    }, function (err, res) {\r",
									"\r",
									"        pm.test(`Job status check response status is 200 or 303`, function () {\r",
									"            pm.expect([200, 303]).to.include(res.code);\r",
									"        });\r",
									"\r",
									"        if (err) {\r",
									"            displayResponse('Request Error', { error: err.message });\r",
									"            console.error('Error checking job status:', err);\r",
									"        } else {\r",
									"\r",
									"            const responseBody = res.json();\r",
									"            console.log('Job Status:', responseBody.data.status);\r",
									"\r",
									"            if (responseBody.data.status === 'processed') {\r",
									"\r",
									"                pm.test(`Mark in error Composition Job Success. Response status is 303 ${JSON.stringify(res.json(), null, 2)}`, function () {\r",
									"                    pm.expect(res.code).to.eql(303);\r",
									"                });\r",
									"\r",
									"\r",
									"                displayResponse('Mark in error Composition Job Response Details', responseBody.data);\r",
									"            } else {\r",
									"\r",
									"                // Retrieve the current retry count\r",
									"                let retryCount = parseInt(pm.environment.get('retryCount')) || 0;\r",
									"\r",
									"                if (retryCount < maxRetries) {\r",
									"                    // Increment the retry count and set it back to the environment\r",
									"                    retryCount++;\r",
									"                    pm.environment.set('retryCount', retryCount);\r",
									"\r",
									"                    console.log(`Retrying... Attempt ${retryCount}`);\r",
									"\r",
									"                    setTimeout(() => {\r",
									"                        checkJobStatus(jobId);\r",
									"                    }, 1000);\r",
									"\r",
									"                    // displayResponse('Mark in error Composition Job Response Details2', responseBody.data);\r",
									"\r",
									"                } else {\r",
									"                    console.log('Maximum retry limit reached.');\r",
									"                    // displayResponse(responseBody.data.error ? 'Mark in error Composition Error Details' : 'Final Job Status Check', responseBody.data);\r",
									"                }\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"// Call the function with the job ID\r",
									"checkJobStatus(number);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-3ac31ee6-5fe1-4bba-944c-381e5e4ef7b3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"signed_data\":\"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id_from_episode}}/compositions/cc11e17f-710e-419d-bd38-ffea3b41f0b1/actions/mark_in_error",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id_from_episode}}",
								"compositions",
								"cc11e17f-710e-419d-bd38-ffea3b41f0b1",
								"actions",
								"mark_in_error"
							]
						}
					},
					"response": []
				},
				{
					"name": "Resent SMS Composition",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "92d88325-4f78-44c2-9189-00da6fb7a91e"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Job created\"] = responseCode.code === 202;",
									"var jsonData = JSON.parse(responseBody);",
									"//pm.environment.set(\"job_id\", jsonData.data.id);",
									"var job_id=jsonData.data.links[0].href.substring(6);",
									"pm.environment.set(\"job_id\", job_id);"
								],
								"type": "text/javascript",
								"id": "0831c856-49e7-4b52-b0ba-7007877958d7"
							}
						}
					],
					"id": "15381251-c7ce4e25-c9e8-4a64-a894-414a0de28496",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{mis_access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "{{X-Custom-PSK}}",
								"value": "{{X-Custom-value}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id}}/compositions/{{composition_id}}/actions/resend",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id}}",
								"compositions",
								"{{composition_id}}",
								"actions",
								"resend"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Composition Context",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "e30e68b4-6d9b-4974-ada4-9afa17788cc2"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "86518bed-8fbe-4762-8636-6e1abad83eab"
							}
						}
					],
					"id": "15381251-c0d0414d-82e6-41ae-9f94-a7ac3a1547dc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{mis_access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "{{X-Custom-PSK}}",
								"value": "{{X-Custom-value}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/patients/{{patient_id}}/compositions/{{composition_id}}/context",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"{{patient_id}}",
								"compositions",
								"{{composition_id}}",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Composition Configurations by search params",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70cbb091-fd9b-40f6-beec-d19e360f36dd",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39e15f7f-3a8b-4584-8808-bfc838b10e5d",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-422357bf-099e-4253-8488-3f4307917a8c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "a2ffb0888561e50d5a868faf56ea5708619b7ecc03b5bd21ff1a50f37a3f430e",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"COMPOSITION_ENCOUNTER_TYPE\": {\r\n        \"check\": [\r\n            \"covid\",\r\n            \"discharge\",\r\n            \"field\",\r\n            \"home\",\r\n            \"patient_identity\",\r\n            \"service_delivery_location\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_SECTION_NESTING_LEVEL\": {\r\n        \"check\": 5\r\n    },\r\n    \"COMPOSITION_EVENT_PERIOD_END_REQUIRED\": [\r\n        {\r\n            \"check\": true,\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_ELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_AUTHOR_SPECIALITY\": {\r\n        \"check\": [\r\n            \"THERAPIST\",\r\n            \"FAMILY_DOCTOR\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_PERSON_AGE\": [\r\n        {\r\n            \"check\": {\r\n                \"max\": {\r\n                    \"units\": \"years\",\r\n                    \"value\": 99\r\n                },\r\n                \"min\": {\r\n                    \"units\": \"years\",\r\n                    \"value\": 18\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_ATTESTER_VERIFICATION_STATUS\": {\r\n        \"check\": [\r\n            \"VERIFIED\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_SIGN_TERM\": {\r\n        \"check\": {\r\n            \"max\": 5,\r\n            \"min\": 1\r\n        }\r\n    },\r\n    \"COMPOSITION_ENCOUNTER_STATUS\": {\r\n        \"check\": [\r\n            \"Finished\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_EVENT_CODE\": {\r\n        \"check\": [\r\n            [\r\n                \"ADOPTION_ADOPTER_ELIGIBLE\"\r\n            ],\r\n            [\r\n                \"ADOPTION_ADOPTER_INELIGIBLE\"\r\n            ]\r\n        ]\r\n    },\r\n    \"COMPOSITION_PRINTFORM_ALLOW_CODES\": [\r\n        {\r\n            \"check\": [\r\n                \"MIS\",\r\n                \"NHS ADMIN\"\r\n            ],\r\n            \"condition\": {\r\n                \"printform_type\": {\r\n                    \"code\": \"INFO_CERTIFICATE\",\r\n                    \"system\": \"COMPOSITION_PRINTFORM_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"NHS ADMIN\"\r\n            ],\r\n            \"condition\": {\r\n                \"printform_type\": {\r\n                    \"code\": \"EXTRACT\",\r\n                    \"system\": \"COMPOSITION_PRINTFORM_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_EVENT_ADMIT_CODES\": [\r\n        {\r\n            \"check\": [\r\n                \"ADOPTION_ADOPTER_ELIGIBLE\",\r\n                \"ADOPTION_ADOPTER_INELIGIBLE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_RESOURCE_PERIOD_START\": [\r\n        {\r\n            \"check\": {\r\n                \"max\": 365,\r\n                \"min\": 1\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"episode_of_care\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": {\r\n                \"max\": 90,\r\n                \"min\": 1\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"care_plan\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": {\r\n                \"max\": 365,\r\n                \"min\": 0\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"medication_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": {\r\n                \"max\": 90,\r\n                \"min\": 11\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"service_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": {\r\n                \"max\": 365,\r\n                \"min\": 0\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"device_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_AUTHOR_MAIN_SPECIALITY\": {\r\n        \"check\": [\r\n            \"THERAPIST\",\r\n            \"FAMILY_DOCTOR\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_SECTION_ENTRY_PROHIBITED_CODES\": [\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"1996-8\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"59826-8\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_ELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                },\r\n                \"resource_type\": {\r\n                    \"code\": \"observation\",\r\n                    \"system\": \"eHealth/resources\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"Z72.3\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"N84.9\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_ELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                },\r\n                \"resource_type\": {\r\n                    \"code\": \"condition\",\r\n                    \"system\": \"eHealth/resources\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_LEGAL_ENTITY_TYPE\": {\r\n        \"check\": [\r\n            \"PRIMARY_CARE\",\r\n            \"OUTPATIENT\",\r\n            \"INPATIENT\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_AUTHOR_POSITION\": {\r\n        \"check\": [\r\n            \"P7\",\r\n            \"P10\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_RESOURCE_CODE\": [\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"HepB\",\r\n                    \"system\": \"eHealth/vaccine_codes\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"immunization\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"Z72.3\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"M48.07\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"N84.9\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"R53\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"E14.52\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"F20.0\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"F31.6\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"condition\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"73771-8\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"59826-8\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"1996-8\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"2069-3\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"15074-8\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"14578-9\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"11011-4\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"22327-1\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"observation\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"078dd90c-0832-4d39-a6f4-80f9f7673b6b\",\r\n                    \"system\": \"services\"\r\n                },\r\n                {\r\n                    \"code\": \"e264efd5-0323-4193-a750-3d4c010b3f18\",\r\n                    \"system\": \"services\"\r\n                },\r\n                {\r\n                    \"code\": \"d8a7e6e5-8d18-453e-9273-f8218f2d81a6\",\r\n                    \"system\": \"services\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"diagnostic_report\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_ENCOUNTER_CLASS\": [\r\n        {\r\n            \"check\": {\r\n                \"code\": \"AMB\",\r\n                \"system\": \"eHealth/encounter_classes\"\r\n            },\r\n            \"condition\": {\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_EMPLOYEE_TYPE\": [\r\n        {\r\n            \"check\": [\r\n                \"DOCTOR\",\r\n                \"SPECIALIST\"\r\n            ],\r\n            \"condition\": {\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_PREPERSON_ALLOW\": [\r\n        {\r\n            \"check\": true\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_RESOURCE_CREATED_AT\": [\r\n        {\r\n            \"check\": {\r\n                \"max\": 30,\r\n                \"min\": 0\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"diagnostic_report\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_RESOURCE_STATUS\": [\r\n        {\r\n            \"check\": [\r\n                \"active\",\r\n                \"closed\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"episode_of_care\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"finished\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"encounter\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"active\",\r\n                \"completed\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"care_plan\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"SCHEDULED\",\r\n                \"IN_PROGRESS\",\r\n                \"COMPLETED\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"activity\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"completed\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"procedure\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"completed\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"immunization\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"active\",\r\n                \"finished\",\r\n                \"recurrence\",\r\n                \"remission\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"condition\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"final\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"diagnostic_report\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"completed\",\r\n                \"active\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"medication_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"completed\",\r\n                \"active\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"service_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"active\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"legal_entity\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"valid\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"observation\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"expired\",\r\n                \"processed\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"medication_dispense\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"revoked\",\r\n                \"completed\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"device_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"unknown\",\r\n                \"completed\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"device_dispense\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"completed\"\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"clinical_impression\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_RESOURCE_TYPE\": [\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": [\r\n                        \"AMB\",\r\n                        \"DG\",\r\n                        \"LAB\",\r\n                        \"PHC\",\r\n                        \"TREATMENT\"\r\n                    ],\r\n                    \"system\": \"eHealth/episode_types\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"episodes\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"service_delivery_location\",\r\n                    \"system\": \"eHealth/encounter_types\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"encounter\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": [\r\n                        \"AMBULANT_CLINIC\",\r\n                        \"CLINIC\"\r\n                    ],\r\n                    \"system\": \"DIVISION_TYPE\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"division\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"service\",\r\n                    \"system\": \"eHealth/resources\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"procedure\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_EVENT_PERIOD_REQUIRED \": [\r\n        {\r\n            \"check\": [\r\n                \"event.period.start\",\r\n                \"event.period.end\"\r\n            ],\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_ELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"event.period.start\"\r\n            ],\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_INELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_RESOURCE_PERIOD_END\": [\r\n        {\r\n            \"check\": {\r\n                \"max\": 90,\r\n                \"min\": 1\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"encounter\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": {\r\n                \"max\": 365,\r\n                \"min\": 3\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"procedure\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": {\r\n                \"max\": 30,\r\n                \"min\": 1\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"diagnostic_report\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": {\r\n                \"max\": 30,\r\n                \"min\": 0\r\n            },\r\n            \"condition\": {\r\n                \"resource_type\": {\r\n                    \"code\": \"observation\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_IMMUNIZATION_EXPLANATION_REASON_NOT_GIVEN\": [\r\n        {\r\n            \"check\": [\r\n                \"lack_of_medical_indications\",\r\n                \"lack_of_injection_supply\",\r\n                \"lack_of_vaccine\",\r\n                \"permanent_medical_contraindication\",\r\n                \"temporary_medical_contraindication\"\r\n            ],\r\n            \"condition\": {\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_ATTESTER_TYPE\": {\r\n        \"check\": [\r\n            \"DOCTOR\",\r\n            \"SPECIALIST\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_EMPLOYEE_STATUS\": [\r\n        {\r\n            \"check\": [\r\n                \"approved\",\r\n                \"reorganized\"\r\n            ],\r\n            \"condition\": {\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_IMMUNIZATION_REPORT_ORIGIN\": [\r\n        {\r\n            \"check\": [\r\n                \"CDC\",\r\n                \"DCC\",\r\n                \"FVD\",\r\n                \"HCCV\",\r\n                \"ICVP\",\r\n                \"UA063o\",\r\n                \"UAICVP\",\r\n                \"historical_record\"\r\n            ],\r\n            \"condition\": {\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_CATEGORY_SIGN_DATE_REPLACE\": {\r\n        \"check\": {\r\n            \"max\": 30,\r\n            \"min\": 0\r\n        }\r\n    },\r\n    \"COMPOSITION_ENCOUNTER_SIGN_TERM\": {\r\n        \"check\": {\r\n            \"max\": 30,\r\n            \"min\": 0\r\n        }\r\n    },\r\n    \"COMPOSITION_SECTION_TITLE_MANUAL_FILL\": [\r\n        {\r\n            \"check\": true,\r\n            \"condition\": {\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_EVENT_PERIOD_DURATION\": [\r\n        {\r\n            \"check\": {\r\n                \"units\": \"years\",\r\n                \"value\": 1\r\n            },\r\n            \"condition\": {\r\n                \"age\": {\r\n                    \"max\": {\r\n                        \"units\": \"years\",\r\n                        \"value\": 70\r\n                    },\r\n                    \"min\": {\r\n                        \"units\": \"days\",\r\n                        \"value\": 18\r\n                    }\r\n                },\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_ELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_ENTRY_REQUIRED_CODES\": [\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"11011-4\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"22327-1\",\r\n                    \"system\": \"eHealth/LOINC/observation_codes\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_INELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                },\r\n                \"resource_type\": {\r\n                    \"code\": \"observation\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"R53\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                },\r\n                {\r\n                    \"code\": \"M48.07\",\r\n                    \"system\": \"eHealth/ICD10_AM/condition_codes\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_INELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                },\r\n                \"resource_type\": {\r\n                    \"code\": \"condition\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_ATTESTER_POSITION\": {\r\n        \"check\": [\r\n            \"P7\",\r\n            \"P10\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_AUTHOR_TYPE\": {\r\n        \"check\": [\r\n            \"АSSISTANT\",\r\n            \"DOCTOR\",\r\n            \"SPECIALIST\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_EVENT_PERIOD_EMPTY\": [\r\n        {\r\n            \"check\": [\r\n                \"event.period.end\"\r\n            ],\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_INELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_AUTHOR_VERIFICATION_STATUS\": {\r\n        \"check\": [\r\n            \"VERIFIED\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_SECTION_EMPTY_REASON\": [\r\n        {\r\n            \"check\": [\r\n                \"NILKNOWN\",\r\n                \"NOTASKED\",\r\n                \"WITHHELD\",\r\n                \"UNAVAILABLE\"\r\n            ]\r\n        }\r\n    ],\r\n    \"COMPOSITION_ATTESTER_SPECIALITY\": {\r\n        \"check\": [\r\n            \"THERAPIST\",\r\n            \"FAMILY_DOCTOR\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_MARK_IN_ERROR_STATUS_REASON\": {\r\n        \"check\": [\r\n            \"incorrect_patient\"\r\n        ]\r\n    },\r\n    \"COMPOSITION_AUTHOR_SPECIALITY_POSITION\": [\r\n        {\r\n            \"check\": [\r\n                \"P10\"\r\n            ],\r\n            \"condition\": {\r\n                \"speciality\": [\r\n                    \"THERAPIST\"\r\n                ]\r\n            }\r\n        },\r\n        {\r\n            \"check\": [\r\n                \"P7\"\r\n            ],\r\n            \"condition\": {\r\n                \"speciality\": [\r\n                    \"FAMILY_DOCTOR\"\r\n                ]\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_RESOURCES\": [\r\n        {\r\n            \"check\": [\r\n                {\r\n                    \"code\": \"episode_of_care\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"diagnostic_report\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"encounter\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"care_plan\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"activity\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"procedure\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"condition\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"observation\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"immunization\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"medication_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"service_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"medication_dispense\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"device_request\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"device_dispense\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"clinical_impression\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"employee\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"composition\",\r\n                    \"system\": \"eHealth/resources\"\r\n                },\r\n                {\r\n                    \"code\": \"division\",\r\n                    \"system\": \"eHealth/resources\"\r\n                }\r\n            ],\r\n            \"condition\": {\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_SECTION_SECTION_ENTRY_CONDITION_VERIFICATION_STATUS\": [\r\n        {\r\n            \"check\": [\r\n                \"confirmed\",\r\n                \"differential\",\r\n                \"entered_in_error\"\r\n            ],\r\n            \"condition\": {\r\n                \"section_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_FREE_SECTION\",\r\n                    \"system\": \"COMPOSITION_SECTION_CODES\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    \"COMPOSITION_EVENT_PERIOD_END_EMPTY\": [\r\n        {\r\n            \"check\": true,\r\n            \"condition\": {\r\n                \"event_code\": {\r\n                    \"code\": \"ADOPTION_ADOPTER_INELIGIBLE\",\r\n                    \"system\": \"COMPOSITION_EVENTS\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{host}}/api/composition_configurations?type=ADOPTION&category=ADOPTER",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"composition_configurations"
							],
							"query": [
								{
									"key": "type",
									"value": "DRIVERS",
									"disabled": true
								},
								{
									"key": "category",
									"value": "DRIVERS_GROUP1",
									"disabled": true
								},
								{
									"key": "category",
									"value": "DRIVERS_GROUP2",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								},
								{
									"key": "type",
									"value": "ADOPTION"
								},
								{
									"key": "category",
									"value": "ADOPTER"
								},
								{
									"key": "category",
									"value": "ADOPTER_RELATIVE",
									"disabled": true
								},
								{
									"key": "inserted_at_from",
									"value": "2024-11-28T14:20:54.475933Z",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Activity details in Composition context",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c80641ce-3108-4403-81e1-55ed44c352c8",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8a6c724e-1b53-4b56-9d96-357f06826fb1",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-5c5796c4-f036-4206-8d57-a9d364e99af1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/patients/3241244c-acf7-40bf-8a35-d290607fb53e/compositions/56b80b1f-04af-4c37-985a-80f6ad9b6d72/activities/269ed302-082d-4ecf-82c1-025c8f1a97eb",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"patients",
								"3241244c-acf7-40bf-8a35-d290607fb53e",
								"compositions",
								"56b80b1f-04af-4c37-985a-80f6ad9b6d72",
								"activities",
								"269ed302-082d-4ecf-82c1-025c8f1a97eb"
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-b23d9b4b-9fe9-4be0-badf-508b48c1760c"
		},
		{
			"name": "Rule engine rules",
			"item": [
				{
					"name": "Get Rule engine rule list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70cbb091-fd9b-40f6-beec-d19e360f36dd",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39e15f7f-3a8b-4584-8808-bfc838b10e5d",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-4bf1b3a5-8e11-4ea2-9e2c-76c6189674cd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/rule_engine_rules",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"rule_engine_rules"
							],
							"query": [
								{
									"key": "name",
									"value": "Some%20name",
									"disabled": true
								},
								{
									"key": "system",
									"value": "eHealth%2Fclinical_impression_patient_categories",
									"disabled": true
								},
								{
									"key": "code",
									"value": "insulin_1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Rule engine rule details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70cbb091-fd9b-40f6-beec-d19e360f36dd",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39e15f7f-3a8b-4584-8808-bfc838b10e5d",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "15381251-87e72a47-5981-4900-b52e-0a571d4d0169",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "api-key",
								"value": "{{mis_client_secret}}"
							},
							{
								"key": "X-Custom-PSK",
								"value": "{{x-custom-psk}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/rule_engine_rules/29f0c495-a06f-46a3-993c-97fac8014cfc",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"rule_engine_rules",
								"29f0c495-a06f-46a3-993c-97fac8014cfc"
							],
							"query": [
								{
									"key": "name",
									"value": "Some%20name",
									"disabled": true
								},
								{
									"key": "system",
									"value": "eHealth%2Fclinical_impression_patient_categories",
									"disabled": true
								},
								{
									"key": "code",
									"value": "insulin_1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page_size",
									"value": "50",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "15381251-f6ff1504-fb7f-4724-9822-ef85a788b399"
		}
	]
}